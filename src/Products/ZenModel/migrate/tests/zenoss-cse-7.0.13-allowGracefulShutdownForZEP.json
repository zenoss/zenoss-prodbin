[
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/redis.conf": {
                "Content": "# Redis configuration file example\n\n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k => 1000 bytes\n# 1kb => 1024 bytes\n# 1m => 1000000 bytes\n# 1mb => 1024*1024 bytes\n# 1g => 1000000000 bytes\n# 1gb => 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n\n# By default Redis does not run as a daemon. Use 'yes' if you need it.\n# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.\ndaemonize no\n\n# When running daemonized, Redis writes a pid file in /var/run/redis.pid by\n# default. You can specify a custom pid file location here.\npidfile /var/run/redis/redis.pid\n\n# Accept connections on the specified port, default is 6379.\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n\n# If you want you can bind a single interface, if the bind option is not\n# specified all the interfaces will listen for incoming connections.\n#\n# comment out bind as workaround for ZEN-10504\nbind 0.0.0.0\n\n# Specify the path for the unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket /tmp/redis.sock\n# unixsocketperm 755\n\n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n\n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Take the connection alive from the point of view of network\n#    equipment in the middle.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 60 seconds.\ntcp-keepalive 0\n\n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development/testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important / critical messages are logged)\nloglevel notice\n\n# Specify the log file name. Also 'stdout' can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to /dev/null\nlogfile /var/log/redis/redis.log\n\n# To enable logging to the system logger, just set 'syslog-enabled' to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n\n# Specify the syslog identity.\n# syslog-ident redis\n\n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n\n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT <dbid> where\n# dbid is a number between 0 and 'databases'-1\ndatabases 16\n\n################################ SNAPSHOTTING  #################################\n#\n# Save the DB on disk:\n#\n#   save <seconds> <changes>\n#\n#   Will save the DB if both the given number of seconds and the given\n#   number of write operations against the DB occurred.\n#\n#   In the example below the behaviour will be to save:\n#   after 900 sec (15 min) if at least 1 key changed\n#   after 300 sec (5 min) if at least 10 keys changed\n#   after 60 sec if at least 10000 keys changed\n#\n#   Note: you can disable saving at all commenting all the \"save\" lines.\n#\n#   It is also possible to remove all the previously configured save\n#   points by adding a save directive with a single empty string argument\n#   like in the following example:\n#\n#   save \"\"\n\nsave 900 1\nsave 300 10\nsave 60 10000\n\n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in an hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# distater will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usually even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n\n# Compress string objects using LZF when dump .rdb databases?\n# For default that's set to 'yes' as it's almost always a win.\n# If you want to save some CPU in the saving child set it to 'no' but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n\n# The filename where to dump the DB\ndbfilename dump.rdb\n\n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the 'dbfilename' configuration directive.\n# \n# The Append Only File will also be created inside this directory.\n# \n# Note that you must specify a directory here, not a file name.\ndir /var/lib/redis/\n\n################################# REPLICATION #################################\n\n# Master-Slave replication. Use slaveof to make a Redis instance a copy of\n# another Redis server. Note that the configuration is local to the slave\n# so for example it is possible to configure the slave to save the DB with a\n# different interval, or to listen to another port, and so on.\n#\n# slaveof <masterip> <masterport>\n\n# If the master is password protected (using the \"requirepass\" configuration\n# directive below) it is possible to tell the slave to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the slave request.\n#\n# masterauth <master-password>\n\n# When a slave loses its connection with the master, or when the replication\n# is still in progress, the slave can act in two different ways:\n#\n# 1) if slave-serve-stale-data is set to 'yes' (the default) the slave will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) if slave-serve-stale-data is set to 'no' the slave will reply with\n#    an error \"SYNC with master in progress\" to all the kind of commands\n#    but to INFO and SLAVEOF.\n#\nslave-serve-stale-data yes\n\n# You can configure a slave instance to accept writes or not. Writing against\n# a slave instance may be useful to store some ephemeral data (because data\n# written on a slave will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default slaves are read-only.\n#\n# Note: read only slaves are not designed to be exposed to untrusted clients\n# on the internet. It's just a protection layer against misuse of the instance.\n# Still a read only slave exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extend you can improve\n# security of read only slaves using 'rename-command' to shadow all the\n# administrative / dangerous commands.\nslave-read-only yes\n\n# Slaves send PINGs to server in a predefined interval. It's possible to change\n# this interval with the repl_ping_slave_period option. The default value is 10\n# seconds.\n#\n# repl-ping-slave-period 10\n\n# The following option sets a timeout for both Bulk transfer I/O timeout and\n# master data or ping response timeout. The default value is 60 seconds.\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-slave-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the slave.\n#\n# repl-timeout 60\n\n# Disable TCP_NODELAY on the slave socket after SYNC?\n#\n# If you select \"yes\" Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to slaves. But this can add a delay for\n# the data to appear on the slave side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select \"no\" the delay for data to appear on the slave side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and slaves are many hops away, turning this to \"yes\" may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n\n# The slave priority is an integer number published by Redis in the INFO output.\n# It is used by Redis Sentinel in order to select a slave to promote into a\n# master if the master is no longer working correctly.\n#\n# A slave with a low priority number is considered better for promotion, so\n# for instance if there are three slaves with priority 10, 100, 25 Sentinel will\n# pick the one wtih priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the slave as not able to perform the\n# role of master, so a slave with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nslave-priority 100\n\n################################## SECURITY ###################################\n\n# Require clients to issue AUTH <PASSWORD> before processing any other\n# commands.  This might be useful in environments in which you do not trust\n# others with access to the host running redis-server.\n#\n# This should stay commented out for backward compatibility and because most\n# people do not need auth (e.g. they run their own servers).\n# \n# Warning: since Redis is pretty fast an outside user can try up to\n# 150k passwords per second against a good box. This means that you should\n# use a very strong password otherwise it will be very easy to break.\n#\n# requirepass foobared\n\n# Command renaming.\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG \"\"\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to slaves may cause problems.\n\n################################### LIMITS ####################################\n\n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error 'max number of clients reached'.\n#\n# maxclients 10000\n\n# Don't use more memory than the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# accordingly to the eviction policy selected (see maxmemmory-policy).\n#\n# If Redis can't remove keys according to the policy, or if the policy is\n# set to 'noeviction', Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU cache, or to set\n# an hard memory limit for an instance (using the 'noeviction' policy).\n#\n# WARNING: If you have slaves attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the slaves are subtracted\n# from the used memory count, so that network problems / resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of slaves is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have slaves attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for slave\n# output buffers (but this is not needed if the policy is 'noeviction').\n#\nmaxmemory {{percentScale .RAMCommitment 0.9}}\n\n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select among five behaviors:\n# \n# volatile-lru -> remove the key with an expire set using an LRU algorithm\n# allkeys-lru -> remove any key accordingly to the LRU algorithm\n# volatile-random -> remove a random key with an expire set\n# allkeys-random -> remove a random key, any key\n# volatile-ttl -> remove the key with the nearest expire time (minor TTL)\n# noeviction -> don't expire at all, just return an error on write operations\n# \n# Note: with any of the above policies, Redis will return an error on write\n#       operations, when there are not suitable keys for eviction.\n#\n#       At the date of writing this commands are: set setnx setex append\n#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n#       getset mset msetnx exec sort\n#\n# The default is:\n#\n# maxmemory-policy volatile-lru\n\n# LRU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can select as well the sample\n# size to check. For instance for default Redis will check three keys and\n# pick the one that was used less recently, you can change the sample size\n# using the following configuration directive.\n#\n# maxmemory-samples 3\n\n############################## APPEND ONLY MODE ###############################\n\n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check http://redis.io/topics/persistence for more information.\n\nappendonly no\n\n# The name of the append only file (default: \"appendonly.aof\")\n# appendfilename appendonly.aof\n\n# The fsync() call tells the Operating System to actually write data on disk\n# instead to wait for more data in the output buffer. Some OS will really flush \n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don't fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log . Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is \"everysec\", as that's usually the right compromise between\n# speed and data safety. It's up to you to understand if you can relax this to\n# \"no\" that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that's snapshotting),\n# or on the contrary, use \"always\" that's very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http://antirez.com/post/redis-persistence-demystified.html\n#\n# If unsure, use \"everysec\".\n\n# appendfsync always\nappendfsync everysec\n# appendfsync no\n\n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I/O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it's possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as \"appendfsync none\". In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n# \n# If you have latency problems turn this to \"yes\". Otherwise leave it as\n# \"no\" that is the safest pick from the point of view of durability.\nno-appendfsync-on-rewrite no\n\n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n# \n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n\n################################ LUA SCRIPTING  ###############################\n\n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceed the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet called write commands. The second\n# is the only way to shut down the server in the case a write commands was\n# already issue by the script but the user don't want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n\n################################## SLOW LOG ###################################\n\n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I/O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n# \n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n\n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n\n############################### ADVANCED CONFIG ###############################\n\n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n\n# Similarly to hashes, small lists are also encoded in a special way in order\n# to save a lot of space. The special representation is only used when\n# you are under the following limits:\nlist-max-ziplist-entries 512\nlist-max-ziplist-value 64\n\n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happens to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n\n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n\n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into an hash table\n# that is rehashing, the more rehashing \"steps\" are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n# \n# The default is to use this millisecond 10 times every second in order to\n# active rehashing the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use \"activerehashing no\" if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply form time to time\n# to queries with 2 milliseconds delay.\n#\n# use \"activerehashing yes\" if you don't have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n\n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub/Sub client can't consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -> normal clients\n# slave  -> slave clients and MONITOR clients\n# pubsub -> clients subcribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes / 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don't receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and slave clients, since\n# subscribers and slaves receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit slave 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n\n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeot, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are perforemd with the same frequency, but Redis checks for\n# tasks to perform accordingly to the specified \"hz\" value.\n#\n# By default \"hz\" is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n\n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n\n################################## INCLUDES ###################################\n\n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis server but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# include /path/to/local.conf\n# include /path/to/other.conf\n",
                "Filename": "/etc/redis.conf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Redis server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "metrics": {
                "Interval": 15,
                "Script": "/opt/zenoss/bin/healthchecks/redis/metrics",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "53ne7w5wounjd8dv4ex8cc6gc",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "redis"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/redis/redis.log",
                "Type": "redis"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "total_commands_processed",
                            "legend": "Data Points",
                            "metric": "redis.total_commands_processed",
                            "metricSource": "redis",
                            "name": "Total Commands",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of commands per second",
                    "footer": false,
                    "format": "",
                    "id": "totalcommands",
                    "maxy": null,
                    "miny": null,
                    "name": "Total Commands",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "53ne7w5wounjd8dv4ex8cc6gc"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Commands/s"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "redis internal metrics",
                    "ID": "redis",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "Number of commands processed by redis.",
                            "ID": "redis.total_commands_processed",
                            "Name": "Total Commands",
                            "ResetValue": 0,
                            "Unit": "Count"
                        }
                    ],
                    "Name": "redis internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"redis.total_commands_processed\",\"tags\":{\"controlplane_service_id\":[\"53ne7w5wounjd8dv4ex8cc6gc\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "redis",
        "OomKillDisable": true,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/redis.conf": {
                "Content": "# Redis configuration file example\n\n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k => 1000 bytes\n# 1kb => 1024 bytes\n# 1m => 1000000 bytes\n# 1mb => 1024*1024 bytes\n# 1g => 1000000000 bytes\n# 1gb => 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n\n# By default Redis does not run as a daemon. Use 'yes' if you need it.\n# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.\ndaemonize no\n\n# When running daemonized, Redis writes a pid file in /var/run/redis.pid by\n# default. You can specify a custom pid file location here.\npidfile /var/run/redis/redis.pid\n\n# Accept connections on the specified port, default is 6379.\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n\n# If you want you can bind a single interface, if the bind option is not\n# specified all the interfaces will listen for incoming connections.\n#\n# comment out bind as workaround for ZEN-10504\nbind 0.0.0.0\n\n# Specify the path for the unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket /tmp/redis.sock\n# unixsocketperm 755\n\n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n\n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Take the connection alive from the point of view of network\n#    equipment in the middle.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 60 seconds.\ntcp-keepalive 0\n\n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development/testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important / critical messages are logged)\nloglevel notice\n\n# Specify the log file name. Also 'stdout' can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to /dev/null\nlogfile /var/log/redis/redis.log\n\n# To enable logging to the system logger, just set 'syslog-enabled' to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n\n# Specify the syslog identity.\n# syslog-ident redis\n\n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n\n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT <dbid> where\n# dbid is a number between 0 and 'databases'-1\ndatabases 16\n\n################################ SNAPSHOTTING  #################################\n#\n# Save the DB on disk:\n#\n#   save <seconds> <changes>\n#\n#   Will save the DB if both the given number of seconds and the given\n#   number of write operations against the DB occurred.\n#\n#   In the example below the behaviour will be to save:\n#   after 900 sec (15 min) if at least 1 key changed\n#   after 300 sec (5 min) if at least 10 keys changed\n#   after 60 sec if at least 10000 keys changed\n#\n#   Note: you can disable saving at all commenting all the \"save\" lines.\n#\n#   It is also possible to remove all the previously configured save\n#   points by adding a save directive with a single empty string argument\n#   like in the following example:\n#\n#   save \"\"\n\nsave 900 1\nsave 300 10\nsave 60 10000\n\n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in an hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# distater will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usually even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n\n# Compress string objects using LZF when dump .rdb databases?\n# For default that's set to 'yes' as it's almost always a win.\n# If you want to save some CPU in the saving child set it to 'no' but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n\n# The filename where to dump the DB\ndbfilename dump.rdb\n\n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the 'dbfilename' configuration directive.\n# \n# The Append Only File will also be created inside this directory.\n# \n# Note that you must specify a directory here, not a file name.\ndir /var/lib/redis/\n\n################################# REPLICATION #################################\n\n# Master-Slave replication. Use slaveof to make a Redis instance a copy of\n# another Redis server. Note that the configuration is local to the slave\n# so for example it is possible to configure the slave to save the DB with a\n# different interval, or to listen to another port, and so on.\n#\n# slaveof <masterip> <masterport>\n\n# If the master is password protected (using the \"requirepass\" configuration\n# directive below) it is possible to tell the slave to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the slave request.\n#\n# masterauth <master-password>\n\n# When a slave loses its connection with the master, or when the replication\n# is still in progress, the slave can act in two different ways:\n#\n# 1) if slave-serve-stale-data is set to 'yes' (the default) the slave will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) if slave-serve-stale-data is set to 'no' the slave will reply with\n#    an error \"SYNC with master in progress\" to all the kind of commands\n#    but to INFO and SLAVEOF.\n#\nslave-serve-stale-data yes\n\n# You can configure a slave instance to accept writes or not. Writing against\n# a slave instance may be useful to store some ephemeral data (because data\n# written on a slave will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default slaves are read-only.\n#\n# Note: read only slaves are not designed to be exposed to untrusted clients\n# on the internet. It's just a protection layer against misuse of the instance.\n# Still a read only slave exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extend you can improve\n# security of read only slaves using 'rename-command' to shadow all the\n# administrative / dangerous commands.\nslave-read-only yes\n\n# Slaves send PINGs to server in a predefined interval. It's possible to change\n# this interval with the repl_ping_slave_period option. The default value is 10\n# seconds.\n#\n# repl-ping-slave-period 10\n\n# The following option sets a timeout for both Bulk transfer I/O timeout and\n# master data or ping response timeout. The default value is 60 seconds.\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-slave-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the slave.\n#\n# repl-timeout 60\n\n# Disable TCP_NODELAY on the slave socket after SYNC?\n#\n# If you select \"yes\" Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to slaves. But this can add a delay for\n# the data to appear on the slave side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select \"no\" the delay for data to appear on the slave side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and slaves are many hops away, turning this to \"yes\" may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n\n# The slave priority is an integer number published by Redis in the INFO output.\n# It is used by Redis Sentinel in order to select a slave to promote into a\n# master if the master is no longer working correctly.\n#\n# A slave with a low priority number is considered better for promotion, so\n# for instance if there are three slaves with priority 10, 100, 25 Sentinel will\n# pick the one wtih priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the slave as not able to perform the\n# role of master, so a slave with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nslave-priority 100\n\n################################## SECURITY ###################################\n\n# Require clients to issue AUTH <PASSWORD> before processing any other\n# commands.  This might be useful in environments in which you do not trust\n# others with access to the host running redis-server.\n#\n# This should stay commented out for backward compatibility and because most\n# people do not need auth (e.g. they run their own servers).\n# \n# Warning: since Redis is pretty fast an outside user can try up to\n# 150k passwords per second against a good box. This means that you should\n# use a very strong password otherwise it will be very easy to break.\n#\n# requirepass foobared\n\n# Command renaming.\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG \"\"\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to slaves may cause problems.\n\n################################### LIMITS ####################################\n\n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error 'max number of clients reached'.\n#\n# maxclients 10000\n\n# Don't use more memory than the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# accordingly to the eviction policy selected (see maxmemmory-policy).\n#\n# If Redis can't remove keys according to the policy, or if the policy is\n# set to 'noeviction', Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU cache, or to set\n# an hard memory limit for an instance (using the 'noeviction' policy).\n#\n# WARNING: If you have slaves attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the slaves are subtracted\n# from the used memory count, so that network problems / resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of slaves is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have slaves attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for slave\n# output buffers (but this is not needed if the policy is 'noeviction').\n#\nmaxmemory {{percentScale .RAMCommitment 0.9}}\n\n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select among five behaviors:\n# \n# volatile-lru -> remove the key with an expire set using an LRU algorithm\n# allkeys-lru -> remove any key accordingly to the LRU algorithm\n# volatile-random -> remove a random key with an expire set\n# allkeys-random -> remove a random key, any key\n# volatile-ttl -> remove the key with the nearest expire time (minor TTL)\n# noeviction -> don't expire at all, just return an error on write operations\n# \n# Note: with any of the above policies, Redis will return an error on write\n#       operations, when there are not suitable keys for eviction.\n#\n#       At the date of writing this commands are: set setnx setex append\n#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n#       getset mset msetnx exec sort\n#\n# The default is:\n#\n# maxmemory-policy volatile-lru\n\n# LRU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can select as well the sample\n# size to check. For instance for default Redis will check three keys and\n# pick the one that was used less recently, you can change the sample size\n# using the following configuration directive.\n#\n# maxmemory-samples 3\n\n############################## APPEND ONLY MODE ###############################\n\n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check http://redis.io/topics/persistence for more information.\n\nappendonly no\n\n# The name of the append only file (default: \"appendonly.aof\")\n# appendfilename appendonly.aof\n\n# The fsync() call tells the Operating System to actually write data on disk\n# instead to wait for more data in the output buffer. Some OS will really flush \n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don't fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log . Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is \"everysec\", as that's usually the right compromise between\n# speed and data safety. It's up to you to understand if you can relax this to\n# \"no\" that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that's snapshotting),\n# or on the contrary, use \"always\" that's very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http://antirez.com/post/redis-persistence-demystified.html\n#\n# If unsure, use \"everysec\".\n\n# appendfsync always\nappendfsync everysec\n# appendfsync no\n\n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I/O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it's possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as \"appendfsync none\". In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n# \n# If you have latency problems turn this to \"yes\". Otherwise leave it as\n# \"no\" that is the safest pick from the point of view of durability.\nno-appendfsync-on-rewrite no\n\n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n# \n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n\n################################ LUA SCRIPTING  ###############################\n\n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceed the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet called write commands. The second\n# is the only way to shut down the server in the case a write commands was\n# already issue by the script but the user don't want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n\n################################## SLOW LOG ###################################\n\n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I/O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n# \n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n\n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n\n############################### ADVANCED CONFIG ###############################\n\n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n\n# Similarly to hashes, small lists are also encoded in a special way in order\n# to save a lot of space. The special representation is only used when\n# you are under the following limits:\nlist-max-ziplist-entries 512\nlist-max-ziplist-value 64\n\n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happens to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n\n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n\n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into an hash table\n# that is rehashing, the more rehashing \"steps\" are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n# \n# The default is to use this millisecond 10 times every second in order to\n# active rehashing the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use \"activerehashing no\" if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply form time to time\n# to queries with 2 milliseconds delay.\n#\n# use \"activerehashing yes\" if you don't have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n\n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub/Sub client can't consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -> normal clients\n# slave  -> slave clients and MONITOR clients\n# pubsub -> clients subcribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes / 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don't receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and slave clients, since\n# subscribers and slaves receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit slave 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n\n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeot, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are perforemd with the same frequency, but Redis checks for\n# tasks to perform accordingly to the specified \"hz\" value.\n#\n# By default \"hz\" is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n\n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n\n################################## INCLUDES ###################################\n\n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis server but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# include /path/to/local.conf\n# include /path/to/other.conf\n",
                "Filename": "/etc/redis.conf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 1,
        "Startup": "/usr/bin/redis-server /etc/redis.conf",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/lib/redis",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "root:root",
                "Permission": "0755",
                "ResourcePath": "redis",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/zing-gcp-credentials.json": {
                "Content": "{}",
                "Filename": "/etc/zing-gcp-credentials.json",
                "Owner": "root:root",
                "Permissions": "664"
            },
            "/opt/zenoss/etc/zing-connector/zing-connector.yml": {
                "Content": "#\n# zing-connector configuration file\n#\nlog:\n  level: info\nhttp:\n  port: 9237\nadmin:\n  port: 9000\ntracing:\n  enabled: false\nstats:\n  #\n  # The interval in seconds to report internal performance stats to ControlCenter\n  #\n  interval: 30\npubsub:\n  #\n  # project, tenant and source should be set by editing variables on the Zenoss.cse service definition\n  #\n  project: {{getContext . \"cse.project\"}}\n  tenant: {{getContext . \"cse.tenant\"}}\n  source: {{getContext . \"cse.source\"}}\n  metric-topic: metric-in\n  model-topic: model-raw-rm\n  #\n  # Set use-emulator=true AND emulator-host-port to send data to the GCP pubsub emulator\n  #\n  #use-emulator: true\n  #emulator-host-port: <emulator-ip:emulator-port>\n",
                "Filename": "/opt/zenoss/etc/zing-connector/zing-connector.yml",
                "Owner": "",
                "Permissions": ""
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Zing Connector Service",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": [
            "GOOGLE_APPLICATION_CREDENTIALS=/etc/zing-gcp-credentials.json"
        ],
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "test \"$(curl localhost:9000/ping)\" = \"PONG\"",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "bfqhbi9o07qiizoi3azr0xn3x",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/zing-connector:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "glog"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zing-connector.log",
                "Type": "zing-connector"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "min",
                            "legend": "min",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.min",
                            "metricSource": "datamap-incoming",
                            "name": "min",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "max",
                            "legend": "max",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.max",
                            "metricSource": "datamap-incoming",
                            "name": "max",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "mean",
                            "legend": "mean",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.mean",
                            "metricSource": "datamap-incoming",
                            "name": "mean",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Milliseconds to process datamap PUT requests.",
                    "footer": false,
                    "format": "",
                    "id": "model-request",
                    "maxy": null,
                    "miny": null,
                    "name": "Datamap PUT Time (ms)",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bfqhbi9o07qiizoi3azr0xn3x"
                        ]
                    },
                    "type": "line",
                    "units": "milliseconds",
                    "yAxisLabel": "Datamap PUT Time (ms)"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "published",
                            "legend": "published",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.count",
                            "metricSource": "datamap-outgoing",
                            "name": "published",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "failed",
                            "legend": "failed",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.count",
                            "metricSource": "datamap-outgoing",
                            "name": "failed",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Number of datamaps published.",
                    "footer": false,
                    "format": "",
                    "id": "datamaps",
                    "maxy": null,
                    "miny": null,
                    "name": "Datamaps Published",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bfqhbi9o07qiizoi3azr0xn3x"
                        ]
                    },
                    "type": "line",
                    "units": "datamaps",
                    "yAxisLabel": "Datamaps Published"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "bytes",
                            "legend": "bytes",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.count",
                            "metricSource": "datamap-outgoing",
                            "name": "bytes",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Bytes of datamaps published.",
                    "footer": false,
                    "format": "",
                    "id": "datamapBytes",
                    "maxy": null,
                    "miny": null,
                    "name": "Bytes of Datamaps Published",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bfqhbi9o07qiizoi3azr0xn3x"
                        ]
                    },
                    "type": "line",
                    "units": "bytes",
                    "yAxisLabel": "Bytes of Datamaps Published"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "min",
                            "legend": "min",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.min",
                            "metricSource": "metric-incoming",
                            "name": "min",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "max",
                            "legend": "max",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.max",
                            "metricSource": "metric-incoming",
                            "name": "max",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "mean",
                            "legend": "mean",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.mean",
                            "metricSource": "metric-incoming",
                            "name": "mean",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Milliseconds to process metric PUT requests.",
                    "footer": false,
                    "format": "",
                    "id": "metric-request",
                    "maxy": null,
                    "miny": null,
                    "name": "Metric PUT Time (ms)",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bfqhbi9o07qiizoi3azr0xn3x"
                        ]
                    },
                    "type": "line",
                    "units": "milliseconds",
                    "yAxisLabel": "Metric PUT Time (ms)"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "published",
                            "legend": "published",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.count",
                            "metricSource": "metric-outgoing",
                            "name": "published",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "failed",
                            "legend": "failed",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.count",
                            "metricSource": "metric-outgoing",
                            "name": "failed",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Number of metrics published.",
                    "footer": false,
                    "format": "",
                    "id": "metrics",
                    "maxy": null,
                    "miny": null,
                    "name": "Metrics Published",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bfqhbi9o07qiizoi3azr0xn3x"
                        ]
                    },
                    "type": "line",
                    "units": "datamaps",
                    "yAxisLabel": "Metrics Published"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "bytes",
                            "legend": "bytes",
                            "metric": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.count",
                            "metricSource": "metrics-outgoing",
                            "name": "bytes",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Bytes of metrics published.",
                    "footer": false,
                    "format": "",
                    "id": "metricBytes",
                    "maxy": null,
                    "miny": null,
                    "name": "Bytes of Metrics Published",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bfqhbi9o07qiizoi3azr0xn3x"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Bytes of Metrics Published"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "Statistics for PUT requests to send datamaps",
                    "ID": "datamap-incoming",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "min time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.min",
                            "Name": "min",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "max time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.max",
                            "Name": "max",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "avg time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.mean",
                            "Name": "mean",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "stddev of time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.stddev",
                            "Name": "stddev",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "median time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.median",
                            "Name": "median",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "75th percentile time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p75",
                            "Name": "p75",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "95th percentile time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p95",
                            "Name": "p95",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "98th percentile time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p98",
                            "Name": "p98",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "99th percentile time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p99",
                            "Name": "p99",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "99.9th percentile time for PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p999",
                            "Name": "p99.9",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.count",
                            "Name": "count",
                            "ResetValue": 0,
                            "Unit": "requests"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "mean rate of PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.meanRate",
                            "Name": "meanRate",
                            "ResetValue": 0,
                            "Unit": "req/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "1 minute rate of PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.1MinuteRate",
                            "Name": "1MinuteRate",
                            "ResetValue": 0,
                            "Unit": "req/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "5 minute rate of PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.5MinuteRate",
                            "Name": "5MinuteRate",
                            "ResetValue": 0,
                            "Unit": "req/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "15 minute rate of PUT requests to send 1 or more datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.15MinuteRate",
                            "Name": "15MinuteRate",
                            "ResetValue": 0,
                            "Unit": "req/sec"
                        }
                    ],
                    "Name": "Zing-Connector datamap PUT requests",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.min\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.max\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.mean\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.stddev\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.median\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p75\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p95\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p98\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p99\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.p999\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.count\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.meanRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishModels.time.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Statistics for outgoing datamaps",
                    "ID": "datamap-outgoing",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of datamap bytes sent",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.count",
                            "Name": "bytes",
                            "ResetValue": 0,
                            "Unit": "bytes"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "mean rate of datamap bytes",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.meanRate",
                            "Name": "bytesMeanRate",
                            "ResetValue": 0,
                            "Unit": "bytes/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "1 minute rate of datamap bytes",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.1MinuteRate",
                            "Name": "bytes1MinuteRate",
                            "ResetValue": 0,
                            "Unit": "bytes/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "5 minute rate of datamap bytes",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.5MinuteRate",
                            "Name": "bytes5MinuteRate",
                            "ResetValue": 0,
                            "Unit": "bytes/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "15 minute rate of datamap bytes",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.15MinuteRate",
                            "Name": "bytes15MinuteRate",
                            "ResetValue": 0,
                            "Unit": "bytes/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of successful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.count",
                            "Name": "published",
                            "ResetValue": 0,
                            "Unit": "datamaps"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "mean rate of successful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.meanRate",
                            "Name": "meanRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "1 minute rate of successful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.1MinuteRate",
                            "Name": "1MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "5 minute rate of successful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.5MinuteRate",
                            "Name": "5MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "15 minute rate of successful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.15MinuteRate",
                            "Name": "15MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of unsuccessful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.count",
                            "Name": "failed",
                            "ResetValue": 0,
                            "Unit": "datamaps"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "mean rate of unsuccessful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.meanRate",
                            "Name": "meanRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "1 minute rate of unsuccessful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.1MinuteRate",
                            "Name": "1MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "5 minute rate of unsuccessful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.5MinuteRate",
                            "Name": "5MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "15 minute rate of unsuccessful outgoing datamaps",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.15MinuteRate",
                            "Name": "15MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        }
                    ],
                    "Name": "Zing-Connector outgoing datamaps",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.count\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.meanRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.bytes.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.count\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.meanRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.success.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.count\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.meanRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.model.publish.errors.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Statistics for PUT requests to send metrics",
                    "ID": "metric-incoming",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "min time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.min",
                            "Name": "min",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "max time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.max",
                            "Name": "max",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "avg time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.mean",
                            "Name": "mean",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "stddev of time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.stddev",
                            "Name": "stddev",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "median time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.median",
                            "Name": "median",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "75th percentile time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p75",
                            "Name": "p75",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "95th percentile time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p95",
                            "Name": "p95",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "98th percentile time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p98",
                            "Name": "p98",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "99th percentile time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p99",
                            "Name": "p99",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "99.9th percentile time for PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p999",
                            "Name": "p99.9",
                            "ResetValue": 0,
                            "Unit": "milliseconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.count",
                            "Name": "count",
                            "ResetValue": 0,
                            "Unit": "requests"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "mean rate of PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.meanRate",
                            "Name": "meanRate",
                            "ResetValue": 0,
                            "Unit": "req/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "1 minute rate of PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.1MinuteRate",
                            "Name": "1MinuteRate",
                            "ResetValue": 0,
                            "Unit": "req/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "5 minute rate of PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.5MinuteRate",
                            "Name": "5MinuteRate",
                            "ResetValue": 0,
                            "Unit": "req/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "15 minute rate of PUT requests to send 1 or more metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.15MinuteRate",
                            "Name": "15MinuteRate",
                            "ResetValue": 0,
                            "Unit": "req/sec"
                        }
                    ],
                    "Name": "Zing-Connector metric PUT requests",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.min\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.max\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.mean\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.stddev\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.median\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p75\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p95\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p98\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p99\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.p999\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.count\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.meanRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.func.PublishMetrics.time.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Statistics for outgoing metrics",
                    "ID": "metric-outgoing",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of metric bytes sent",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.count",
                            "Name": "bytes",
                            "ResetValue": 0,
                            "Unit": "bytes"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "mean rate of metric bytes",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.meanRate",
                            "Name": "bytesMeanRate",
                            "ResetValue": 0,
                            "Unit": "bytes/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "1 minute rate of metric bytes",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.1MinuteRate",
                            "Name": "bytes1MinuteRate",
                            "ResetValue": 0,
                            "Unit": "bytes/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "5 minute rate of metric bytes",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.5MinuteRate",
                            "Name": "bytes5MinuteRate",
                            "ResetValue": 0,
                            "Unit": "bytes/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "15 minute rate of metric bytes",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.15MinuteRate",
                            "Name": "bytes15MinuteRate",
                            "ResetValue": 0,
                            "Unit": "bytes/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of successful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.count",
                            "Name": "published",
                            "ResetValue": 0,
                            "Unit": "datamaps"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "mean rate of successful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.meanRate",
                            "Name": "meanRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "1 minute rate of successful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.1MinuteRate",
                            "Name": "1MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "5 minute rate of successful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.5MinuteRate",
                            "Name": "5MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "15 minute rate of successful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.15MinuteRate",
                            "Name": "15MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of unsuccessful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.count",
                            "Name": "failed",
                            "ResetValue": 0,
                            "Unit": "datamaps"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "mean rate of unsuccessful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.meanRate",
                            "Name": "meanRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "1 minute rate of unsuccessful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.1MinuteRate",
                            "Name": "1MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "5 minute rate of unsuccessful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.5MinuteRate",
                            "Name": "5MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "15 minute rate of unsuccessful outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.15MinuteRate",
                            "Name": "15MinuteRate",
                            "ResetValue": 0,
                            "Unit": "datamaps/sec"
                        }
                    ],
                    "Name": "Zing-Connector outgoing metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.count\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.meanRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.bytes.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.count\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.meanRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.success.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.count\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.meanRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}},{\"metric\":\"ZEN_INF.org.zenoss.api.zing-connector.metrics.publish.errors.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"bfqhbi9o07qiizoi3azr0xn3x\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "zing-connector",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/zing-connector.yml": {
                "Content": "",
                "Filename": "/opt/zenoss/etc/zing-connector/zing-connector.yml",
                "Owner": "root:root",
                "Permissions": "664"
            },
            "/etc/zing-gcp-credentials.json": {
                "Content": "{}",
                "Filename": "/etc/zing-gcp-credentials.json",
                "Owner": "root:root",
                "Permissions": "664"
            },
            "/opt/zenoss/etc/zing-connector/zing-connector.yml": {
                "Content": "#\n# zing-connector configuration file\n#\nlog:\n  level: info\nhttp:\n  port: 9237\nadmin:\n  port: 9000\ntracing:\n  enabled: false\nstats:\n  #\n  # The interval in seconds to report internal performance stats to ControlCenter\n  #\n  interval: 30\npubsub:\n  #\n  # project, tenant and source should be set by editing variables on the Zenoss.cse service definition\n  #\n  project: {{getContext . \"cse.project\"}}\n  tenant: {{getContext . \"cse.tenant\"}}\n  source: {{getContext . \"cse.source\"}}\n  metric-topic: metric-in\n  model-topic: model-raw-rm\n  #\n  # Set use-emulator=true AND emulator-host-port to send data to the GCP pubsub emulator\n  #\n  #use-emulator: true\n  #emulator-host-port: <emulator-ip:emulator-port>\n",
                "Filename": "/opt/zenoss/etc/zing-connector/zing-connector.yml",
                "Owner": "",
                "Permissions": ""
            }
        },
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"cd /opt/zenoss && /bin/supervisord -n -c etc/zing-connector/supervisord.conf\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/memcached/memcached_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/memcached_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:memcached]\ncommand=/opt/zenoss/bin/zenmemcached\nautorestart=true\nautostart=true\nstartsecs=5\n\n[program:memcached-metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/memcachedstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=2\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/memcached/memcached_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/etc/sysconfig/memcached": {
                "Content": "PORT=\"11211\"\nUSER=\"nobody\"\nMAXCONN=\"4096\"\nCACHESIZE=\"{{percentScale .RAMCommitment 0.9 | bytesToMB}}\"\n{{ $size := (getContext . \"global.conf.zodb-cache-max-object-size\") }}\nOPTIONS=\"-v -R 4096 -I {{if $size}} {{$size}} {{else}} 1048576 {{end}}\"\n",
                "Filename": "/etc/sysconfig/memcached",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Free & open source, high-performance, distributed memory object caching system",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "{ echo stats; sleep 1; } | nc 127.0.0.1 11211 | grep -q uptime",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "8lzjnton1yd1l2j6ayvhcolz0",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "memcached",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/memcached/memcached_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/memcached_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:memcached]\ncommand=/opt/zenoss/bin/zenmemcached\nautorestart=true\nautostart=true\nstartsecs=5\n\n[program:memcached-metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/memcachedstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=2\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/memcached/memcached_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/etc/sysconfig/memcached": {
                "Content": "PORT=\"11211\"\nUSER=\"nobody\"\nMAXCONN=\"4096\"\nCACHESIZE=\"{{percentScale .RAMCommitment 0.9 | bytesToMB}}\"\n{{ $size := (getContext . \"global.conf.zodb-cache-max-object-size\") }}\nOPTIONS=\"-v -R 4096 -I {{if $size}} {{$size}} {{else}} 1048576 {{end}}\"\n",
                "Filename": "/etc/sysconfig/memcached",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "3G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 1,
        "Startup": "/bin/supervisord -n -c /etc/memcached/memcached_supervisor.conf",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 4,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss_impact/etc/jetty-deploy.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Jetty//Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_0.dtd\">\n\n<!-- =============================================================== -->\n<!-- Create the deployment manager                                   -->\n<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->\n<!-- The deplyment manager handles the lifecycle of deploying web    -->\n<!-- applications. Apps are provided by instances of the             -->\n<!-- AppProvider interface.                                          -->\n<!-- =============================================================== -->\n<Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\">\n\n  <Call name=\"addBean\">\n    <Arg>\n      <New id=\"DeploymentManager\" class=\"org.eclipse.jetty.deploy.DeploymentManager\">\n        <Set name=\"contexts\">\n          <Ref refid=\"Contexts\" />\n        </Set>\n        <Call name=\"setContextAttribute\">\n          <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>\n          <Arg>.*/[^/]*servlet-api-[^/]*\\.jar$|.*/javax.servlet.jsp.jstl-.*\\.jar$|.*/org.apache.taglibs.taglibs-standard-impl-.*\\.jar$</Arg>\n        </Call>\n\n        <!-- Add a customize step to the deployment lifecycle -->\n        <!-- uncomment and replace DebugBinding with your extended AppLifeCycle.Binding class\n        <Call name=\"insertLifeCycleNode\">\n          <Arg>deployed</Arg>\n          <Arg>starting</Arg>\n          <Arg>customise</Arg>\n        </Call>\n        <Call name=\"addLifeCycleBinding\">\n          <Arg>\n            <New class=\"org.eclipse.jetty.deploy.bindings.DebugBinding\">\n              <Arg>customise</Arg>\n            </New>\n          </Arg>\n        </Call> -->\n\n        <Call id=\"webappprovider\" name=\"addAppProvider\">\n          <Arg>\n            <New class=\"org.eclipse.jetty.deploy.providers.WebAppProvider\">\n              <Set name=\"monitoredDirName\"><Property name=\"jetty.base\" default=\".\" />/<Property name=\"jetty.deploy.monitoredDirName\" default=\"webapps\"/></Set>\n              <Set name=\"scanInterval\"><Property name=\"jetty.deploy.scanInterval\" default=\"1\"/></Set>\n              <Set name=\"extractWars\"><Property name=\"jetty.deploy.extractWars\" default=\"true\"/></Set>\n              <Set name=\"configurationManager\">\n                <New class=\"org.eclipse.jetty.deploy.PropertiesConfigurationManager\">\n                  <!-- file of context configuration properties\n                  <Set name=\"file\"><SystemProperty name=\"jetty.base\"/>/etc/some.properties</Set>\n                  -->\n                  <!-- set a context configuration property\n                  <Call name=\"put\"><Arg>name</Arg><Arg>value</Arg></Call>\n                  -->\n                </New>\n              </Set>\n            </New>\n          </Arg>\n        </Call>\n      </New>\n    </Arg>\n  </Call>\n</Configure>\n",
                "Filename": "/opt/zenoss_impact/etc/jetty-deploy.xml",
                "Owner": "",
                "Permissions": ""
            },
            "/opt/zenoss_impact/etc/jetty-http.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Jetty//Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_0.dtd\">\n\n<!-- ============================================================= -->\n<!-- Configure the Jetty Server instance with an ID \"Server\"       -->\n<!-- by adding a HTTP connector.                                   -->\n<!-- This configuration must be used in conjunction with jetty.xml -->\n<!-- ============================================================= -->\n<Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\">\n\n  <!-- =========================================================== -->\n  <!-- Http Configuration.                                         -->\n  <!-- This is a common configuration instance used by all         -->\n  <!-- connectors that can carry HTTP semantics (HTTP, HTTPS, SPDY)-->\n  <!-- It configures the non wire protocol aspects of the HTTP     -->\n  <!-- semantic.                                                   -->\n  <!--                                                             -->\n  <!-- This configuration is only defined here and is used by      -->\n  <!-- reference from the jetty-http.xml, jetty-https.xml and      -->\n  <!-- jetty-spdy.xml configuration files which instantiate the    -->\n  <!-- connectors.                                                 -->\n  <!--                                                             -->\n  <!-- Consult the javadoc of o.e.j.server.HttpConfiguration       -->\n  <!-- for all configuration that may be set here.                 -->\n  <!-- =========================================================== -->\n  <New id=\"httpConfig\" class=\"org.eclipse.jetty.server.HttpConfiguration\">\n    <Set name=\"secureScheme\">https</Set>\n    <Set name=\"securePort\"><Property name=\"jetty.secure.port\" default=\"8443\" /></Set>\n    <Set name=\"outputBufferSize\"><Property name=\"jetty.output.buffer.size\" default=\"32768\" /></Set>\n    <Set name=\"outputAggregationSize\"><Property name=\"jetty.output.aggregation.size\" default=\"8192\" /></Set>\n    <Set name=\"requestHeaderSize\"><Property name=\"jetty.request.header.size\" default=\"8192\" /></Set>\n    <Set name=\"responseHeaderSize\"><Property name=\"jetty.response.header.size\" default=\"8192\" /></Set>\n    <Set name=\"sendServerVersion\"><Property name=\"jetty.send.server.version\" default=\"true\" /></Set>\n    <Set name=\"sendDateHeader\"><Property name=\"jetty.send.date.header\" default=\"false\" /></Set>\n    <Set name=\"headerCacheSize\">512</Set>\n    <Set name=\"delayDispatchUntilContent\"><Property name=\"jetty.delayDispatchUntilContent\" default=\"false\"/></Set>\n    <!-- Uncomment to enable handling of X-Forwarded- style headers\n    <Call name=\"addCustomizer\">\n      <Arg><New class=\"org.eclipse.jetty.server.ForwardedRequestCustomizer\"/></Arg>\n    </Call>\n    -->\n  </New>\n\n  <!-- =========================================================== -->\n  <!-- Add a HTTP Connector.                                       -->\n  <!-- Configure an o.e.j.server.ServerConnector with a single     -->\n  <!-- HttpConnectionFactory instance using the common httpConfig  -->\n  <!-- instance defined in jetty.xml                               -->\n  <!--                                                             -->\n  <!-- Consult the javadoc of o.e.j.server.ServerConnector and     -->\n  <!-- o.e.j.server.HttpConnectionFactory for all configuration    -->\n  <!-- that may be set here.                                       -->\n  <!-- =========================================================== -->\n  <Call name=\"addConnector\">\n    <Arg>\n      <New class=\"org.eclipse.jetty.server.ServerConnector\">\n        <Arg name=\"server\"><Ref refid=\"Server\" /></Arg>\n        <Arg name=\"acceptors\" type=\"int\"><Property name=\"http.acceptors\" default=\"-1\"/></Arg>\n        <Arg name=\"selectors\" type=\"int\"><Property name=\"http.selectors\" default=\"-1\"/></Arg>\n        <Arg name=\"factories\">\n          <Array type=\"org.eclipse.jetty.server.ConnectionFactory\">\n            <Item>\n              <New class=\"org.eclipse.jetty.server.HttpConnectionFactory\">\n                <Arg name=\"config\"><Ref refid=\"httpConfig\" /></Arg>\n              </New>\n            </Item>\n          </Array>\n        </Arg>\n        <Set name=\"host\"><Property name=\"jetty.host\" /></Set>\n        <Set name=\"port\"><Property name=\"jetty.port\" default=\"8083\" /></Set>\n        <Set name=\"idleTimeout\"><Property name=\"http.timeout\" default=\"300000\"/></Set>\n        <Set name=\"soLingerTime\"><Property name=\"http.soLingerTime\" default=\"-1\"/></Set>\n        <Set name=\"acceptorPriorityDelta\"><Property name=\"http.acceptorPriorityDelta\" default=\"0\"/></Set>\n        <Set name=\"selectorPriorityDelta\"><Property name=\"http.selectorPriorityDelta\" default=\"0\"/></Set>\n        <Set name=\"acceptQueueSize\"><Property name=\"http.acceptQueueSize\" default=\"0\"/></Set>\n      </New>\n    </Arg>\n  </Call>\n\n</Configure>\n",
                "Filename": "/opt/zenoss_impact/etc/jetty-http.xml",
                "Owner": "",
                "Permissions": ""
            },
            "/opt/zenoss_impact/etc/jetty-logging.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Jetty//Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_0.dtd\">\n\n\n<!-- =============================================================== -->\n<!-- Configure stderr and stdout to a Jetty rollover log file        -->\n<!-- this configuration file should be used in combination with      -->\n<!-- other configuration files.  e.g.                                -->\n<!--    java -jar start.jar etc/jetty-logging.xml                    -->\n<!-- =============================================================== -->\n<Configure id=\"logging\" class=\"org.eclipse.jetty.util.log.Log\">\n\n    <New id=\"ServerLog\" class=\"java.io.PrintStream\">\n      <Arg>\n        <!--<New class=\"org.eclipse.jetty.util.RolloverFileOutputStream\">-->\n          <!--<Arg><SystemProperty name=\"jetty.logs\" default=\"./log\"/>/zenoss_impact-stdio.yyyy_mm_dd.log</Arg>-->\n          <!--<Arg type=\"boolean\">true</Arg>-->\n          <!--<Arg type=\"int\">7</Arg>-->\n          <!--<Arg><Call class=\"java.util.TimeZone\" name=\"getTimeZone\"><Arg>GMT</Arg></Call></Arg>-->\n          <!--<Get id=\"ServerLogName\" name=\"datedFilename\"/>-->\n        <!--</New>-->\n          <New class=\"com.zenoss.dsa.utils.RolloverSizeBasedFileOutputStream\">\n              <Arg><SystemProperty name=\"jetty.logs\" default=\"./log\"/>/zenoss_impact-stdio.log</Arg>\n              <Arg type=\"int\">1</Arg>\n              <Arg type=\"int\">10</Arg>\n              <Arg type=\"string\">10MB</Arg>\n          </New>\n      </Arg>\n    </New>\n\n    <Get name=\"rootLogger\">\n      <Call name=\"info\"><Arg>Redirecting stderr/stdout to <Ref refid=\"ServerLogName\"/></Arg></Call>\n    </Get>\n    <Call class=\"java.lang.System\" name=\"setErr\"><Arg><Ref refid=\"ServerLog\"/></Arg></Call>\n    <Call class=\"java.lang.System\" name=\"setOut\"><Arg><Ref refid=\"ServerLog\"/></Arg></Call>\n\n</Configure>\n\n\n\n",
                "Filename": "/opt/zenoss_impact/etc/jetty-logging.xml",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/jetty.ini": {
                "Content": "#===========================================================\n# Jetty start.jar arguments\n# Each line of this file is prepended to the command line \n# arguments # of a call to:\n#    java -jar start.jar [arg...]\n#===========================================================\n\n\n\n#===========================================================\n# If the arguements in this file include JVM arguments \n# (eg -Xmx512m) or JVM System properties (eg com.sun.???),\n# then these will not take affect unless the --exec \n# parameter is included or if the output from --dry-run\n# is executed like:\n#   eval $(java -jar start.jar --dry-run)\n#\n# Below are some recommended options for Sun's JRE\n#-----------------------------------------------------------\n# --exec\n# -Dcom.sun.management.jmxremote\n# -Xmx2000m\n# -Xmn512m\n# -verbose:gc\n# -XX:+PrintGCDateStamps\n# -XX:+PrintGCTimeStamps\n# -XX:+PrintGCDetails\n# -XX:+PrintTenuringDistribution\n# -XX:+PrintCommandLineFlags\n# -XX:+DisableExplicitGC\n# -XX:+UseConcMarkSweepGC\n# -XX:ParallelCMSThreads=2\n# -XX:+CMSClassUnloadingEnabled  \n# -XX:+UseCMSCompactAtFullCollection\n# -XX:CMSInitiatingOccupancyFraction=80\n#-----------------------------------------------------------\n\n\n#===========================================================\n# Start classpath OPTIONS.\n# These control what classes are on the classpath\n# for a full listing do\n#   java -jar start.jar --list-options\n#-----------------------------------------------------------\nOPTIONS=Server,ext\n#-----------------------------------------------------------\n\n\n#===========================================================\n# Configuration files.\n# For a full list of available configuration files do\n#   java -jar start.jar --help\n#-----------------------------------------------------------\netc/jetty.xml\n",
                "Filename": "/opt/zenoss_impact/etc/jetty.ini",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/jetty.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Jetty//Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_0.dtd\">\n\n<!-- =============================================================== -->\n<!-- Documentation of this file format can be found at:              -->\n<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->\n<!--                                                                 -->\n<!-- Additional configuration files are available in $JETTY_HOME/etc -->\n<!-- and can be mixed in. See start.ini file for the default         -->\n<!-- configuration files.                                            -->\n<!--                                                                 -->\n<!-- For a description of the configuration mechanism, see the       -->\n<!-- output of:                                                      -->\n<!--   java -jar start.jar -?                                        -->\n<!-- =============================================================== -->\n\n<!-- =============================================================== -->\n<!-- Configure a Jetty Server instance with an ID \"Server\"           -->\n<!-- Other configuration files may also configure the \"Server\"       -->\n<!-- ID, in which case they are adding configuration to the same     -->\n<!-- instance.  If other configuration have a different ID, they     -->\n<!-- will create and configure another instance of Jetty.            -->\n<!-- Consult the javadoc of o.e.j.server.Server for all              -->\n<!-- configuration that may be set here.                             -->\n<!-- =============================================================== -->\n<Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\">\n\n    <!-- =========================================================== -->\n    <!-- Configure the Server Thread Pool.                           -->\n    <!-- The server holds a common thread pool which is used by      -->\n    <!-- default as the executor used by all connectors and servlet  -->\n    <!-- dispatches.                                                 -->\n    <!--                                                             -->\n    <!-- Configuring a fixed thread pool is vital to controlling the -->\n    <!-- maximal memory footprint of the server and is a key tuning  -->\n    <!-- parameter for tuning.  In an application that rarely blocks -->\n    <!-- then maximal threads may be close to the number of 5*CPUs.  -->\n    <!-- In an application that frequently blocks, then maximal      -->\n    <!-- threads should be set as high as possible given the memory  -->\n    <!-- available.                                                  -->\n    <!--                                                             -->\n    <!-- Consult the javadoc of o.e.j.util.thread.QueuedThreadPool   -->\n    <!-- for all configuration that may be set here.                 -->\n    <!-- =========================================================== -->\n    <!-- uncomment to change type of threadpool\n    <Arg name=\"threadpool\"><New id=\"threadpool\" class=\"org.eclipse.jetty.util.thread.QueuedThreadPool\"/></Arg>\n    -->\n    <Get name=\"ThreadPool\">\n      <Set name=\"minThreads\" type=\"int\"><Property name=\"threads.min\" default=\"10\"/></Set>\n      <Set name=\"maxThreads\" type=\"int\"><Property name=\"threads.max\" default=\"200\"/></Set>\n      <Set name=\"idleTimeout\" type=\"int\"><Property name=\"threads.timeout\" default=\"300000\"/></Set>\n      <Set name=\"detailedDump\">false</Set>\n    </Get>\n\n    <!-- =========================================================== -->\n    <!-- Add shared Scheduler instance                               -->\n    <!-- =========================================================== -->\n    <Call name=\"addBean\">\n      <Arg>\n        <New class=\"org.eclipse.jetty.util.thread.ScheduledExecutorScheduler\"/>\n      </Arg>\n    </Call>\n\n    <!-- =========================================================== -->\n    <!-- Set the default handler structure for the Server            -->\n    <!-- A handler collection is used to pass received requests to   -->\n    <!-- both the ContextHandlerCollection, which selects the next   -->\n    <!-- handler by context path and virtual host, and the           -->\n    <!-- DefaultHandler, which handles any requests not handled by   -->\n    <!-- the context handlers.                                       -->\n    <!-- Other handlers may be added to the \"Handlers\" collection,   -->\n    <!-- for example the jetty-requestlog.xml file adds the          -->\n    <!-- RequestLogHandler after the default handler                 -->\n    <!-- =========================================================== -->\n    <Set name=\"handler\">\n      <New id=\"Handlers\" class=\"org.eclipse.jetty.server.handler.HandlerCollection\">\n        <Set name=\"handlers\">\n         <Array type=\"org.eclipse.jetty.server.Handler\">\n           <Item>\n             <New id=\"Contexts\" class=\"org.eclipse.jetty.server.handler.ContextHandlerCollection\"/>\n           </Item>\n           <Item>\n             <New id=\"DefaultHandler\" class=\"org.eclipse.jetty.server.handler.DefaultHandler\"/>\n           </Item>\n         </Array>\n        </Set>\n      </New>\n    </Set>\n\n    <!-- =========================================================== -->\n    <!-- extra server options                                        -->\n    <!-- =========================================================== -->\n    <Set name=\"stopAtShutdown\">true</Set>\n    <Set name=\"stopTimeout\">5000</Set>\n    <Set name=\"dumpAfterStart\"><Property name=\"jetty.dump.start\" default=\"false\"/></Set>\n    <Set name=\"dumpBeforeStop\"><Property name=\"jetty.dump.stop\" default=\"false\"/></Set>\n\n</Configure>\n",
                "Filename": "/opt/zenoss_impact/etc/jetty.xml",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n##############################################################################\n# \n# Copyright (C) Zenoss, Inc. 2011, all rights reserved.\n# \n# This content is made available according to terms specified in\n# License.zenoss under the directory where your Zenoss product is installed.\n# \n##############################################################################\n-->\n\n\n<configuration scan=\"true\">\n    <statusListener class=\"ch.qos.logback.core.status.OnConsoleStatusListener\" />\n\n    <if condition='isNull(\"ZENOSS_DAEMON\")'>\n        <then>\n            <appender name=\"APPENDER\" class=\"ch.qos.logback.core.ConsoleAppender\">\n                <!-- encoders are assigned the type\n             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->\n                <encoder>\n                    <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>\n                </encoder>\n            </appender>\n        </then>\n        <else>\n            <appender name=\"APPENDER\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n                <file>${IMPACT_HOME:-.}/log/zenoss_impact.log</file>\n                <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n                    <!-- daily rollover -->\n                    <fileNamePattern>${IMPACT_HOME:-.}/log/zenoss_impact.log.%i</fileNamePattern>\n                    <!-- keep up to 3 logs by default -->\n                    <minIndex>1</minIndex>\n                    <maxIndex>3</maxIndex>\n                </rollingPolicy>\n                <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n                    <maxFileSize>10MB</maxFileSize>\n                </triggeringPolicy>\n                <encoder>\n                    <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>\n                </encoder>\n            </appender>\n        </else>\n    </if>\n\n    <contextName>zenimpactserver</contextName>\n    <jmxConfigurator />\n    <logger name=\"org.springframework\" level=\"WARN\"/>\n    <logger name=\"ch.qos.logback\" level=\"WARN\"/>\n    <logger name=\"com.zenoss\" level=\"${ZENOSS_LOG_LEVEL:-INFO}\" />\n    <logger name=\"org.zenoss\" level=\"${ZENOSS_LOG_LEVEL:-INFO}\" />\n    <logger name=\"org.neo4j\" level=\"WARN\" />\n    <logger name=\"org.jboss.netty.channel.DefaultChannelPipeline\" level=\"ERROR\" />\n\n    <root level=\"INFO\">\n        <appender-ref ref=\"APPENDER\"/>\n    </root>\n\n</configuration>\n\n",
                "Filename": "/opt/zenoss_impact/etc/logback.xml",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/neo4j.properties": {
                "Content": "## Path where Neo4j database is stored\n#store_dir=var/db\n\n## Allow neo4j version upgrades\n#allow_store_upgrade=true\n\n#control the Neo4J transaction logs retention policy\n#see: http://docs.neo4j.org/chunked/stable/configuration-logical-logs.html\n#keep_logical_logs=10 files\n\n#Turn off/on remote webadmin and remote console\n#remote_shell_enabled=false\n\n#enable the Neo4J online backup service\n#online_backup_enabled=true\n\n#Neo4j logging configuration file\n#log.configuration=logback.xml\n",
                "Filename": "/opt/zenoss_impact/etc/neo4j.properties",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/zenoss-dsa-amqpconf.properties": {
                "Content": "#\n# Copyright (C) 2010, 2013, Zenoss Inc.  All Rights Reserved.\n#\n\namqphost={{(getContext . \"global.conf.amqphost\")}}\namqpport={{(getContext . \"global.conf.amqpport\")}}\namqpvhost={{(getContext . \"global.conf.amqpvhost\")}}\namqpuser={{(getContext . \"global.conf.amqpuser\")}}\namqppassword={{(getContext . \"global.conf.amqppassword\")}}\n\n\n# Messaging Configuration\n#\n# You can configure several aspects of the messaging system in this file. After\n# making a change to this file, you must drop any queues modified and restart\n# the processes that consume messages from those queues.\n#\n# To drop queues, use the zenqdelete script on the Zenoss master server:\n#\n#  $ zenqdelete zenoss.queues.zep.rawevents\n#\n# To get queue names, use rabbitmqctl:\n#\n#  $ rabbitmqctl list_queues -p /zenoss\n#\n\n\n## Message Persistence\n##\n## You can configure whether messages published to a given exchange exist\n## only in memory, thus being lost if Rabbit crashes, or are persisted to\n## disk for the sake of recovery. Non-persistent messages are MUCH faster\n## and do not use up disk space if a queue backs up.\n##\n## Possible values:\n##   1 -- do not persist\n##   2 -- persist\n##\n\n# Default is to have all messages persist to disk\n#exchange.default.delivery_mode = 2\n\n\n## Message Compression\n##\n## You can configure whether messages published to a given exchange should be\n## compressed.\n##\n## Possible values:\n##   deflate -- use DEFLATE algorithm\n##   none -- do not compress messages\n##\n\n# Default is to compress messages published to all exchanges\n#exchange.default.compression = deflate\n\n\n## Message TTL (time to live)\n##\n## You can configure messages published to a queue to expire if they have not\n## been delivered to a client within a given time. Value is in milliseconds.\n\n# Default is to have messages expire after a day\n#queue.default.x-message-ttl = 86400000\n\n\n## Queue Expiration\n##\n## You can configure unused queues to be deleted automatically after a period\n## of time. \"Unused\" means that the queue has no consumers and has not been\n## redeclared. Value is in milliseconds.\n\n# Default is to have queues expire after a day\n#queue.default.x-expires = 86400000\n\n",
                "Filename": "/opt/zenoss_impact/etc/zenoss-dsa-amqpconf.properties",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/zenoss-dsa.env": {
                "Content": "JVM_ARGS=\"${JVM_ARGS} -server\"\nJVM_ARGS=\"${JVM_ARGS} -DZENOSS_DAEMON=zenoss_impact\"\nJVM_ARGS=\"${JVM_ARGS} -Xmx{{.RAMCommitment}}\"\nJVM_ARGS=\"${JVM_ARGS} -Dcom.sun.management.jmxremote\"\nJVM_ARGS=\"${JVM_ARGS} -Dcom.sun.management.jmxremote.port=12345\"\nJVM_ARGS=\"${JVM_ARGS} -Dcom.sun.management.jmxremote.authenticate=false\"\nJVM_ARGS=\"${JVM_ARGS} -Dcom.sun.management.jmxremote.ssl=false\"\nJVM_ARGS=\"${JVM_ARGS} -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:ParallelGCThreads=8 -XX:ConcGCThreads=3\"\n",
                "Filename": "/opt/zenoss_impact/etc/zenoss-dsa.env",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/zenoss-dsa.properties": {
                "Content": "#\n# Copyright (c) 2010, 2013-2014 Zenoss, Inc. All Rights Reserved.\n#\n\n# The number of milliseconds to wait between connection retries\n#dsa.amqp.retry=60000\n\n# The URI to the RabbitMQ server. This property is ignored if the file\n# dsa.amqpconf defines can be read in which case the AMQP URI will be\n# built from the properties found in that location.\n#dsa.amqp.uri=amqp://{{(getContext . \"global.conf.amqpuser\")}}:{{(getContext . \"global.conf.amqppassword\")}}@{{(getContext . \"global.conf.amqphost\")}}:{{(getContext . \"global.conf.amqpport\")}}{{(getContext . \"global.conf.amqpvhost\")}}\n\n# Control how long (in milliseconds) to wait for a quiescent queue before\n# processing an incomplete batch of state events\n#dsa.amqp.statequeuetimeout=100\n\n# Control how large a batch of state events is\n#dsa.amqp.statequeuebatchsize=100\n\n# Control the behavior of the StateNode wrapper object cache\n# If impact memory usage remains below what is configured, increase this.\n# See: http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/cache/CacheBuilderSpec.html\n#dsa.statenode.cacheconfig=maximumSize=500000\n\n# Limit the maximum number of contributing events reported with a service event.\n# This is dependent on the maximum object size configured in the ZEP queue.\n#dsa.maximum_reported_events=20\n\n#Configure zenoss client\n#dsa.zenoss.protocol=http\n#dsa.zenoss.host=localhost\n#dsa.zenoss.port=8080\ndsa.zenoss.user={{(getContext . \"global.conf.zauth-username\")}}\ndsa.zenoss.password={{(getContext . \"global.conf.zauth-password\")}}\n\n# Depricated!\n# By this key the node discovery feature can be enabled/disabled.\n# Since it is deprecated it might be removed in the following versions of Impact.\n# In this case the feature will be enabled permanently.\ndsa.zenoss.nodediscovery=true\n# how many nodes will be processed in one update job.\ndsa.zenoss.batch_size=100\n# time period to fire discovery in seconds\ndsa.zenoss.time_period=30\n\n#Timeout in milliseconds of the quiesce transaction - MUST be lower than dsa.jetty.timeout\n#dsa.quiesce.txn.timeout=295000\n\n#How often to post internal application metrics\n#dsa.metrics.post.period=30s\n\n#Migration config\n#dsa.migration.transactionUpdateLimit=100000\n",
                "Filename": "/opt/zenoss_impact/etc/zenoss-dsa.properties",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Provides service-oriented alerting and root-cause analysis.",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_impact",
                "ApplicationTemplate": "zodb_impact",
                "Name": "impact",
                "PortList": null,
                "PortNumber": 8083,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "neo4j_admin",
                "ApplicationTemplate": "neo4j_admin",
                "Name": "neo4j admin",
                "PortList": null,
                "PortNumber": 7474,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss_impact/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenossimpact java.*zenoss_impact >/dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "webservice-status": {
                "Interval": 5,
                "Script": "/opt/zenoss_impact/bin/healthchecks/impact-health-status",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "em0xleikq1q1flys9za10lsdr",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/impact_5.5:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": null,
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss_impact/log/zenoss_impact.log",
                "Type": "impact"
            },
            {
                "Filters": null,
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss_impact/log/zenoss_impact-stdio*.log",
                "Type": "impact_stdio"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "commits",
                            "legend": "Commit Rate",
                            "metric": "impact.Commits.count",
                            "metricSource": "GraphService.commit",
                            "name": "commits",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "1mcommits",
                            "legend": "1m Commit Rate",
                            "metric": "impact.Commits.1MinuteRate",
                            "metricSource": "GraphService.commit",
                            "name": "1mcommits",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "5mcommits",
                            "legend": "5m Commit Rate",
                            "metric": "impact.Commits.5MinuteRate",
                            "metricSource": "GraphService.commit",
                            "name": "5mcommits",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "15mcommits",
                            "legend": "15m Commit Rate",
                            "metric": "impact.Commits.15MinuteRate",
                            "metricSource": "GraphService.commit",
                            "name": "15mcommits",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Impact Commit Rate",
                    "footer": false,
                    "format": "",
                    "id": "commitRate",
                    "maxy": null,
                    "miny": null,
                    "name": "Impact Commit Rate",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Commit Rate"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "updatesMin",
                            "legend": "Min time",
                            "metric": "impact.ProcessGraphUpdate.min",
                            "metricSource": "GraphChangeProcessor.update",
                            "name": "updatesMin",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "updatesMean",
                            "legend": "Mean time",
                            "metric": "impact.ProcessGraphUpdate.mean",
                            "metricSource": "GraphChangeProcessor.update",
                            "name": "updatesMean",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "updatesMax",
                            "legend": "Max time",
                            "metric": "impact.ProcessGraphUpdate.max",
                            "metricSource": "GraphChangeProcessor.update",
                            "name": "updatesMax",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Impact Model Update Timing",
                    "footer": false,
                    "format": "",
                    "id": "modelUpdate",
                    "maxy": null,
                    "miny": null,
                    "name": "Impact Model Update",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Seconds"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "statePropMin",
                            "legend": "Min time",
                            "metric": "impact.StatePropagation.min",
                            "metricSource": "StatePropagation",
                            "name": "statePropMin",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "statePropMean",
                            "legend": "Mean time",
                            "metric": "impact.StatePropagation.mean",
                            "metricSource": "StatePropagation",
                            "name": "statePropMean",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "statePropMax",
                            "legend": "Max time",
                            "metric": "impact.StatePropagation.max",
                            "metricSource": "StatePropagation",
                            "name": "statePropMax",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Impact State Propagation Timing",
                    "footer": false,
                    "format": "",
                    "id": "statePropagation",
                    "maxy": null,
                    "miny": null,
                    "name": "Impact State Propagation",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Milliseconds"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "graphCalls",
                            "legend": "Graph API Call Rate",
                            "metric": "impact.GraphAPI.Calls.count",
                            "metricSource": "GraphAPI.calls",
                            "name": "graphCalls",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "1mgraphCalls",
                            "legend": "1m Graph API Call Rate",
                            "metric": "impact.GraphAPI.Calls.1MinuteRate",
                            "metricSource": "GraphAPI.calls",
                            "name": "1mgraphCalls",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "5mgraphCalls",
                            "legend": "5m Graph API Call Rate",
                            "metric": "impact.GraphAPI.Calls.5MinuteRate",
                            "metricSource": "GraphAPI.calls",
                            "name": "5mgraphCalls",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "15mgraphCalls",
                            "legend": "15m Graph API Call Rate",
                            "metric": "impact.GraphAPI.Calls.15MinuteRate",
                            "metricSource": "GraphAPI.calls",
                            "name": "15mgraphCalls",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Impact Graph API Call Rate",
                    "footer": false,
                    "format": "",
                    "id": "graphAPIRate",
                    "maxy": null,
                    "miny": null,
                    "name": "Impact Graph API Call Rate",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Graph API Call Rate"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "modelIOCalls",
                            "legend": "ModelIO API Call Rate",
                            "metric": "impact.ModelIOAPI.Calls.count",
                            "metricSource": "ModelIOAPI.calls",
                            "name": "modelIOCalls",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "1mmodelIOCalls",
                            "legend": "1m ModelIO API Call Rate",
                            "metric": "impact.ModelIOAPI.Calls.1MinuteRate",
                            "metricSource": "ModelIOAPI.calls",
                            "name": "1mmodelIOCalls",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "5mmodelIOCalls",
                            "legend": "5m ModelIO API Call Rate",
                            "metric": "impact.ModelIOAPI.Calls.5MinuteRate",
                            "metricSource": "ModelIOAPI.calls",
                            "name": "5mmodelIOCalls",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "15mmodelIOCalls",
                            "legend": "15m ModelIO API Call Rate",
                            "metric": "impact.ModelIOAPI.Calls.15MinuteRate",
                            "metricSource": "ModelIOAPI.calls",
                            "name": "15mmodelIOCalls",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Impact Model I/O API Call Rate",
                    "footer": false,
                    "format": "",
                    "id": "modelIOAPIRate",
                    "maxy": null,
                    "miny": null,
                    "name": "Impact Model I/O API Call Rate",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "ModelIO API Call Rate"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "nodes",
                            "legend": "Nodes",
                            "metric": "impact.Neo4j.Primitive.NumberOfNodeIdsInUse.value",
                            "metricSource": "Neo4j.Primitive",
                            "name": "nodes",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "rels",
                            "legend": "Relationships",
                            "metric": "impact.Neo4j.Primitive.NumberOfRelationshipIdsInUse.value",
                            "metricSource": "Neo4j.Primitive",
                            "name": "rels",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "props",
                            "legend": "Properties",
                            "metric": "impact.Neo4j.Primitive.NumberOfPropertyIdsInUse.value",
                            "metricSource": "Neo4j.Primitive",
                            "name": "props",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "reltypes",
                            "legend": "Relationship Types",
                            "metric": "impact.Neo4j.Primitive.NumberOfRelationshipTypeIdsInUse.value",
                            "metricSource": "Neo4j.Primitive",
                            "name": "reltypes",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Impact Graph Object Counts",
                    "footer": false,
                    "format": "",
                    "id": "neoObjects",
                    "maxy": null,
                    "miny": null,
                    "name": "Impact Graph Objects",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Ids In Use"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "nodes",
                            "legend": "Node size",
                            "metric": "impact.Neo4j.Store.NodeStoreSize.value",
                            "metricSource": "Neo4j.Store",
                            "name": "nodes",
                            "rate": false,
                            "rateOptions": null,
                            "type": "area"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "arrays",
                            "legend": "Array size",
                            "metric": "impact.Neo4j.Store.ArrayStoreSize.value",
                            "metricSource": "Neo4j.Store",
                            "name": "arrays",
                            "rate": false,
                            "rateOptions": null,
                            "type": "area"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "props",
                            "legend": "Property size",
                            "metric": "impact.Neo4j.Store.PropertyStoreSize.value",
                            "metricSource": "Neo4j.Store",
                            "name": "props",
                            "rate": false,
                            "rateOptions": null,
                            "type": "area"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "rels",
                            "legend": "Relationship size",
                            "metric": "impact.Neo4j.Store.RelationshipStoreSize.value",
                            "metricSource": "Neo4j.Store",
                            "name": "rels",
                            "rate": false,
                            "rateOptions": null,
                            "type": "area"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "strings",
                            "legend": "String size",
                            "metric": "impact.Neo4j.Store.StringStoreSize.value",
                            "metricSource": "Neo4j.Store",
                            "name": "strings",
                            "rate": false,
                            "rateOptions": null,
                            "type": "area"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "logical",
                            "legend": "Logical Log size",
                            "metric": "impact.Neo4j.Store.LogicalLogSize.value",
                            "metricSource": "Neo4j.Store",
                            "name": "logical",
                            "rate": false,
                            "rateOptions": null,
                            "type": "area"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "total",
                            "legend": "Total size",
                            "metric": "impact.Neo4j.Store.TotalStoreSize.value",
                            "metricSource": "Neo4j.Store",
                            "name": "total",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Impact Graph Database Size",
                    "footer": false,
                    "format": "",
                    "id": "neoSize",
                    "maxy": null,
                    "miny": null,
                    "name": "Impact Graph Database Size",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "area",
                    "units": "",
                    "yAxisLabel": "Bytes"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "committed",
                            "legend": "Committed",
                            "metric": "impact.Neo4j.Transactions.NumberOfCommittedTransactions.value",
                            "metricSource": "Neo4j.Transactions",
                            "name": "committed",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "opened",
                            "legend": "Opened",
                            "metric": "impact.Neo4j.Transactions.NumberOfOpenedTransactions.value",
                            "metricSource": "Neo4j.Transactions",
                            "name": "opened",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "rolledback",
                            "legend": "Rolled Back",
                            "metric": "impact.Neo4j.Transactions.NumberOfRolledBackTransactions.value",
                            "metricSource": "Neo4j.Transactions",
                            "name": "rolledback",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "open",
                            "legend": "Open",
                            "metric": "impact.Neo4j.Transactions.NumberOfOpenTransactions.value",
                            "metricSource": "Neo4j.Transactions",
                            "name": "open",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "peak",
                            "legend": "Peak",
                            "metric": "impact.Neo4j.Transactions.PeakNumberOfConcurrentTransactions.value",
                            "metricSource": "Neo4j.Transactions",
                            "name": "peak",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Impact Graph Transaction Counts",
                    "footer": false,
                    "format": "",
                    "id": "neoTransactions",
                    "maxy": null,
                    "miny": null,
                    "name": "Impact Graph Transactions",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Transaction Rate"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": true,
                            "format": "",
                            "id": "length",
                            "legend": "Queue Length",
                            "metric": "impact.stateQueueLength.value",
                            "metricSource": "impact.stateQueueLength",
                            "name": "length",
                            "rate": false,
                            "rateOptions": null,
                            "type": ""
                        }
                    ],
                    "description": "State Change Queue Length",
                    "footer": false,
                    "format": "",
                    "id": "stateQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "State Change Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "countProcessed",
                            "legend": "Processed Count",
                            "metric": "impact.eventsProcessed.count",
                            "metricSource": "impact.eventsProcessed",
                            "name": "count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "1mProcessed",
                            "legend": "1m Event Processe Rate",
                            "metric": "impact.eventsProcessed.1MinuteRate",
                            "metricSource": "impact.eventsProcessed",
                            "name": "1mcommits",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "5mProcessed",
                            "legend": "5m Event Processe Rate",
                            "metric": "impact.eventsProcessed.5MinuteRate",
                            "metricSource": "impact.eventsProcessed",
                            "name": "5mcommits",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "15mProcessed",
                            "legend": "15m CEvent Processe Rate",
                            "metric": "impact.eventsProcessed.15MinuteRate",
                            "metricSource": "impact.eventsProcessed",
                            "name": "15mcommits",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Count of Events Processed",
                    "footer": false,
                    "format": "",
                    "id": "eventsProcessed",
                    "maxy": null,
                    "miny": null,
                    "name": "Count of Events Processed",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "em0xleikq1q1flys9za10lsdr"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Processed Events"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "JVM File Descriptor Usage Statistics",
                    "ID": "jvm.fd_usage",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.fd_usage",
                            "Name": "FD Usage Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM File Descriptor Usage",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.fd_usage\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM heap vs. non-heap memory usage",
                    "ID": "jvm.memory",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.heap_usage",
                            "Name": "JVM Heap Memory Usage",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.non_heap_usage",
                            "Name": "JVM Non-Heap Memory Usage",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Memory",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.memory.heap_usage\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"jvm.memory.non_heap_usage\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Garbage Collection Statistics",
                    "ID": "jvm.gc",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_MarkSweep.runs",
                            "Name": "JVM Garbage Collection MarkSweep Runs",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_MarkSweep.time",
                            "Name": "JVM Garbage Collection MarkSweep Time",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_Scavenge.runs",
                            "Name": "JVM Garbage Collection Scavenge Runs",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_Scavenge.time",
                            "Name": "JVM Garbage Collection Scavenge Time",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Garbage Collection",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.gc.PS_MarkSweep.runs\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"jvm.gc.PS_MarkSweep.time\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"jvm.gc.PS_Scavenge.runs\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"jvm.gc.PS_Scavenge.time\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Thread States",
                    "ID": "jvm.thread-states",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.blocked",
                            "Name": "JVM Threads in Blocked State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.new",
                            "Name": "JVM Threads in New State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.runnable",
                            "Name": "JVM Threads in Runnable State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.terminated",
                            "Name": "JVM Threads in Terminated State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.timed_waiting",
                            "Name": "JVM Threads in Timed Waiting State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.waiting",
                            "Name": "JVM Threads in Waiting State",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Thread States",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.thread-states.blocked\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"jvm.thread-states.new\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"jvm.thread-states.runnable\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"jvm.thread-states.terminated\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"jvm.thread-states.timed_waiting\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"jvm.thread-states.waiting\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Statistics for the GraphChangeProcessor",
                    "ID": "GraphChangeProcessor.update",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.count",
                            "Name": "Graph Update Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.min",
                            "Name": "Graph Update Minimum Time",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.mean",
                            "Name": "Graph Update Mean Time",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.max",
                            "Name": "Graph Update Maximum Time",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.stddev",
                            "Name": "Graph Update Standard Deviation",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.meanRate",
                            "Name": "Graph Update Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.1MinuteRate",
                            "Name": "Graph Update 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.5MinuteRate",
                            "Name": "Graph Update 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.15MinuteRate",
                            "Name": "Graph Update 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.p50",
                            "Name": "Graph Update 50th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.p75",
                            "Name": "Graph Update 75th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.p95",
                            "Name": "Graph Update 95th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.p98",
                            "Name": "Graph Update 98th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.p99",
                            "Name": "Graph Update 99th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ProcessGraphUpdate.p999",
                            "Name": "Graph Update 99.9th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Graph Update Statistics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.ProcessGraphUpdate.count\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.min\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.mean\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.max\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.stddev\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.meanRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.p50\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.p75\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.p95\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.p98\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.p99\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ProcessGraphUpdate.p999\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Graph Service Commit Rates",
                    "ID": "GraphService.commit",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Commits.count",
                            "Name": "Graph Service Total Commits Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Commits.meanRate",
                            "Name": "Graph Service Total Commits Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Commits.1MinuteRate",
                            "Name": "Graph Service Total Commits 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Commits.5MinuteRate",
                            "Name": "Graph Service Total Commits 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Commits.15MinuteRate",
                            "Name": "Graph Service Total Commits 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Graph Service Commit Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.Commits.count\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Commits.meanRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Commits.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Commits.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Commits.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "State Propagation Statistics",
                    "ID": "StatePropagation",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.count",
                            "Name": "State Propagation Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.min",
                            "Name": "State Propagation Minimum Time",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.mean",
                            "Name": "State Propagation Mean Time",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.max",
                            "Name": "State Propagation Maximum Time",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.stddev",
                            "Name": "State Propagation Standard Deviation",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.meanRate",
                            "Name": "State Propagation Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.1MinuteRate",
                            "Name": "State Propagation 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.5MinuteRate",
                            "Name": "State Propagation 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.15MinuteRate",
                            "Name": "State Propagation 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.p50",
                            "Name": "State Propagation 50th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.p75",
                            "Name": "State Propagation 75th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.p95",
                            "Name": "State Propagation 95th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.p98",
                            "Name": "State Propagation 98th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.p99",
                            "Name": "State Propagation 99th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StatePropagation.p999",
                            "Name": "State Propagation 99.9th Percentile",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "State Propagation Statistics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.StatePropagation.count\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.min\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.mean\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.max\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.stddev\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.meanRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.p50\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.p75\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.p95\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.p98\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.p99\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.StatePropagation.p999\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Graph API Call Rates",
                    "ID": "GraphAPI.call",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.GraphAPI.Calls.count",
                            "Name": "Graph API Total Call Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.GraphAPI.Calls.meanRate",
                            "Name": "Graph API Total Call Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.GraphAPI.Calls.1MinuteRate",
                            "Name": "Graph API Total Call 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.GraphAPI.Calls.5MinuteRate",
                            "Name": "Graph API Total Call 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.GraphAPI.Calls.15MinuteRate",
                            "Name": "Graph API Total Call 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Graph API Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.GraphAPI.Calls.count\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.GraphAPI.Calls.meanRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.GraphAPI.Calls.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.GraphAPI.Calls.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.GraphAPI.Calls.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "ModelIO API Call Rates",
                    "ID": "ModelIOAPI.call",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ModelIOAPI.Calls.count",
                            "Name": "ModelIO API Total Call Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ModelIOAPI.Calls.meanRate",
                            "Name": "ModelIO API Total Call Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ModelIOAPI.Calls.1MinuteRate",
                            "Name": "ModelIO API Total Call 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ModelIOAPI.Calls.5MinuteRate",
                            "Name": "ModelIO API Total Call 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ModelIOAPI.Calls.15MinuteRate",
                            "Name": "ModelIO API Total Call 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "ModelIO API Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.ModelIOAPI.Calls.count\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ModelIOAPI.Calls.meanRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ModelIOAPI.Calls.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ModelIOAPI.Calls.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.ModelIOAPI.Calls.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Impact structural changes",
                    "ID": "ImpactChanges",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.ImpactChanges.value",
                            "Name": "Impact Change Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Impact Change Count",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.ImpactChanges.value\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Impact state changes",
                    "ID": "StateChanges",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.StateChanges.value",
                            "Name": "State Change Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "State Change Count",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.StateChanges.value\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Objects consumed in the Neo4j database",
                    "ID": "Neo4j.Primitive",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Primitive.NumberOfNodeIdsInUse",
                            "Name": "Nodes In Use",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Primitive.NumberOfRelationshipIdsInUse",
                            "Name": "Relationships In Use",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Primitive.NumberOfPropertyIdsInUse",
                            "Name": "Properties In Use",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Primitive.NumberOfRelationshipTypeIdsInUse",
                            "Name": "RelationshipTypes In Use",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Neo4j Primitive Counts",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.Neo4j.Primitive.NumberOfNodeIdsInUse\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Primitive.NumberOfRelationshipIdsInUse\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Primitive.NumberOfPropertyIdsInUse\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Primitive.NumberOfRelationshipTypeIdsInUse\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Size of the Neo4j database",
                    "ID": "Neo4j.Store",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Store.ArrayStoreSize",
                            "Name": "Array Store Size",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Store.LogicalLogSize",
                            "Name": "Logical Log Size",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Store.NodeStoreSize",
                            "Name": "Node Store Size",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Store.PropertyStoreSize",
                            "Name": "Property Store Size",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Store.RelationshipStoreSize",
                            "Name": "Relationship Store Size",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Store.StringStoreSize",
                            "Name": "String Store Size",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Store.TotalStoreSize",
                            "Name": "Total Store Size",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Neo4j Store Size",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.Neo4j.Store.ArrayStoreSize\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Store.LogicalLogSize\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Store.NodeStoreSize\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Store.PropertyStoreSize\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Store.RelationshipStoreSize\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Store.StringStoreSize\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Store.TotalStoreSize\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Transactions on the Neo4j database",
                    "ID": "Neo4j.Transactions",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Transactions.NumberOfCommittedTransactions",
                            "Name": "Committed Transactions",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Transactions.NumberOfOpenedTransactions",
                            "Name": "Opened Transactions",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Transactions.NumberOfOpenTransactions",
                            "Name": "Open Transactions",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Transactions.NumberOfRolledBackTransactions",
                            "Name": "Rolled Back Transactions",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.Transactions.PeakNumberOfConcurrentTransactions",
                            "Name": "Peak Concurrent Transactions",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Neo4j Transactions Counts",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.Neo4j.Transactions.NumberOfCommittedTransactions\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Transactions.NumberOfOpenedTransactions\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Transactions.NumberOfOpenTransactions\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Transactions.NumberOfRolledBackTransactions\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.Transactions.PeakNumberOfConcurrentTransactions\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Nodes cached by the Neo4j database",
                    "ID": "Neo4j.NodeCache",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.NodeCache.CacheSize",
                            "Name": "Cache Size",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.NodeCache.HitCount",
                            "Name": "Hit Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.NodeCache.MissCount",
                            "Name": "Miss Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Neo4j Node Cache Stats",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.Neo4j.NodeCache.CacheSize\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.NodeCache.HitCount\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.NodeCache.MissCount\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Relationships cached by the Neo4j database",
                    "ID": "Neo4j.RelationshipCache",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.RelationshipCache.CacheSize",
                            "Name": "Cache Size",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.RelationshipCache.HitCount",
                            "Name": "Hit Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.Neo4j.RelationshipCache.MissCount",
                            "Name": "Miss Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Neo4j Relationship Cache Stats",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.Neo4j.RelationshipCache.CacheSize\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.RelationshipCache.HitCount\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.Neo4j.RelationshipCache.MissCount\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Length of State Events to Process Queue",
                    "ID": "impact.stateQueueLength",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.stateQueueLength.value",
                            "Name": "Queue Length",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "State Queue Length",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.stateQueueLength.value\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Length of State Events to Process Queue",
                    "ID": "impact.processedEvents",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.eventsProcessed.count",
                            "Name": "Processed Events Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.eventsProcessed.meanRate",
                            "Name": "GProcessed Events Count Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.eventsProcessed.1MinuteRate",
                            "Name": "Processed Events Count 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.eventsProcessed.5MinuteRate",
                            "Name": "Processed Events Count 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.eventsProcessed.15MinuteRate",
                            "Name": "Processed Events Count 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "State Queue Length",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.eventsProcessed.count\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.eventsProcessed.meanRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.eventsProcessed.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.eventsProcessed.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}},{\"metric\":\"impact.eventsProcessed.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"em0xleikq1q1flys9za10lsdr\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "Impact",
        "OomKillDisable": true,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss_impact/etc/jetty-deploy.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Jetty//Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_0.dtd\">\n\n<!-- =============================================================== -->\n<!-- Create the deployment manager                                   -->\n<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->\n<!-- The deplyment manager handles the lifecycle of deploying web    -->\n<!-- applications. Apps are provided by instances of the             -->\n<!-- AppProvider interface.                                          -->\n<!-- =============================================================== -->\n<Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\">\n\n  <Call name=\"addBean\">\n    <Arg>\n      <New id=\"DeploymentManager\" class=\"org.eclipse.jetty.deploy.DeploymentManager\">\n        <Set name=\"contexts\">\n          <Ref refid=\"Contexts\" />\n        </Set>\n        <Call name=\"setContextAttribute\">\n          <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>\n          <Arg>.*/[^/]*servlet-api-[^/]*\\.jar$|.*/javax.servlet.jsp.jstl-.*\\.jar$|.*/org.apache.taglibs.taglibs-standard-impl-.*\\.jar$</Arg>\n        </Call>\n\n        <!-- Add a customize step to the deployment lifecycle -->\n        <!-- uncomment and replace DebugBinding with your extended AppLifeCycle.Binding class\n        <Call name=\"insertLifeCycleNode\">\n          <Arg>deployed</Arg>\n          <Arg>starting</Arg>\n          <Arg>customise</Arg>\n        </Call>\n        <Call name=\"addLifeCycleBinding\">\n          <Arg>\n            <New class=\"org.eclipse.jetty.deploy.bindings.DebugBinding\">\n              <Arg>customise</Arg>\n            </New>\n          </Arg>\n        </Call> -->\n\n        <Call id=\"webappprovider\" name=\"addAppProvider\">\n          <Arg>\n            <New class=\"org.eclipse.jetty.deploy.providers.WebAppProvider\">\n              <Set name=\"monitoredDirName\"><Property name=\"jetty.base\" default=\".\" />/<Property name=\"jetty.deploy.monitoredDirName\" default=\"webapps\"/></Set>\n              <Set name=\"scanInterval\"><Property name=\"jetty.deploy.scanInterval\" default=\"1\"/></Set>\n              <Set name=\"extractWars\"><Property name=\"jetty.deploy.extractWars\" default=\"true\"/></Set>\n              <Set name=\"configurationManager\">\n                <New class=\"org.eclipse.jetty.deploy.PropertiesConfigurationManager\">\n                  <!-- file of context configuration properties\n                  <Set name=\"file\"><SystemProperty name=\"jetty.base\"/>/etc/some.properties</Set>\n                  -->\n                  <!-- set a context configuration property\n                  <Call name=\"put\"><Arg>name</Arg><Arg>value</Arg></Call>\n                  -->\n                </New>\n              </Set>\n            </New>\n          </Arg>\n        </Call>\n      </New>\n    </Arg>\n  </Call>\n</Configure>\n",
                "Filename": "/opt/zenoss_impact/etc/jetty-deploy.xml",
                "Owner": "",
                "Permissions": ""
            },
            "/opt/zenoss_impact/etc/jetty-http.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Jetty//Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_0.dtd\">\n\n<!-- ============================================================= -->\n<!-- Configure the Jetty Server instance with an ID \"Server\"       -->\n<!-- by adding a HTTP connector.                                   -->\n<!-- This configuration must be used in conjunction with jetty.xml -->\n<!-- ============================================================= -->\n<Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\">\n\n  <!-- =========================================================== -->\n  <!-- Http Configuration.                                         -->\n  <!-- This is a common configuration instance used by all         -->\n  <!-- connectors that can carry HTTP semantics (HTTP, HTTPS, SPDY)-->\n  <!-- It configures the non wire protocol aspects of the HTTP     -->\n  <!-- semantic.                                                   -->\n  <!--                                                             -->\n  <!-- This configuration is only defined here and is used by      -->\n  <!-- reference from the jetty-http.xml, jetty-https.xml and      -->\n  <!-- jetty-spdy.xml configuration files which instantiate the    -->\n  <!-- connectors.                                                 -->\n  <!--                                                             -->\n  <!-- Consult the javadoc of o.e.j.server.HttpConfiguration       -->\n  <!-- for all configuration that may be set here.                 -->\n  <!-- =========================================================== -->\n  <New id=\"httpConfig\" class=\"org.eclipse.jetty.server.HttpConfiguration\">\n    <Set name=\"secureScheme\">https</Set>\n    <Set name=\"securePort\"><Property name=\"jetty.secure.port\" default=\"8443\" /></Set>\n    <Set name=\"outputBufferSize\"><Property name=\"jetty.output.buffer.size\" default=\"32768\" /></Set>\n    <Set name=\"outputAggregationSize\"><Property name=\"jetty.output.aggregation.size\" default=\"8192\" /></Set>\n    <Set name=\"requestHeaderSize\"><Property name=\"jetty.request.header.size\" default=\"8192\" /></Set>\n    <Set name=\"responseHeaderSize\"><Property name=\"jetty.response.header.size\" default=\"8192\" /></Set>\n    <Set name=\"sendServerVersion\"><Property name=\"jetty.send.server.version\" default=\"true\" /></Set>\n    <Set name=\"sendDateHeader\"><Property name=\"jetty.send.date.header\" default=\"false\" /></Set>\n    <Set name=\"headerCacheSize\">512</Set>\n    <Set name=\"delayDispatchUntilContent\"><Property name=\"jetty.delayDispatchUntilContent\" default=\"false\"/></Set>\n    <!-- Uncomment to enable handling of X-Forwarded- style headers\n    <Call name=\"addCustomizer\">\n      <Arg><New class=\"org.eclipse.jetty.server.ForwardedRequestCustomizer\"/></Arg>\n    </Call>\n    -->\n  </New>\n\n  <!-- =========================================================== -->\n  <!-- Add a HTTP Connector.                                       -->\n  <!-- Configure an o.e.j.server.ServerConnector with a single     -->\n  <!-- HttpConnectionFactory instance using the common httpConfig  -->\n  <!-- instance defined in jetty.xml                               -->\n  <!--                                                             -->\n  <!-- Consult the javadoc of o.e.j.server.ServerConnector and     -->\n  <!-- o.e.j.server.HttpConnectionFactory for all configuration    -->\n  <!-- that may be set here.                                       -->\n  <!-- =========================================================== -->\n  <Call name=\"addConnector\">\n    <Arg>\n      <New class=\"org.eclipse.jetty.server.ServerConnector\">\n        <Arg name=\"server\"><Ref refid=\"Server\" /></Arg>\n        <Arg name=\"acceptors\" type=\"int\"><Property name=\"http.acceptors\" default=\"-1\"/></Arg>\n        <Arg name=\"selectors\" type=\"int\"><Property name=\"http.selectors\" default=\"-1\"/></Arg>\n        <Arg name=\"factories\">\n          <Array type=\"org.eclipse.jetty.server.ConnectionFactory\">\n            <Item>\n              <New class=\"org.eclipse.jetty.server.HttpConnectionFactory\">\n                <Arg name=\"config\"><Ref refid=\"httpConfig\" /></Arg>\n              </New>\n            </Item>\n          </Array>\n        </Arg>\n        <Set name=\"host\"><Property name=\"jetty.host\" /></Set>\n        <Set name=\"port\"><Property name=\"jetty.port\" default=\"8083\" /></Set>\n        <Set name=\"idleTimeout\"><Property name=\"http.timeout\" default=\"300000\"/></Set>\n        <Set name=\"soLingerTime\"><Property name=\"http.soLingerTime\" default=\"-1\"/></Set>\n        <Set name=\"acceptorPriorityDelta\"><Property name=\"http.acceptorPriorityDelta\" default=\"0\"/></Set>\n        <Set name=\"selectorPriorityDelta\"><Property name=\"http.selectorPriorityDelta\" default=\"0\"/></Set>\n        <Set name=\"acceptQueueSize\"><Property name=\"http.acceptQueueSize\" default=\"0\"/></Set>\n      </New>\n    </Arg>\n  </Call>\n\n</Configure>\n",
                "Filename": "/opt/zenoss_impact/etc/jetty-http.xml",
                "Owner": "",
                "Permissions": ""
            },
            "/opt/zenoss_impact/etc/jetty-logging.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Jetty//Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_0.dtd\">\n\n\n<!-- =============================================================== -->\n<!-- Configure stderr and stdout to a Jetty rollover log file        -->\n<!-- this configuration file should be used in combination with      -->\n<!-- other configuration files.  e.g.                                -->\n<!--    java -jar start.jar etc/jetty-logging.xml                    -->\n<!-- =============================================================== -->\n<Configure id=\"logging\" class=\"org.eclipse.jetty.util.log.Log\">\n\n    <New id=\"ServerLog\" class=\"java.io.PrintStream\">\n      <Arg>\n        <!--<New class=\"org.eclipse.jetty.util.RolloverFileOutputStream\">-->\n          <!--<Arg><SystemProperty name=\"jetty.logs\" default=\"./log\"/>/zenoss_impact-stdio.yyyy_mm_dd.log</Arg>-->\n          <!--<Arg type=\"boolean\">true</Arg>-->\n          <!--<Arg type=\"int\">7</Arg>-->\n          <!--<Arg><Call class=\"java.util.TimeZone\" name=\"getTimeZone\"><Arg>GMT</Arg></Call></Arg>-->\n          <!--<Get id=\"ServerLogName\" name=\"datedFilename\"/>-->\n        <!--</New>-->\n          <New class=\"com.zenoss.dsa.utils.RolloverSizeBasedFileOutputStream\">\n              <Arg><SystemProperty name=\"jetty.logs\" default=\"./log\"/>/zenoss_impact-stdio.log</Arg>\n              <Arg type=\"int\">1</Arg>\n              <Arg type=\"int\">10</Arg>\n              <Arg type=\"string\">10MB</Arg>\n          </New>\n      </Arg>\n    </New>\n\n    <Get name=\"rootLogger\">\n      <Call name=\"info\"><Arg>Redirecting stderr/stdout to <Ref refid=\"ServerLogName\"/></Arg></Call>\n    </Get>\n    <Call class=\"java.lang.System\" name=\"setErr\"><Arg><Ref refid=\"ServerLog\"/></Arg></Call>\n    <Call class=\"java.lang.System\" name=\"setOut\"><Arg><Ref refid=\"ServerLog\"/></Arg></Call>\n\n</Configure>\n\n\n\n",
                "Filename": "/opt/zenoss_impact/etc/jetty-logging.xml",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/jetty.ini": {
                "Content": "#===========================================================\n# Jetty start.jar arguments\n# Each line of this file is prepended to the command line \n# arguments # of a call to:\n#    java -jar start.jar [arg...]\n#===========================================================\n\n\n\n#===========================================================\n# If the arguements in this file include JVM arguments \n# (eg -Xmx512m) or JVM System properties (eg com.sun.???),\n# then these will not take affect unless the --exec \n# parameter is included or if the output from --dry-run\n# is executed like:\n#   eval $(java -jar start.jar --dry-run)\n#\n# Below are some recommended options for Sun's JRE\n#-----------------------------------------------------------\n# --exec\n# -Dcom.sun.management.jmxremote\n# -Xmx2000m\n# -Xmn512m\n# -verbose:gc\n# -XX:+PrintGCDateStamps\n# -XX:+PrintGCTimeStamps\n# -XX:+PrintGCDetails\n# -XX:+PrintTenuringDistribution\n# -XX:+PrintCommandLineFlags\n# -XX:+DisableExplicitGC\n# -XX:+UseConcMarkSweepGC\n# -XX:ParallelCMSThreads=2\n# -XX:+CMSClassUnloadingEnabled  \n# -XX:+UseCMSCompactAtFullCollection\n# -XX:CMSInitiatingOccupancyFraction=80\n#-----------------------------------------------------------\n\n\n#===========================================================\n# Start classpath OPTIONS.\n# These control what classes are on the classpath\n# for a full listing do\n#   java -jar start.jar --list-options\n#-----------------------------------------------------------\nOPTIONS=Server,ext\n#-----------------------------------------------------------\n\n\n#===========================================================\n# Configuration files.\n# For a full list of available configuration files do\n#   java -jar start.jar --help\n#-----------------------------------------------------------\netc/jetty.xml\n",
                "Filename": "/opt/zenoss_impact/etc/jetty.ini",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/jetty.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Jetty//Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_0.dtd\">\n\n<!-- =============================================================== -->\n<!-- Documentation of this file format can be found at:              -->\n<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->\n<!--                                                                 -->\n<!-- Additional configuration files are available in $JETTY_HOME/etc -->\n<!-- and can be mixed in. See start.ini file for the default         -->\n<!-- configuration files.                                            -->\n<!--                                                                 -->\n<!-- For a description of the configuration mechanism, see the       -->\n<!-- output of:                                                      -->\n<!--   java -jar start.jar -?                                        -->\n<!-- =============================================================== -->\n\n<!-- =============================================================== -->\n<!-- Configure a Jetty Server instance with an ID \"Server\"           -->\n<!-- Other configuration files may also configure the \"Server\"       -->\n<!-- ID, in which case they are adding configuration to the same     -->\n<!-- instance.  If other configuration have a different ID, they     -->\n<!-- will create and configure another instance of Jetty.            -->\n<!-- Consult the javadoc of o.e.j.server.Server for all              -->\n<!-- configuration that may be set here.                             -->\n<!-- =============================================================== -->\n<Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\">\n\n    <!-- =========================================================== -->\n    <!-- Configure the Server Thread Pool.                           -->\n    <!-- The server holds a common thread pool which is used by      -->\n    <!-- default as the executor used by all connectors and servlet  -->\n    <!-- dispatches.                                                 -->\n    <!--                                                             -->\n    <!-- Configuring a fixed thread pool is vital to controlling the -->\n    <!-- maximal memory footprint of the server and is a key tuning  -->\n    <!-- parameter for tuning.  In an application that rarely blocks -->\n    <!-- then maximal threads may be close to the number of 5*CPUs.  -->\n    <!-- In an application that frequently blocks, then maximal      -->\n    <!-- threads should be set as high as possible given the memory  -->\n    <!-- available.                                                  -->\n    <!--                                                             -->\n    <!-- Consult the javadoc of o.e.j.util.thread.QueuedThreadPool   -->\n    <!-- for all configuration that may be set here.                 -->\n    <!-- =========================================================== -->\n    <!-- uncomment to change type of threadpool\n    <Arg name=\"threadpool\"><New id=\"threadpool\" class=\"org.eclipse.jetty.util.thread.QueuedThreadPool\"/></Arg>\n    -->\n    <Get name=\"ThreadPool\">\n      <Set name=\"minThreads\" type=\"int\"><Property name=\"threads.min\" default=\"10\"/></Set>\n      <Set name=\"maxThreads\" type=\"int\"><Property name=\"threads.max\" default=\"200\"/></Set>\n      <Set name=\"idleTimeout\" type=\"int\"><Property name=\"threads.timeout\" default=\"300000\"/></Set>\n      <Set name=\"detailedDump\">false</Set>\n    </Get>\n\n    <!-- =========================================================== -->\n    <!-- Add shared Scheduler instance                               -->\n    <!-- =========================================================== -->\n    <Call name=\"addBean\">\n      <Arg>\n        <New class=\"org.eclipse.jetty.util.thread.ScheduledExecutorScheduler\"/>\n      </Arg>\n    </Call>\n\n    <!-- =========================================================== -->\n    <!-- Set the default handler structure for the Server            -->\n    <!-- A handler collection is used to pass received requests to   -->\n    <!-- both the ContextHandlerCollection, which selects the next   -->\n    <!-- handler by context path and virtual host, and the           -->\n    <!-- DefaultHandler, which handles any requests not handled by   -->\n    <!-- the context handlers.                                       -->\n    <!-- Other handlers may be added to the \"Handlers\" collection,   -->\n    <!-- for example the jetty-requestlog.xml file adds the          -->\n    <!-- RequestLogHandler after the default handler                 -->\n    <!-- =========================================================== -->\n    <Set name=\"handler\">\n      <New id=\"Handlers\" class=\"org.eclipse.jetty.server.handler.HandlerCollection\">\n        <Set name=\"handlers\">\n         <Array type=\"org.eclipse.jetty.server.Handler\">\n           <Item>\n             <New id=\"Contexts\" class=\"org.eclipse.jetty.server.handler.ContextHandlerCollection\"/>\n           </Item>\n           <Item>\n             <New id=\"DefaultHandler\" class=\"org.eclipse.jetty.server.handler.DefaultHandler\"/>\n           </Item>\n         </Array>\n        </Set>\n      </New>\n    </Set>\n\n    <!-- =========================================================== -->\n    <!-- extra server options                                        -->\n    <!-- =========================================================== -->\n    <Set name=\"stopAtShutdown\">true</Set>\n    <Set name=\"stopTimeout\">5000</Set>\n    <Set name=\"dumpAfterStart\"><Property name=\"jetty.dump.start\" default=\"false\"/></Set>\n    <Set name=\"dumpBeforeStop\"><Property name=\"jetty.dump.stop\" default=\"false\"/></Set>\n\n</Configure>\n",
                "Filename": "/opt/zenoss_impact/etc/jetty.xml",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n##############################################################################\n# \n# Copyright (C) Zenoss, Inc. 2011, all rights reserved.\n# \n# This content is made available according to terms specified in\n# License.zenoss under the directory where your Zenoss product is installed.\n# \n##############################################################################\n-->\n\n\n<configuration scan=\"true\">\n    <statusListener class=\"ch.qos.logback.core.status.OnConsoleStatusListener\" />\n\n    <if condition='isNull(\"ZENOSS_DAEMON\")'>\n        <then>\n            <appender name=\"APPENDER\" class=\"ch.qos.logback.core.ConsoleAppender\">\n                <!-- encoders are assigned the type\n             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->\n                <encoder>\n                    <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>\n                </encoder>\n            </appender>\n        </then>\n        <else>\n            <appender name=\"APPENDER\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n                <file>${IMPACT_HOME:-.}/log/zenoss_impact.log</file>\n                <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n                    <!-- daily rollover -->\n                    <fileNamePattern>${IMPACT_HOME:-.}/log/zenoss_impact.log.%i</fileNamePattern>\n                    <!-- keep up to 3 logs by default -->\n                    <minIndex>1</minIndex>\n                    <maxIndex>3</maxIndex>\n                </rollingPolicy>\n                <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n                    <maxFileSize>10MB</maxFileSize>\n                </triggeringPolicy>\n                <encoder>\n                    <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>\n                </encoder>\n            </appender>\n        </else>\n    </if>\n\n    <contextName>zenimpactserver</contextName>\n    <jmxConfigurator />\n    <logger name=\"org.springframework\" level=\"WARN\"/>\n    <logger name=\"ch.qos.logback\" level=\"WARN\"/>\n    <logger name=\"com.zenoss\" level=\"${ZENOSS_LOG_LEVEL:-INFO}\" />\n    <logger name=\"org.zenoss\" level=\"${ZENOSS_LOG_LEVEL:-INFO}\" />\n    <logger name=\"org.neo4j\" level=\"WARN\" />\n    <logger name=\"org.jboss.netty.channel.DefaultChannelPipeline\" level=\"ERROR\" />\n\n    <root level=\"INFO\">\n        <appender-ref ref=\"APPENDER\"/>\n    </root>\n\n</configuration>\n\n",
                "Filename": "/opt/zenoss_impact/etc/logback.xml",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/neo4j.properties": {
                "Content": "## Path where Neo4j database is stored\n#store_dir=var/db\n\n## Allow neo4j version upgrades\n#allow_store_upgrade=true\n\n#control the Neo4J transaction logs retention policy\n#see: http://docs.neo4j.org/chunked/stable/configuration-logical-logs.html\n#keep_logical_logs=10 files\n\n#Turn off/on remote webadmin and remote console\n#remote_shell_enabled=false\n\n#enable the Neo4J online backup service\n#online_backup_enabled=true\n\n#Neo4j logging configuration file\n#log.configuration=logback.xml\n",
                "Filename": "/opt/zenoss_impact/etc/neo4j.properties",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/zenoss-dsa-amqpconf.properties": {
                "Content": "#\n# Copyright (C) 2010, 2013, Zenoss Inc.  All Rights Reserved.\n#\n\namqphost={{(getContext . \"global.conf.amqphost\")}}\namqpport={{(getContext . \"global.conf.amqpport\")}}\namqpvhost={{(getContext . \"global.conf.amqpvhost\")}}\namqpuser={{(getContext . \"global.conf.amqpuser\")}}\namqppassword={{(getContext . \"global.conf.amqppassword\")}}\n\n\n# Messaging Configuration\n#\n# You can configure several aspects of the messaging system in this file. After\n# making a change to this file, you must drop any queues modified and restart\n# the processes that consume messages from those queues.\n#\n# To drop queues, use the zenqdelete script on the Zenoss master server:\n#\n#  $ zenqdelete zenoss.queues.zep.rawevents\n#\n# To get queue names, use rabbitmqctl:\n#\n#  $ rabbitmqctl list_queues -p /zenoss\n#\n\n\n## Message Persistence\n##\n## You can configure whether messages published to a given exchange exist\n## only in memory, thus being lost if Rabbit crashes, or are persisted to\n## disk for the sake of recovery. Non-persistent messages are MUCH faster\n## and do not use up disk space if a queue backs up.\n##\n## Possible values:\n##   1 -- do not persist\n##   2 -- persist\n##\n\n# Default is to have all messages persist to disk\n#exchange.default.delivery_mode = 2\n\n\n## Message Compression\n##\n## You can configure whether messages published to a given exchange should be\n## compressed.\n##\n## Possible values:\n##   deflate -- use DEFLATE algorithm\n##   none -- do not compress messages\n##\n\n# Default is to compress messages published to all exchanges\n#exchange.default.compression = deflate\n\n\n## Message TTL (time to live)\n##\n## You can configure messages published to a queue to expire if they have not\n## been delivered to a client within a given time. Value is in milliseconds.\n\n# Default is to have messages expire after a day\n#queue.default.x-message-ttl = 86400000\n\n\n## Queue Expiration\n##\n## You can configure unused queues to be deleted automatically after a period\n## of time. \"Unused\" means that the queue has no consumers and has not been\n## redeclared. Value is in milliseconds.\n\n# Default is to have queues expire after a day\n#queue.default.x-expires = 86400000\n\n",
                "Filename": "/opt/zenoss_impact/etc/zenoss-dsa-amqpconf.properties",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/zenoss-dsa.env": {
                "Content": "JVM_ARGS=\"${JVM_ARGS} -server\"\nJVM_ARGS=\"${JVM_ARGS} -DZENOSS_DAEMON=zenoss_impact\"\nJVM_ARGS=\"${JVM_ARGS} -Xmx{{.RAMCommitment}}\"\nJVM_ARGS=\"${JVM_ARGS} -Dcom.sun.management.jmxremote\"\nJVM_ARGS=\"${JVM_ARGS} -Dcom.sun.management.jmxremote.port=12345\"\nJVM_ARGS=\"${JVM_ARGS} -Dcom.sun.management.jmxremote.authenticate=false\"\nJVM_ARGS=\"${JVM_ARGS} -Dcom.sun.management.jmxremote.ssl=false\"\nJVM_ARGS=\"${JVM_ARGS} -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:ParallelGCThreads=8 -XX:ConcGCThreads=3\"\n",
                "Filename": "/opt/zenoss_impact/etc/zenoss-dsa.env",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            },
            "/opt/zenoss_impact/etc/zenoss-dsa.properties": {
                "Content": "#\n# Copyright (c) 2010, 2013-2014 Zenoss, Inc. All Rights Reserved.\n#\n\n# The number of milliseconds to wait between connection retries\n#dsa.amqp.retry=60000\n\n# The URI to the RabbitMQ server. This property is ignored if the file\n# dsa.amqpconf defines can be read in which case the AMQP URI will be\n# built from the properties found in that location.\n#dsa.amqp.uri=amqp://{{(getContext . \"global.conf.amqpuser\")}}:{{(getContext . \"global.conf.amqppassword\")}}@{{(getContext . \"global.conf.amqphost\")}}:{{(getContext . \"global.conf.amqpport\")}}{{(getContext . \"global.conf.amqpvhost\")}}\n\n# Control how long (in milliseconds) to wait for a quiescent queue before\n# processing an incomplete batch of state events\n#dsa.amqp.statequeuetimeout=100\n\n# Control how large a batch of state events is\n#dsa.amqp.statequeuebatchsize=100\n\n# Control the behavior of the StateNode wrapper object cache\n# If impact memory usage remains below what is configured, increase this.\n# See: http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/cache/CacheBuilderSpec.html\n#dsa.statenode.cacheconfig=maximumSize=500000\n\n# Limit the maximum number of contributing events reported with a service event.\n# This is dependent on the maximum object size configured in the ZEP queue.\n#dsa.maximum_reported_events=20\n\n#Configure zenoss client\n#dsa.zenoss.protocol=http\n#dsa.zenoss.host=localhost\n#dsa.zenoss.port=8080\ndsa.zenoss.user={{(getContext . \"global.conf.zauth-username\")}}\ndsa.zenoss.password={{(getContext . \"global.conf.zauth-password\")}}\n\n# Depricated!\n# By this key the node discovery feature can be enabled/disabled.\n# Since it is deprecated it might be removed in the following versions of Impact.\n# In this case the feature will be enabled permanently.\ndsa.zenoss.nodediscovery=true\n# how many nodes will be processed in one update job.\ndsa.zenoss.batch_size=100\n# time period to fire discovery in seconds\ndsa.zenoss.time_period=30\n\n#Timeout in milliseconds of the quiesce transaction - MUST be lower than dsa.jetty.timeout\n#dsa.quiesce.txn.timeout=295000\n\n#How often to post internal application metrics\n#dsa.metrics.post.period=30s\n\n#Migration config\n#dsa.migration.transactionUpdateLimit=100000\n",
                "Filename": "/opt/zenoss_impact/etc/zenoss-dsa.properties",
                "Owner": "zenossimpact:zenoss",
                "Permissions": "664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "8G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "PAUSE_CHECK_TIMEOUT=600000 ${IMPACT_HOME:-/opt/zenoss_impact}/bin/quiesce.sh pause",
            "Resume": "${IMPACT_HOME:-/opt/zenoss_impact}/bin/quiesce.sh resume"
        },
        "StartLevel": 1,
        "Startup": "su - zenossimpact -c 'zenoss_impact run'",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/opt/zenoss_impact/var",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenossimpact:zenoss",
                "Permission": "0775",
                "ResourcePath": "impact",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss_impact/lib/ext/adapters",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenossimpact:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks/impact/lib/ext/adapters",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 2,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/solr/server/solr/configsets/zenoss_model/conf/solrconfig.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<!-- \n     For more details about configurations options that may appear in\n     this file, see http://wiki.apache.org/solr/SolrConfigXml. \n-->\n<config>\n  <!-- In all configuration below, a prefix of \"solr.\" for class names\n       is an alias that causes solr to search appropriate packages,\n       including org.apache.solr.(search|update|request|core|analysis)\n\n       You may also specify a fully qualified Java classname if you\n       have your own custom plugins.\n    -->\n\n  <!-- Controls what version of Lucene various components of Solr\n       adhere to.  Generally, you want to use the latest version to\n       get all bug fixes and improvements. It is highly recommended\n       that you fully re-index after changing this setting as it can\n       affect both how text is indexed and queried.\n  -->\n  <luceneMatchVersion>6.5.0</luceneMatchVersion>\n\n  <!-- Data Directory\n\n       Used to specify an alternate directory to hold all index data\n       other than the default ./data under the Solr home.  If\n       replication is in use, this should match the replication\n       configuration.\n    -->\n  <dataDir>${solr.data.dir:}</dataDir>\n\n\n  <!-- The DirectoryFactory to use for indexes.\n       \n       solr.StandardDirectoryFactory is filesystem\n       based and tries to pick the best implementation for the current\n       JVM and platform.  solr.NRTCachingDirectoryFactory, the default,\n       wraps solr.StandardDirectoryFactory and caches small files in memory\n       for better NRT performance.\n\n       One can force a particular implementation via solr.MMapDirectoryFactory,\n       solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory.\n\n       solr.RAMDirectoryFactory is memory based, not\n       persistent, and doesn't work with replication.\n    -->\n  <directoryFactory name=\"DirectoryFactory\" \n                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\">\n  </directoryFactory> \n\n  <!-- The CodecFactory for defining the format of the inverted index.\n       The default implementation is SchemaCodecFactory, which is the official Lucene\n       index format, but hooks into the schema to provide per-field customization of\n       the postings lists and per-document values in the fieldType element\n       (postingsFormat/docValuesFormat). Note that most of the alternative implementations\n       are experimental, so if you choose to customize the index format, it's a good\n       idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)\n       before upgrading to a newer version to avoid unnecessary reindexing.\n  -->\n  <codecFactory class=\"solr.SchemaCodecFactory\"/>\n\n  <schemaFactory class=\"ClassicIndexSchemaFactory\"/>\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Index Config - These settings control low-level behavior of indexing\n       Most example settings here show the default value, but are commented\n       out, to more easily see where customizations have been made.\n       \n       Note: This replaces <indexDefaults> and <mainIndex> from older versions\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <indexConfig>\n\n    <!-- LockFactory \n\n         This option specifies which Lucene LockFactory implementation\n         to use.\n      \n         single = SingleInstanceLockFactory - suggested for a\n                  read-only index or when there is no possibility of\n                  another process trying to modify the index.\n         native = NativeFSLockFactory - uses OS native file locking.\n                  Do not use when multiple solr webapps in the same\n                  JVM are attempting to share a single index.\n         simple = SimpleFSLockFactory  - uses a plain file for locking\n\n         Defaults: 'native' is default for Solr3.6 and later, otherwise\n                   'simple' is the default\n\n         More details on the nuances of each LockFactory...\n         http://wiki.apache.org/lucene-java/AvailableLockFactories\n    -->\n    <lockType>${solr.lock.type:native}</lockType>\n\n    <!-- Lucene Infostream\n       \n         To aid in advanced debugging, Lucene provides an \"InfoStream\"\n         of detailed information when indexing.\n\n         Setting the value to true will instruct the underlying Lucene\n         IndexWriter to write its info stream to solr's log. By default,\n         this is enabled here, and controlled through log4j.properties.\n      -->\n     <infoStream>true</infoStream>\n  </indexConfig>\n\n\n  <!-- JMX\n       \n       This example enables JMX if and only if an existing MBeanServer\n       is found, use this if you want to configure JMX through JVM\n       parameters. Remove this to disable exposing Solr configuration\n       and statistics to JMX.\n\n       For more details see http://wiki.apache.org/solr/SolrJmx\n    -->\n  <jmx />\n  <!-- If you want to connect to a particular server, specify the\n       agentId \n    -->\n  <!-- <jmx agentId=\"myAgent\" /> -->\n  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->\n  <!-- <jmx serviceUrl=\"service:jmx:rmi:///jndi/rmi://localhost:9999/solr\"/>\n    -->\n\n  <!-- The default high-performance update handler -->\n  <updateHandler class=\"solr.DirectUpdateHandler2\">\n\n    <!-- Enables a transaction log, used for real-time get, durability, and\n         and solr cloud replica recovery.  The log can grow as big as\n         uncommitted changes to the index, so use of a hard autoCommit\n         is recommended (see below).\n         \"dir\" - the target directory for transaction logs, defaults to the\n                solr data directory.  --> \n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n    </updateLog>\n \n    <!-- AutoCommit\n\n         Perform a hard commit automatically under certain conditions.\n         Instead of enabling autoCommit, consider using \"commitWithin\"\n         when adding documents. \n\n         http://wiki.apache.org/solr/UpdateXmlMessages\n\n         maxDocs - Maximum number of documents to add since the last\n                   commit before automatically triggering a new commit.\n\n         maxTime - Maximum amount of time in ms that is allowed to pass\n                   since a document was added before automatically\n                   triggering a new commit. \n         openSearcher - if false, the commit causes recent index changes\n           to be flushed to stable storage, but does not cause a new\n           searcher to be opened to make those changes visible.\n\n         If the updateLog is enabled, then it's highly recommended to\n         have some sort of hard autoCommit to limit the log size.\n      -->\n     <autoCommit> \n       <maxTime>${solr.autoCommit.maxTime:15000}</maxTime> \n       <openSearcher>false</openSearcher> \n     </autoCommit>\n\n    <!-- softAutoCommit is like autoCommit except it causes a\n         'soft' commit which only ensures that changes are visible\n         but does not ensure that data is synced to disk.  This is\n         faster and more near-realtime friendly than a hard commit.\n      -->\n     <autoSoftCommit> \n       <maxTime>${solr.autoSoftCommit.maxTime:-1}</maxTime> \n     </autoSoftCommit>\n\n  </updateHandler>\n  \n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Query section - these settings control query time things like caches\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <query>\n    <!-- Max Boolean Clauses\n\n         Maximum number of clauses in each BooleanQuery,  an exception\n         is thrown if exceeded.\n\n         ** WARNING **\n         \n         This option actually modifies a global Lucene property that\n         will affect all SolrCores.  If multiple solrconfig.xml files\n         disagree on this property, the value at any given moment will\n         be based on the last SolrCore to be initialized.\n         \n      -->\n    <maxBooleanClauses>20000</maxBooleanClauses>\n\n\n    <!-- Solr Internal Query Caches\n\n         There are two implementations of cache available for Solr,\n         LRUCache, based on a synchronized LinkedHashMap, and\n         FastLRUCache, based on a ConcurrentHashMap.  \n\n         FastLRUCache has faster gets and slower puts in single\n         threaded operation and thus is generally faster than LRUCache\n         when the hit ratio of the cache is high (> 75%), and may be\n         faster under other scenarios on multi-cpu systems.\n    -->\n\n    <!-- Filter Cache\n\n         Cache used by SolrIndexSearcher for filters (DocSets),\n         unordered sets of *all* documents that match a query.  When a\n         new searcher is opened, its caches may be prepopulated or\n         \"autowarmed\" using data from caches in the old searcher.\n         autowarmCount is the number of items to prepopulate.  For\n         LRUCache, the autowarmed items will be the most recently\n         accessed items.\n\n         Parameters:\n           class - the SolrCache implementation LRUCache or\n               (LRUCache or FastLRUCache)\n           size - the maximum number of entries in the cache\n           initialSize - the initial capacity (number of entries) of\n               the cache.  (see java.util.HashMap)\n           autowarmCount - the number of entries to prepopulate from\n               and old cache.  \n      -->\n    <filterCache class=\"solr.FastLRUCache\"\n                 size=\"512\"\n                 initialSize=\"512\"\n                 autowarmCount=\"0\"/>\n\n    <!-- Query Result Cache\n         \n         Caches results of searches - ordered lists of document ids\n         (DocList) based on a query, a sort, and the range of documents requested.  \n      -->\n    <queryResultCache class=\"solr.LRUCache\"\n                     size=\"512\"\n                     initialSize=\"512\"\n                     autowarmCount=\"0\"/>\n   \n    <!-- Document Cache\n\n         Caches Lucene Document objects (the stored fields for each\n         document).  Since Lucene internal document ids are transient,\n         this cache will not be autowarmed.  \n      -->\n    <documentCache class=\"solr.LRUCache\"\n                   size=\"512\"\n                   initialSize=\"512\"\n                   autowarmCount=\"0\"/>\n    \n    <!-- custom cache currently used by block join --> \n    <cache name=\"perSegFilter\"\n      class=\"solr.search.LRUCache\"\n      size=\"10\"\n      initialSize=\"0\"\n      autowarmCount=\"10\"\n      regenerator=\"solr.NoOpRegenerator\" />\n\n    <!-- Lazy Field Loading\n\n         If true, stored fields that are not requested will be loaded\n         lazily.  This can result in a significant speed improvement\n         if the usual case is to not load all stored fields,\n         especially if the skipped fields are large compressed text\n         fields.\n    -->\n    <enableLazyFieldLoading>true</enableLazyFieldLoading>\n\n   <!-- Result Window Size\n\n        An optimization for use with the queryResultCache.  When a search\n        is requested, a superset of the requested number of document ids\n        are collected.  For example, if a search for a particular query\n        requests matching documents 10 through 19, and queryWindowSize is 50,\n        then documents 0 through 49 will be collected and cached.  Any further\n        requests in that range can be satisfied via the cache.  \n     -->\n   <queryResultWindowSize>20</queryResultWindowSize>\n\n   <!-- Maximum number of documents to cache for any entry in the\n        queryResultCache. \n     -->\n   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>\n\n    <!-- Use Cold Searcher\n\n         If a search request comes in and there is no current\n         registered searcher, then immediately register the still\n         warming searcher and use it.  If \"false\" then all requests\n         will block until the first searcher is done warming.\n      -->\n    <useColdSearcher>false</useColdSearcher>\n\n    <!-- Max Warming Searchers\n         \n         Maximum number of searchers that may be warming in the\n         background concurrently.  An error is returned if this limit\n         is exceeded.\n\n         Recommend values of 1-2 for read-only slaves, higher for\n         masters w/o cache warming.\n      -->\n    <maxWarmingSearchers>2</maxWarmingSearchers>\n\n  </query>\n\n\n  <!-- Request Dispatcher\n\n       This section contains instructions for how the SolrDispatchFilter\n       should behave when processing requests for this SolrCore.\n\n       handleSelect is a legacy option that affects the behavior of requests\n       such as /select?qt=XXX\n\n       handleSelect=\"true\" will cause the SolrDispatchFilter to process\n       the request and dispatch the query to a handler specified by the \n       \"qt\" param, assuming \"/select\" isn't already registered.\n\n       handleSelect=\"false\" will cause the SolrDispatchFilter to\n       ignore \"/select\" requests, resulting in a 404 unless a handler\n       is explicitly registered with the name \"/select\"\n\n       handleSelect=\"true\" is not recommended for new users, but is the default\n       for backwards compatibility\n    -->\n  <requestDispatcher handleSelect=\"false\" >\n    <!-- Request Parsing\n\n         These settings indicate how Solr Requests may be parsed, and\n         what restrictions may be placed on the ContentStreams from\n         those requests\n\n         enableRemoteStreaming - enables use of the stream.file\n         and stream.url parameters for specifying remote streams.\n\n         multipartUploadLimitInKB - specifies the max size (in KiB) of\n         Multipart File Uploads that Solr will allow in a Request.\n         \n         formdataUploadLimitInKB - specifies the max size (in KiB) of\n         form data (application/x-www-form-urlencoded) sent via\n         POST. You can use POST to pass request parameters not\n         fitting into the URL.\n         \n         addHttpRequestToContext - if set to true, it will instruct\n         the requestParsers to include the original HttpServletRequest\n         object in the context map of the SolrQueryRequest under the \n         key \"httpRequest\". It will not be used by any of the existing\n         Solr components, but may be useful when developing custom \n         plugins.\n         \n         *** WARNING ***\n         The settings below authorize Solr to fetch remote files, You\n         should make sure your system has some authentication before\n         using enableRemoteStreaming=\"true\"\n\n      --> \n    <requestParsers enableRemoteStreaming=\"true\" \n                    multipartUploadLimitInKB=\"2048000\"\n                    formdataUploadLimitInKB=\"2048\"\n                    addHttpRequestToContext=\"false\"/>\n\n    <!-- HTTP Caching\n\n         Set HTTP caching related parameters (for proxy caches and clients).\n\n         The options below instruct Solr not to output any HTTP Caching\n         related headers\n      -->\n    <httpCaching never304=\"true\" />\n\n  </requestDispatcher>\n\n  <!-- Request Handlers \n\n       http://wiki.apache.org/solr/SolrRequestHandler\n\n       Incoming queries will be dispatched to a specific handler by name\n       based on the path specified in the request.\n\n       Legacy behavior: If the request path uses \"/select\" but no Request\n       Handler has that name, and if handleSelect=\"true\" has been specified in\n       the requestDispatcher, then the Request Handler is dispatched based on\n       the qt parameter.  Handlers without a leading '/' are accessed this way\n       like so: http://host/app/[core/]select?qt=name  If no qt is\n       given, then the requestHandler that declares default=\"true\" will be\n       used or the one named \"standard\".\n\n       If a Request Handler is declared with startup=\"lazy\", then it will\n       not be initialized until the first request that uses it.\n\n    -->\n  <!-- SearchHandler\n\n       http://wiki.apache.org/solr/SearchHandler\n\n       For processing Search Queries, the primary Request Handler\n       provided with Solr is \"SearchHandler\" It delegates to a sequent\n       of SearchComponents (see below) and supports distributed\n       queries across multiple shards\n    -->\n  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n    <!-- default values for query parameters can be specified, these\n         will be overridden by parameters in the request\n      -->\n     <lst name=\"defaults\">\n       <str name=\"echoParams\">explicit</str>\n       <int name=\"rows\">10</int>\n     </lst>\n\n    </requestHandler>\n\n  <!-- A request handler that returns indented JSON by default -->\n  <requestHandler name=\"/query\" class=\"solr.SearchHandler\">\n     <lst name=\"defaults\">\n       <str name=\"echoParams\">explicit</str>\n       <str name=\"wt\">json</str>\n       <str name=\"indent\">true</str>\n       <str name=\"df\">text</str>\n     </lst>\n  </requestHandler>\n\n  <!--\n    The export request handler is used to export full sorted result sets.\n    Do not change these defaults.\n  -->\n  <requestHandler name=\"/export\" class=\"solr.SearchHandler\">\n    <lst name=\"invariants\">\n      <str name=\"rq\">{!xport}</str>\n      <str name=\"wt\">xsort</str>\n      <str name=\"distrib\">false</str>\n    </lst>\n\n    <arr name=\"components\">\n      <str>query</str>\n    </arr>\n  </requestHandler>\n\n\n  <initParams path=\"/update/**,/query,/select,/tvrh,/elevate,/spell\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n    </lst>\n  </initParams>\n\n  <!-- Field Analysis Request Handler\n\n       RequestHandler that provides much the same functionality as\n       analysis.jsp. Provides the ability to specify multiple field\n       types and field names in the same request and outputs\n       index-time and query-time analysis for each of them.\n\n       Request parameters are:\n       analysis.fieldname - field name whose analyzers are to be used\n\n       analysis.fieldtype - field type whose analyzers are to be used\n       analysis.fieldvalue - text for index-time analysis\n       q (or analysis.q) - text for query time analysis\n       analysis.showmatch (true|false) - When set to true and when\n           query analysis is performed, the produced tokens of the\n           field value analysis will be marked as \"matched\" for every\n           token that is produces by the query analysis\n   -->\n  <requestHandler name=\"/analysis/field\" \n                  startup=\"lazy\"\n                  class=\"solr.FieldAnalysisRequestHandler\" />\n\n\n  <!-- Document Analysis Handler\n\n       http://wiki.apache.org/solr/AnalysisRequestHandler\n\n       An analysis handler that provides a breakdown of the analysis\n       process of provided documents. This handler expects a (single)\n       content stream with the following format:\n\n       <docs>\n         <doc>\n           <field name=\"id\">1</field>\n           <field name=\"name\">The Name</field>\n           <field name=\"text\">The Text Value</field>\n         </doc>\n         <doc>...</doc>\n         <doc>...</doc>\n         ...\n       </docs>\n\n    Note: Each document must contain a field which serves as the\n    unique key. This key is used in the returned response to associate\n    an analysis breakdown to the analyzed document.\n\n    Like the FieldAnalysisRequestHandler, this handler also supports\n    query analysis by sending either an \"analysis.query\" or \"q\"\n    request parameter that holds the query text to be analyzed. It\n    also supports the \"analysis.showmatch\" parameter which when set to\n    true, all field tokens that match the query tokens will be marked\n    as a \"match\". \n  -->\n  <requestHandler name=\"/analysis/document\" \n                  class=\"solr.DocumentAnalysisRequestHandler\" \n                  startup=\"lazy\" />\n\n  <!-- Echo the request contents back to the client -->\n  <requestHandler name=\"/debug/dump\" class=\"solr.DumpRequestHandler\" >\n    <lst name=\"defaults\">\n     <str name=\"echoParams\">explicit</str> \n     <str name=\"echoHandler\">true</str>\n    </lst>\n  </requestHandler>\n  \n\n\n  <!-- Search Components\n\n       Search components are registered to SolrCore and used by \n       instances of SearchHandler (which can access them by name)\n       \n       By default, the following components are available:\n       \n       <searchComponent name=\"query\"     class=\"solr.QueryComponent\" />\n       <searchComponent name=\"facet\"     class=\"solr.FacetComponent\" />\n       <searchComponent name=\"mlt\"       class=\"solr.MoreLikeThisComponent\" />\n       <searchComponent name=\"highlight\" class=\"solr.HighlightComponent\" />\n       <searchComponent name=\"stats\"     class=\"solr.StatsComponent\" />\n       <searchComponent name=\"debug\"     class=\"solr.DebugComponent\" />\n       \n     -->\n\n  <!-- Terms Component\n\n       http://wiki.apache.org/solr/TermsComponent\n\n       A component to return terms and document frequency of those\n       terms\n    -->\n  <searchComponent name=\"terms\" class=\"solr.TermsComponent\"/>\n\n  <!-- A request handler for demonstrating the terms component -->\n  <requestHandler name=\"/terms\" class=\"solr.SearchHandler\" startup=\"lazy\">\n     <lst name=\"defaults\">\n      <bool name=\"terms\">true</bool>\n      <bool name=\"distrib\">false</bool>\n    </lst>     \n    <arr name=\"components\">\n      <str>terms</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Request handler for health checks; does a simplistic query -->\n  <requestHandler name=\"/ping\" class=\"solr.PingRequestHandler\">\n      <lst name=\"invariants\">\n          <str name=\"q\">solrpingquery</str>\n      </lst>\n      <lst name=\"defaults\">\n          <str name=\"echoParams\">all</str>\n          <str name=\"df\">id</str>\n      </lst>\n  </requestHandler>\n\n  <!-- Legacy config for the admin interface -->\n  <admin>\n    <defaultQuery>*:*</defaultQuery>\n  </admin>\n\n</config>\n",
                "Filename": "/opt/solr/server/solr/configsets/zenoss_model/conf/solrconfig.xml",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/opt/solr/server/solr/solr.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<!--\n   This is an example of a simple \"solr.xml\" file for configuring one or \n   more Solr Cores, as well as allowing Cores to be added, removed, and \n   reloaded via HTTP requests.\n\n   More information about options available in this configuration file, \n   and Solr Core administration can be found online:\n   http://wiki.apache.org/solr/CoreAdmin\n-->\n\n<solr>\n\n  <solrcloud>\n\n    <str name=\"host\">${host:}</str>\n    <int name=\"hostPort\">${jetty.port:8983}</int>\n    <str name=\"hostContext\">${hostContext:solr}</str>\n\n    <bool name=\"genericCoreNodeNames\">${genericCoreNodeNames:true}</bool>\n\n    <int name=\"zkClientTimeout\">${zkClientTimeout:30000}</int>\n    <int name=\"distribUpdateSoTimeout\">${distribUpdateSoTimeout:600000}</int>\n    <int name=\"distribUpdateConnTimeout\">${distribUpdateConnTimeout:60000}</int>\n\n  </solrcloud>\n\n  <shardHandlerFactory name=\"shardHandlerFactory\" class=\"HttpShardHandlerFactory\">\n    <int name=\"socketTimeout\">${socketTimeout:600000}</int>\n    <int name=\"connTimeout\">${connTimeout:60000}</int>\n  </shardHandlerFactory>\n\n</solr>\n",
                "Filename": "/opt/solr/server/solr/solr.xml",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/opt/solr/zenoss/etc/solr.in.sh": {
                "Content": "# This file is injected by ControlCenter with container-specific parameters\nSOLR_JAVA_MEM=\"-Xmx{{.RAMCommitment}}\"\n\n",
                "Filename": "/opt/solr/zenoss/etc/solr.in.sh",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/opt/solr/zenoss/etc/supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/solr_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:solr]\ncommand=setuser zenoss /opt/solr/zenoss/bin/start-solr -cloud -Dbootstrap_confdir=/opt/solr/server/solr/configsets/zenoss_model/conf -Dcollection.configName=zenoss_model  -Dsolr.jetty.request.header.size=1000000\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:solr_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/solrstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/opt/solr/zenoss/etc/supervisor.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Solr Cloud",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_solr",
                "ApplicationTemplate": "zodb_solr",
                "Name": "solr",
                "PortList": null,
                "PortNumber": 8983,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": [
                    {
                        "Enabled": false,
                        "Name": "solr"
                    }
                ],
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "embedded_zk_answering": {
                "Interval": 10,
                "Script": "{ echo stats; sleep 1; } | nc 127.0.0.1 9983 | grep -q Zookeeper",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zk_connected": {
                "Interval": 10,
                "Script": "curl -A 'Solr zk_connected healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"zkConnected\":true'",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "3i0m2ur3e4ehvsnmgjuhpbmvf",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 1,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "solr"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/solr/logs/solr.log",
                "Type": "solr"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Solr",
        "OomKillDisable": true,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/solr/server/solr/configsets/zenoss_model/conf/solrconfig.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<!-- \n     For more details about configurations options that may appear in\n     this file, see http://wiki.apache.org/solr/SolrConfigXml. \n-->\n<config>\n  <!-- In all configuration below, a prefix of \"solr.\" for class names\n       is an alias that causes solr to search appropriate packages,\n       including org.apache.solr.(search|update|request|core|analysis)\n\n       You may also specify a fully qualified Java classname if you\n       have your own custom plugins.\n    -->\n\n  <!-- Controls what version of Lucene various components of Solr\n       adhere to.  Generally, you want to use the latest version to\n       get all bug fixes and improvements. It is highly recommended\n       that you fully re-index after changing this setting as it can\n       affect both how text is indexed and queried.\n  -->\n  <luceneMatchVersion>6.5.0</luceneMatchVersion>\n\n  <!-- Data Directory\n\n       Used to specify an alternate directory to hold all index data\n       other than the default ./data under the Solr home.  If\n       replication is in use, this should match the replication\n       configuration.\n    -->\n  <dataDir>${solr.data.dir:}</dataDir>\n\n\n  <!-- The DirectoryFactory to use for indexes.\n       \n       solr.StandardDirectoryFactory is filesystem\n       based and tries to pick the best implementation for the current\n       JVM and platform.  solr.NRTCachingDirectoryFactory, the default,\n       wraps solr.StandardDirectoryFactory and caches small files in memory\n       for better NRT performance.\n\n       One can force a particular implementation via solr.MMapDirectoryFactory,\n       solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory.\n\n       solr.RAMDirectoryFactory is memory based, not\n       persistent, and doesn't work with replication.\n    -->\n  <directoryFactory name=\"DirectoryFactory\" \n                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\">\n  </directoryFactory> \n\n  <!-- The CodecFactory for defining the format of the inverted index.\n       The default implementation is SchemaCodecFactory, which is the official Lucene\n       index format, but hooks into the schema to provide per-field customization of\n       the postings lists and per-document values in the fieldType element\n       (postingsFormat/docValuesFormat). Note that most of the alternative implementations\n       are experimental, so if you choose to customize the index format, it's a good\n       idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)\n       before upgrading to a newer version to avoid unnecessary reindexing.\n  -->\n  <codecFactory class=\"solr.SchemaCodecFactory\"/>\n\n  <schemaFactory class=\"ClassicIndexSchemaFactory\"/>\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Index Config - These settings control low-level behavior of indexing\n       Most example settings here show the default value, but are commented\n       out, to more easily see where customizations have been made.\n       \n       Note: This replaces <indexDefaults> and <mainIndex> from older versions\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <indexConfig>\n\n    <!-- LockFactory \n\n         This option specifies which Lucene LockFactory implementation\n         to use.\n      \n         single = SingleInstanceLockFactory - suggested for a\n                  read-only index or when there is no possibility of\n                  another process trying to modify the index.\n         native = NativeFSLockFactory - uses OS native file locking.\n                  Do not use when multiple solr webapps in the same\n                  JVM are attempting to share a single index.\n         simple = SimpleFSLockFactory  - uses a plain file for locking\n\n         Defaults: 'native' is default for Solr3.6 and later, otherwise\n                   'simple' is the default\n\n         More details on the nuances of each LockFactory...\n         http://wiki.apache.org/lucene-java/AvailableLockFactories\n    -->\n    <lockType>${solr.lock.type:native}</lockType>\n\n    <!-- Lucene Infostream\n       \n         To aid in advanced debugging, Lucene provides an \"InfoStream\"\n         of detailed information when indexing.\n\n         Setting the value to true will instruct the underlying Lucene\n         IndexWriter to write its info stream to solr's log. By default,\n         this is enabled here, and controlled through log4j.properties.\n      -->\n     <infoStream>true</infoStream>\n  </indexConfig>\n\n\n  <!-- JMX\n       \n       This example enables JMX if and only if an existing MBeanServer\n       is found, use this if you want to configure JMX through JVM\n       parameters. Remove this to disable exposing Solr configuration\n       and statistics to JMX.\n\n       For more details see http://wiki.apache.org/solr/SolrJmx\n    -->\n  <jmx />\n  <!-- If you want to connect to a particular server, specify the\n       agentId \n    -->\n  <!-- <jmx agentId=\"myAgent\" /> -->\n  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->\n  <!-- <jmx serviceUrl=\"service:jmx:rmi:///jndi/rmi://localhost:9999/solr\"/>\n    -->\n\n  <!-- The default high-performance update handler -->\n  <updateHandler class=\"solr.DirectUpdateHandler2\">\n\n    <!-- Enables a transaction log, used for real-time get, durability, and\n         and solr cloud replica recovery.  The log can grow as big as\n         uncommitted changes to the index, so use of a hard autoCommit\n         is recommended (see below).\n         \"dir\" - the target directory for transaction logs, defaults to the\n                solr data directory.  --> \n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n    </updateLog>\n \n    <!-- AutoCommit\n\n         Perform a hard commit automatically under certain conditions.\n         Instead of enabling autoCommit, consider using \"commitWithin\"\n         when adding documents. \n\n         http://wiki.apache.org/solr/UpdateXmlMessages\n\n         maxDocs - Maximum number of documents to add since the last\n                   commit before automatically triggering a new commit.\n\n         maxTime - Maximum amount of time in ms that is allowed to pass\n                   since a document was added before automatically\n                   triggering a new commit. \n         openSearcher - if false, the commit causes recent index changes\n           to be flushed to stable storage, but does not cause a new\n           searcher to be opened to make those changes visible.\n\n         If the updateLog is enabled, then it's highly recommended to\n         have some sort of hard autoCommit to limit the log size.\n      -->\n     <autoCommit> \n       <maxTime>${solr.autoCommit.maxTime:15000}</maxTime> \n       <openSearcher>false</openSearcher> \n     </autoCommit>\n\n    <!-- softAutoCommit is like autoCommit except it causes a\n         'soft' commit which only ensures that changes are visible\n         but does not ensure that data is synced to disk.  This is\n         faster and more near-realtime friendly than a hard commit.\n      -->\n     <autoSoftCommit> \n       <maxTime>${solr.autoSoftCommit.maxTime:-1}</maxTime> \n     </autoSoftCommit>\n\n  </updateHandler>\n  \n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Query section - these settings control query time things like caches\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <query>\n    <!-- Max Boolean Clauses\n\n         Maximum number of clauses in each BooleanQuery,  an exception\n         is thrown if exceeded.\n\n         ** WARNING **\n         \n         This option actually modifies a global Lucene property that\n         will affect all SolrCores.  If multiple solrconfig.xml files\n         disagree on this property, the value at any given moment will\n         be based on the last SolrCore to be initialized.\n         \n      -->\n    <maxBooleanClauses>20000</maxBooleanClauses>\n\n\n    <!-- Solr Internal Query Caches\n\n         There are two implementations of cache available for Solr,\n         LRUCache, based on a synchronized LinkedHashMap, and\n         FastLRUCache, based on a ConcurrentHashMap.  \n\n         FastLRUCache has faster gets and slower puts in single\n         threaded operation and thus is generally faster than LRUCache\n         when the hit ratio of the cache is high (> 75%), and may be\n         faster under other scenarios on multi-cpu systems.\n    -->\n\n    <!-- Filter Cache\n\n         Cache used by SolrIndexSearcher for filters (DocSets),\n         unordered sets of *all* documents that match a query.  When a\n         new searcher is opened, its caches may be prepopulated or\n         \"autowarmed\" using data from caches in the old searcher.\n         autowarmCount is the number of items to prepopulate.  For\n         LRUCache, the autowarmed items will be the most recently\n         accessed items.\n\n         Parameters:\n           class - the SolrCache implementation LRUCache or\n               (LRUCache or FastLRUCache)\n           size - the maximum number of entries in the cache\n           initialSize - the initial capacity (number of entries) of\n               the cache.  (see java.util.HashMap)\n           autowarmCount - the number of entries to prepopulate from\n               and old cache.  \n      -->\n    <filterCache class=\"solr.FastLRUCache\"\n                 size=\"512\"\n                 initialSize=\"512\"\n                 autowarmCount=\"0\"/>\n\n    <!-- Query Result Cache\n         \n         Caches results of searches - ordered lists of document ids\n         (DocList) based on a query, a sort, and the range of documents requested.  \n      -->\n    <queryResultCache class=\"solr.LRUCache\"\n                     size=\"512\"\n                     initialSize=\"512\"\n                     autowarmCount=\"0\"/>\n   \n    <!-- Document Cache\n\n         Caches Lucene Document objects (the stored fields for each\n         document).  Since Lucene internal document ids are transient,\n         this cache will not be autowarmed.  \n      -->\n    <documentCache class=\"solr.LRUCache\"\n                   size=\"512\"\n                   initialSize=\"512\"\n                   autowarmCount=\"0\"/>\n    \n    <!-- custom cache currently used by block join --> \n    <cache name=\"perSegFilter\"\n      class=\"solr.search.LRUCache\"\n      size=\"10\"\n      initialSize=\"0\"\n      autowarmCount=\"10\"\n      regenerator=\"solr.NoOpRegenerator\" />\n\n    <!-- Lazy Field Loading\n\n         If true, stored fields that are not requested will be loaded\n         lazily.  This can result in a significant speed improvement\n         if the usual case is to not load all stored fields,\n         especially if the skipped fields are large compressed text\n         fields.\n    -->\n    <enableLazyFieldLoading>true</enableLazyFieldLoading>\n\n   <!-- Result Window Size\n\n        An optimization for use with the queryResultCache.  When a search\n        is requested, a superset of the requested number of document ids\n        are collected.  For example, if a search for a particular query\n        requests matching documents 10 through 19, and queryWindowSize is 50,\n        then documents 0 through 49 will be collected and cached.  Any further\n        requests in that range can be satisfied via the cache.  \n     -->\n   <queryResultWindowSize>20</queryResultWindowSize>\n\n   <!-- Maximum number of documents to cache for any entry in the\n        queryResultCache. \n     -->\n   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>\n\n    <!-- Use Cold Searcher\n\n         If a search request comes in and there is no current\n         registered searcher, then immediately register the still\n         warming searcher and use it.  If \"false\" then all requests\n         will block until the first searcher is done warming.\n      -->\n    <useColdSearcher>false</useColdSearcher>\n\n    <!-- Max Warming Searchers\n         \n         Maximum number of searchers that may be warming in the\n         background concurrently.  An error is returned if this limit\n         is exceeded.\n\n         Recommend values of 1-2 for read-only slaves, higher for\n         masters w/o cache warming.\n      -->\n    <maxWarmingSearchers>2</maxWarmingSearchers>\n\n  </query>\n\n\n  <!-- Request Dispatcher\n\n       This section contains instructions for how the SolrDispatchFilter\n       should behave when processing requests for this SolrCore.\n\n       handleSelect is a legacy option that affects the behavior of requests\n       such as /select?qt=XXX\n\n       handleSelect=\"true\" will cause the SolrDispatchFilter to process\n       the request and dispatch the query to a handler specified by the \n       \"qt\" param, assuming \"/select\" isn't already registered.\n\n       handleSelect=\"false\" will cause the SolrDispatchFilter to\n       ignore \"/select\" requests, resulting in a 404 unless a handler\n       is explicitly registered with the name \"/select\"\n\n       handleSelect=\"true\" is not recommended for new users, but is the default\n       for backwards compatibility\n    -->\n  <requestDispatcher handleSelect=\"false\" >\n    <!-- Request Parsing\n\n         These settings indicate how Solr Requests may be parsed, and\n         what restrictions may be placed on the ContentStreams from\n         those requests\n\n         enableRemoteStreaming - enables use of the stream.file\n         and stream.url parameters for specifying remote streams.\n\n         multipartUploadLimitInKB - specifies the max size (in KiB) of\n         Multipart File Uploads that Solr will allow in a Request.\n         \n         formdataUploadLimitInKB - specifies the max size (in KiB) of\n         form data (application/x-www-form-urlencoded) sent via\n         POST. You can use POST to pass request parameters not\n         fitting into the URL.\n         \n         addHttpRequestToContext - if set to true, it will instruct\n         the requestParsers to include the original HttpServletRequest\n         object in the context map of the SolrQueryRequest under the \n         key \"httpRequest\". It will not be used by any of the existing\n         Solr components, but may be useful when developing custom \n         plugins.\n         \n         *** WARNING ***\n         The settings below authorize Solr to fetch remote files, You\n         should make sure your system has some authentication before\n         using enableRemoteStreaming=\"true\"\n\n      --> \n    <requestParsers enableRemoteStreaming=\"true\" \n                    multipartUploadLimitInKB=\"2048000\"\n                    formdataUploadLimitInKB=\"2048\"\n                    addHttpRequestToContext=\"false\"/>\n\n    <!-- HTTP Caching\n\n         Set HTTP caching related parameters (for proxy caches and clients).\n\n         The options below instruct Solr not to output any HTTP Caching\n         related headers\n      -->\n    <httpCaching never304=\"true\" />\n\n  </requestDispatcher>\n\n  <!-- Request Handlers \n\n       http://wiki.apache.org/solr/SolrRequestHandler\n\n       Incoming queries will be dispatched to a specific handler by name\n       based on the path specified in the request.\n\n       Legacy behavior: If the request path uses \"/select\" but no Request\n       Handler has that name, and if handleSelect=\"true\" has been specified in\n       the requestDispatcher, then the Request Handler is dispatched based on\n       the qt parameter.  Handlers without a leading '/' are accessed this way\n       like so: http://host/app/[core/]select?qt=name  If no qt is\n       given, then the requestHandler that declares default=\"true\" will be\n       used or the one named \"standard\".\n\n       If a Request Handler is declared with startup=\"lazy\", then it will\n       not be initialized until the first request that uses it.\n\n    -->\n  <!-- SearchHandler\n\n       http://wiki.apache.org/solr/SearchHandler\n\n       For processing Search Queries, the primary Request Handler\n       provided with Solr is \"SearchHandler\" It delegates to a sequent\n       of SearchComponents (see below) and supports distributed\n       queries across multiple shards\n    -->\n  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n    <!-- default values for query parameters can be specified, these\n         will be overridden by parameters in the request\n      -->\n     <lst name=\"defaults\">\n       <str name=\"echoParams\">explicit</str>\n       <int name=\"rows\">10</int>\n     </lst>\n\n    </requestHandler>\n\n  <!-- A request handler that returns indented JSON by default -->\n  <requestHandler name=\"/query\" class=\"solr.SearchHandler\">\n     <lst name=\"defaults\">\n       <str name=\"echoParams\">explicit</str>\n       <str name=\"wt\">json</str>\n       <str name=\"indent\">true</str>\n       <str name=\"df\">text</str>\n     </lst>\n  </requestHandler>\n\n  <!--\n    The export request handler is used to export full sorted result sets.\n    Do not change these defaults.\n  -->\n  <requestHandler name=\"/export\" class=\"solr.SearchHandler\">\n    <lst name=\"invariants\">\n      <str name=\"rq\">{!xport}</str>\n      <str name=\"wt\">xsort</str>\n      <str name=\"distrib\">false</str>\n    </lst>\n\n    <arr name=\"components\">\n      <str>query</str>\n    </arr>\n  </requestHandler>\n\n\n  <initParams path=\"/update/**,/query,/select,/tvrh,/elevate,/spell\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n    </lst>\n  </initParams>\n\n  <!-- Field Analysis Request Handler\n\n       RequestHandler that provides much the same functionality as\n       analysis.jsp. Provides the ability to specify multiple field\n       types and field names in the same request and outputs\n       index-time and query-time analysis for each of them.\n\n       Request parameters are:\n       analysis.fieldname - field name whose analyzers are to be used\n\n       analysis.fieldtype - field type whose analyzers are to be used\n       analysis.fieldvalue - text for index-time analysis\n       q (or analysis.q) - text for query time analysis\n       analysis.showmatch (true|false) - When set to true and when\n           query analysis is performed, the produced tokens of the\n           field value analysis will be marked as \"matched\" for every\n           token that is produces by the query analysis\n   -->\n  <requestHandler name=\"/analysis/field\" \n                  startup=\"lazy\"\n                  class=\"solr.FieldAnalysisRequestHandler\" />\n\n\n  <!-- Document Analysis Handler\n\n       http://wiki.apache.org/solr/AnalysisRequestHandler\n\n       An analysis handler that provides a breakdown of the analysis\n       process of provided documents. This handler expects a (single)\n       content stream with the following format:\n\n       <docs>\n         <doc>\n           <field name=\"id\">1</field>\n           <field name=\"name\">The Name</field>\n           <field name=\"text\">The Text Value</field>\n         </doc>\n         <doc>...</doc>\n         <doc>...</doc>\n         ...\n       </docs>\n\n    Note: Each document must contain a field which serves as the\n    unique key. This key is used in the returned response to associate\n    an analysis breakdown to the analyzed document.\n\n    Like the FieldAnalysisRequestHandler, this handler also supports\n    query analysis by sending either an \"analysis.query\" or \"q\"\n    request parameter that holds the query text to be analyzed. It\n    also supports the \"analysis.showmatch\" parameter which when set to\n    true, all field tokens that match the query tokens will be marked\n    as a \"match\". \n  -->\n  <requestHandler name=\"/analysis/document\" \n                  class=\"solr.DocumentAnalysisRequestHandler\" \n                  startup=\"lazy\" />\n\n  <!-- Echo the request contents back to the client -->\n  <requestHandler name=\"/debug/dump\" class=\"solr.DumpRequestHandler\" >\n    <lst name=\"defaults\">\n     <str name=\"echoParams\">explicit</str> \n     <str name=\"echoHandler\">true</str>\n    </lst>\n  </requestHandler>\n  \n\n\n  <!-- Search Components\n\n       Search components are registered to SolrCore and used by \n       instances of SearchHandler (which can access them by name)\n       \n       By default, the following components are available:\n       \n       <searchComponent name=\"query\"     class=\"solr.QueryComponent\" />\n       <searchComponent name=\"facet\"     class=\"solr.FacetComponent\" />\n       <searchComponent name=\"mlt\"       class=\"solr.MoreLikeThisComponent\" />\n       <searchComponent name=\"highlight\" class=\"solr.HighlightComponent\" />\n       <searchComponent name=\"stats\"     class=\"solr.StatsComponent\" />\n       <searchComponent name=\"debug\"     class=\"solr.DebugComponent\" />\n       \n     -->\n\n  <!-- Terms Component\n\n       http://wiki.apache.org/solr/TermsComponent\n\n       A component to return terms and document frequency of those\n       terms\n    -->\n  <searchComponent name=\"terms\" class=\"solr.TermsComponent\"/>\n\n  <!-- A request handler for demonstrating the terms component -->\n  <requestHandler name=\"/terms\" class=\"solr.SearchHandler\" startup=\"lazy\">\n     <lst name=\"defaults\">\n      <bool name=\"terms\">true</bool>\n      <bool name=\"distrib\">false</bool>\n    </lst>     \n    <arr name=\"components\">\n      <str>terms</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Request handler for health checks; does a simplistic query -->\n  <requestHandler name=\"/ping\" class=\"solr.PingRequestHandler\">\n      <lst name=\"invariants\">\n          <str name=\"q\">solrpingquery</str>\n      </lst>\n      <lst name=\"defaults\">\n          <str name=\"echoParams\">all</str>\n          <str name=\"df\">id</str>\n      </lst>\n  </requestHandler>\n\n  <!-- Legacy config for the admin interface -->\n  <admin>\n    <defaultQuery>*:*</defaultQuery>\n  </admin>\n\n</config>\n",
                "Filename": "/opt/solr/server/solr/configsets/zenoss_model/conf/solrconfig.xml",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/opt/solr/server/solr/solr.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<!--\n   This is an example of a simple \"solr.xml\" file for configuring one or \n   more Solr Cores, as well as allowing Cores to be added, removed, and \n   reloaded via HTTP requests.\n\n   More information about options available in this configuration file, \n   and Solr Core administration can be found online:\n   http://wiki.apache.org/solr/CoreAdmin\n-->\n\n<solr>\n\n  <solrcloud>\n\n    <str name=\"host\">${host:}</str>\n    <int name=\"hostPort\">${jetty.port:8983}</int>\n    <str name=\"hostContext\">${hostContext:solr}</str>\n\n    <bool name=\"genericCoreNodeNames\">${genericCoreNodeNames:true}</bool>\n\n    <int name=\"zkClientTimeout\">${zkClientTimeout:30000}</int>\n    <int name=\"distribUpdateSoTimeout\">${distribUpdateSoTimeout:600000}</int>\n    <int name=\"distribUpdateConnTimeout\">${distribUpdateConnTimeout:60000}</int>\n\n  </solrcloud>\n\n  <shardHandlerFactory name=\"shardHandlerFactory\" class=\"HttpShardHandlerFactory\">\n    <int name=\"socketTimeout\">${socketTimeout:600000}</int>\n    <int name=\"connTimeout\">${connTimeout:60000}</int>\n  </shardHandlerFactory>\n\n</solr>\n",
                "Filename": "/opt/solr/server/solr/solr.xml",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/opt/solr/zenoss/etc/solr.in.sh": {
                "Content": "# This file is injected by ControlCenter with container-specific parameters\nSOLR_JAVA_MEM=\"-Xmx{{.RAMCommitment}}\"\n\n",
                "Filename": "/opt/solr/zenoss/etc/solr.in.sh",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/opt/solr/zenoss/etc/supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/solr_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:solr]\ncommand=setuser zenoss /opt/solr/zenoss/bin/start-solr -cloud -Dbootstrap_confdir=/opt/solr/server/solr/configsets/zenoss_model/conf -Dcollection.configName=zenoss_model  -Dsolr.jetty.request.header.size=1000000\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:solr_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/solrstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/opt/solr/zenoss/etc/supervisor.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": [],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 1,
        "Startup": "/bin/supervisord -n -c /opt/solr/zenoss/etc/supervisor.conf",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/opt/solr/server/logs",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0750",
                "ResourcePath": "solr-logs-{{.InstanceID}}",
                "Type": ""
            },
            {
                "ContainerPath": "/var/solr/data",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0750",
                "ResourcePath": "solr-{{.InstanceID}}",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/rabbitmq/rabbit_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/rabbitmq_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:rabbitmq]\ncommand=/usr/sbin/rabbitmq-server\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:rabbitmq_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/rabbitstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/rabbitmq/rabbit_supervisor.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/etc/rabbitmq/rabbitmq-env.conf": {
                "Content": "NODENAME=rabbit@rbt{{.InstanceID}}\nNODE_IP_ADDRESS=0.0.0.0\nRABBITMQ_MNESIA_BASE=/var/lib/rabbitmq/mnesia{{if ne .InstanceID 0}}-node{{end}}\n",
                "Filename": "/etc/rabbitmq/rabbitmq-env.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/etc/rabbitmq/rabbitmq.config": {
                "Content": "[\n  {rabbit, [\n    {log_levels, [{connection, error}]},\n    {cluster_nodes, {[{{with $rabbits := .Instances}}{{range (each $rabbits) }}'rabbit@rbt{{.}}'{{if ne (plus 1 .) $rabbits}},{{end}}{{end}}{{end}}], disc}}\n  ]},\n  {kernel, [\n    {inet_dist_listen_max, 44001},\n    {inet_dist_listen_min, 44001}\n  ]}\n].\n",
                "Filename": "/etc/rabbitmq/rabbitmq.config",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "RabbitMQ server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq_admin",
                "ApplicationTemplate": "rabbitmq_admin",
                "Name": "rabbitmq admin",
                "PortList": null,
                "PortNumber": 15672,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": [
                    {
                        "Enabled": false,
                        "Name": "rabbitmq"
                    }
                ],
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq",
                "ApplicationTemplate": "rabbitmq",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 5672,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq_epmd",
                "ApplicationTemplate": "rabbitmq_epmd",
                "Name": "rabbitmq_epmd",
                "PortList": null,
                "PortNumber": 4369,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq_inet_dist",
                "ApplicationTemplate": "rabbitmq_inet_dist",
                "Name": "rabbitmq_inet_dist",
                "PortList": null,
                "PortNumber": 44001,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq_epmd",
                "ApplicationTemplate": "rabbitmq_epmd",
                "Name": "rabbitmq_epmds",
                "PortList": null,
                "PortNumber": 4369,
                "PortTemplate": "{{plus .InstanceID 14369}}",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": "rbt{{.InstanceID}}:4369"
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq_inet_dist",
                "ApplicationTemplate": "rabbitmq_inet_dist",
                "Name": "rabbitmq_inet_dists",
                "PortList": null,
                "PortNumber": 44001,
                "PortTemplate": "{{plus .InstanceID 49001}}",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": "rbt{{.InstanceID}}:44001"
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq",
                "ApplicationTemplate": "rabbitmq",
                "Name": "rabbitmqs",
                "PortList": null,
                "PortNumber": 5672,
                "PortTemplate": "{{plus .InstanceID 35672}}",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": "rbt{{.InstanceID}}:5672"
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "admin": {
                "Interval": 10,
                "Script": "curl -A 'RabbitMQ admin healthcheck' -s -u {{(getContext . \"global.conf.amqpuser\")}}:{{(getContext . \"global.conf.amqppassword\")}} http://localhost:15672/api/vhosts | grep -q /zenoss",
                "Timeout": 0,
                "Tolerance": 0
            },
            "publishing": {
                "Interval": 10,
                "Script": "curl -A 'RabbitMQ publishing healthcheck' -s -u {{(getContext . \"global.conf.amqpuser\")}}:{{(getContext . \"global.conf.amqppassword\")}} http://localhost:15672/api/aliveness-test/%2Fzenoss | grep -q '{\"status\":\"ok\"}'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "user": {
                "Interval": 15,
                "Script": "/opt/zenoss/bin/healthchecks/RabbitMQ/user {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "48jxwqrbcof98mqfcklnfg06v",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "rabbitmq"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/rabbitmq/rabbit@rbt[0-9]*.log",
                "Type": "rabbitmq"
            },
            {
                "Filters": [
                    "rabbitmq"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/rabbitmq/rabbit@rbt[0-9]*-sasl.log",
                "Type": "rabbitmq_sasl"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "RabbitMQ",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/rabbitmq/rabbit_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/rabbitmq_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:rabbitmq]\ncommand=/usr/sbin/rabbitmq-server\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:rabbitmq_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/rabbitstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/rabbitmq/rabbit_supervisor.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/etc/rabbitmq/rabbitmq-env.conf": {
                "Content": "NODENAME=rabbit@rbt{{.InstanceID}}\nNODE_IP_ADDRESS=0.0.0.0\nRABBITMQ_MNESIA_BASE=/var/lib/rabbitmq/mnesia{{if ne .InstanceID 0}}-node{{end}}\n",
                "Filename": "/etc/rabbitmq/rabbitmq-env.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/etc/rabbitmq/rabbitmq.config": {
                "Content": "[\n  {rabbit, [\n    {log_levels, [{connection, error}]},\n    {cluster_nodes, {[{{with $rabbits := .Instances}}{{range (each $rabbits) }}'rabbit@rbt{{.}}'{{if ne (plus 1 .) $rabbits}},{{end}}{{end}}{{end}}], disc}}\n  ]},\n  {kernel, [\n    {inet_dist_listen_max, 44001},\n    {inet_dist_listen_min, 44001}\n  ]}\n].\n",
                "Filename": "/etc/rabbitmq/rabbitmq.config",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "Cluster Leader Start",
                "Script": "[ $(hostname) == 'rbt0' ] || rabbitmqctl -n rabbit@rbt0 status | grep nodedown || sleep 5"
            }
        ],
        "Privileged": true,
        "RAMCommitment": "256M",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "PAUSE_CHECK_TIMEOUT=60 ${ZENHOME:-/opt/zenoss}/bin/quiesce-rabbitmq.sh pause",
            "Resume": "${ZENHOME:-/opt/zenoss}/bin/quiesce-rabbitmq.sh resume"
        },
        "StartLevel": 1,
        "Startup": "/bin/supervisord -n -c /etc/rabbitmq/rabbit_supervisor.conf",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/lib/rabbitmq",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "rabbitmq:rabbitmq",
                "Permission": "0750",
                "ResourcePath": "rabbitmq/{{.InstanceID}}",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 4,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/mariadb/mariadb_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/mariadb-events_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:mariadb]\ncommand=/usr/bin/mysqld_safe\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:zep_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/mysqlstats.py -d zep\nautorestart=true\nautostart=true\nstartsecs=5\n\n[program:mariadb_events_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/storagestats.py mariadb-events\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/mariadb/mariadb_supervisor.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/etc/my.cnf": {
                "Content": "#---------------------------------------------------------------------------\n# Zenoss DataStore Configuration\n#---------------------------------------------------------------------------\n[mysqld]\ninnodb_file_per_table\nskip_external_locking\nskip-host-cache\nskip-name-resolve\nlog_error=/var/log/mysqld.log\n\n#\n# Per the current Zenoss Resource Manager Install Guide,\n# please size innodb_buffer_pool_size according to the following\n# guidelines:\n#\n# Deployment Size       Value of innodb_buffer_pool_size\n# --------------------  --------------------------------\n#    1 to  250 devices   512M\n#  250 to  500 devices   768M\n#  500 to 1000 devices  1024M\n# 1000 to 2000 devices  2048M\n#\ninnodb_buffer_pool_size = {{percentScale .RAMCommitment 0.8}}\n\n# TODO: Log file size should be 25% of of buffer pool size, but this cannot be\n# easily adjusted after image creation time.\ninnodb_log_file_size = 200M\ninnodb_additional_mem_pool_size = 32M\ninnodb_log_buffer_size = 8M\ninnodb_flush_method = O_DIRECT\ninnodb_flush_log_at_trx_commit = 2\n\n# In previous releases of MySQL, this was recommended to be set to 2 times the\n# number of CPUs, however the default and recommended option in 5.5 is to not\n# set a bound on the thread pool size.\ninnodb_thread_concurrency = 0\n\n# Setting this setting to 0 is recommended in virtualized environments. If\n# not running virtualized, a higher value can result in improved database\n# performance; the default value 6 is used if this setting is commented out.\ninnodb_spin_wait_delay = 0\n\n# In large installs, there were a significant number of mutex waits on the \n# adaptive hash index, and this needed to be disabled.\ninnodb_adaptive_hash_index = OFF\n\n# Use the Barracuda file format which enables support for dynamic and \n# compressed row formats.\ninnodb_file_format = Barracuda\n\n# Enable the thread pool - recommended on 5.5.16 and later.\nthread_pool_size = 32\n\n# Disable the query cache - it provides negligible performance improvements\n# and leads to significant thread contention under load.\nquery_cache_size = 0\nquery_cache_type = OFF\n\nmax_allowed_packet = 64M\nwait_timeout = 7200\n\n# Enable dedicated purge thread. (default is 0)\ninnodb_purge_threads = 1\n\n# Introduce operation lag to allow purge operations. (default is 0)\ninnodb_max_purge_lag = 0\n\n# Set buffer pool instances (cpu core count for physical machines, subtract one for VMs)\n# TODO: instances should be at least 1GB, so this should be scaled to buffer_pool_size as well\ninnodb_buffer_pool_instances = {{.CPUCommitment}}\n\n# Increase number of connections + open file handles\nmax_connections = {{ getContext . \"max_connections\" }}\n\n[mysql]\nmax_allowed_packet = 64M\n\n[mysqldump]\nmax_allowed_packet = 64M\n",
                "Filename": "/etc/my.cnf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "Context": {
            "max_connections": "1000"
        },
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "MariaDB events database server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep_mariadb",
                "ApplicationTemplate": "zep_mariadb",
                "Name": "zep_mariadb",
                "PortList": null,
                "PortNumber": 3306,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "mysql --protocol TCP -u{{(getContext . \"global.conf.zep-admin-user\")}} -h{{(getContext . \"global.conf.zep-host\")}} -P{{(getContext . \"global.conf.zep-port\")}} -p{{getContext . \"global.conf.zep-admin-password\"}} -e 'select 1' > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "52vrhb7v2c92d26ah2gwheppi",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/mariadb:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "mariadb"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/mysqld.log",
                "Type": "mariadb"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "mariadb-events",
        "OomKillDisable": true,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/mariadb/mariadb_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/mariadb-events_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:mariadb]\ncommand=/usr/bin/mysqld_safe\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:zep_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/mysqlstats.py -d zep\nautorestart=true\nautostart=true\nstartsecs=5\n\n[program:mariadb_events_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/storagestats.py mariadb-events\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/mariadb/mariadb_supervisor.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/etc/my.cnf": {
                "Content": "#---------------------------------------------------------------------------\n# Zenoss DataStore Configuration\n#---------------------------------------------------------------------------\n[mysqld]\ninnodb_file_per_table\nskip_external_locking\nskip-host-cache\nskip-name-resolve\nlog_error=/var/log/mysqld.log\n\n#\n# Per the current Zenoss Resource Manager Install Guide,\n# please size innodb_buffer_pool_size according to the following\n# guidelines:\n#\n# Deployment Size       Value of innodb_buffer_pool_size\n# --------------------  --------------------------------\n#    1 to  250 devices   512M\n#  250 to  500 devices   768M\n#  500 to 1000 devices  1024M\n# 1000 to 2000 devices  2048M\n#\ninnodb_buffer_pool_size = {{percentScale .RAMCommitment 0.8}}\n\n# TODO: Log file size should be 25% of of buffer pool size, but this cannot be\n# easily adjusted after image creation time.\ninnodb_log_file_size = 200M\ninnodb_additional_mem_pool_size = 32M\ninnodb_log_buffer_size = 8M\ninnodb_flush_method = O_DIRECT\ninnodb_flush_log_at_trx_commit = 2\n\n# In previous releases of MySQL, this was recommended to be set to 2 times the\n# number of CPUs, however the default and recommended option in 5.5 is to not\n# set a bound on the thread pool size.\ninnodb_thread_concurrency = 0\n\n# Setting this setting to 0 is recommended in virtualized environments. If\n# not running virtualized, a higher value can result in improved database\n# performance; the default value 6 is used if this setting is commented out.\ninnodb_spin_wait_delay = 0\n\n# In large installs, there were a significant number of mutex waits on the \n# adaptive hash index, and this needed to be disabled.\ninnodb_adaptive_hash_index = OFF\n\n# Use the Barracuda file format which enables support for dynamic and \n# compressed row formats.\ninnodb_file_format = Barracuda\n\n# Enable the thread pool - recommended on 5.5.16 and later.\nthread_pool_size = 32\n\n# Disable the query cache - it provides negligible performance improvements\n# and leads to significant thread contention under load.\nquery_cache_size = 0\nquery_cache_type = OFF\n\nmax_allowed_packet = 64M\nwait_timeout = 7200\n\n# Enable dedicated purge thread. (default is 0)\ninnodb_purge_threads = 1\n\n# Introduce operation lag to allow purge operations. (default is 0)\ninnodb_max_purge_lag = 0\n\n# Set buffer pool instances (cpu core count for physical machines, subtract one for VMs)\n# TODO: instances should be at least 1GB, so this should be scaled to buffer_pool_size as well\ninnodb_buffer_pool_instances = {{.CPUCommitment}}\n\n# Increase number of connections + open file handles\nmax_connections = {{ getContext . \"max_connections\" }}\n\n[mysql]\nmax_allowed_packet = 64M\n\n[mysqldump]\nmax_allowed_packet = 64M\n",
                "Filename": "/etc/my.cnf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "PIDFile": "exec echo /var/lib/mysql/$(hostname).pid",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "2G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "PAUSE_CHECK_TIMEOUT=60 LOCK_HOLD_DURATION=600 ${ZENHOME:-/opt/zenoss}/bin/quiesce-mariadb.sh pause",
            "Resume": "${ZENHOME:-/opt/zenoss}/bin/quiesce-mariadb.sh resume"
        },
        "StartLevel": 1,
        "Startup": "/bin/supervisord -n -c /etc/mariadb/mariadb_supervisor.conf",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/lib/mysql",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "mysql:mysql",
                "Permission": "0755",
                "ResourcePath": "mariadb-events",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 4,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": {},
        "ConfigFiles": {
            "/etc/mariadb/mariadb_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/mariadb-model_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:mariadb]\ncommand=/usr/bin/mysqld_safe\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:zodb_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/mysqlstats.py -d zodb\nautorestart=true\nautostart=true\nstartsecs=5\n\n[program:mariadb_model_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/storagestats.py mariadb-model\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/mariadb/mariadb_supervisor.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/etc/my.cnf": {
                "Content": "#---------------------------------------------------------------------------\n# Zenoss DataStore Configuration\n#---------------------------------------------------------------------------\n[mysqld]\ninnodb_file_per_table\nskip_external_locking\nskip-host-cache\nskip-name-resolve\nlog_error=/var/log/mysqld.log\n\n# Buffer pool instances should equal number of cores (subtract 1 for VMs) \n# Buffer pool size should be at least 1G per instance per MySQL documentation \ninnodb_buffer_pool_instances = 3 \ninnodb_buffer_pool_size = {{percentScale .RAMCommitment 0.8}} \n\n# TODO: Log file size should be 25% of of buffer pool size, but this cannot be\n# easily adjusted after image creation time.\ninnodb_log_file_size = 200M\ninnodb_additional_mem_pool_size = 32M\ninnodb_log_buffer_size = 8M\ninnodb_flush_method = O_DIRECT\ninnodb_flush_log_at_trx_commit = 2\n\n# In previous releases of MySQL, this was recommended to be set to 2 times the\n# number of CPUs, however the default and recommended option in 5.5 is to not\n# set a bound on the thread pool size.\ninnodb_thread_concurrency = 0\n\n# Setting this setting to 0 is recommended in virtualized environments. If\n# not running virtualized, a higher value can result in improved database\n# performance; the default value 6 is used if this setting is commented out.\ninnodb_spin_wait_delay = 0\n\n# In large installs, there were a significant number of mutex waits on the \n# adaptive hash index, and this needed to be disabled.\ninnodb_adaptive_hash_index = OFF\n\n# Use the Barracuda file format which enables support for dynamic and \n# compressed row formats.\ninnodb_file_format = Barracuda\n\n# Enable the thread pool - recommended on 5.5.16 and later.\nthread_pool_size = 32\n\n# Disable the query cache - it provides negligible performance improvements\n# and leads to significant thread contention under load.\nquery_cache_size = 0\nquery_cache_type = OFF\n\nmax_allowed_packet = 64M\nwait_timeout = 7200\n\n# Enable dedicated purge thread. (default is 0)\ninnodb_purge_threads = 1\n\n# Introduce operation lag to allow purge operations. (default is 0)\ninnodb_max_purge_lag = 0\n\n# Increase number of connections + open file handles\nmax_connections = {{ getContext . \"max_connections\" }}\n\n[mysql]\nmax_allowed_packet = 64M\n\n[mysqldump]\nmax_allowed_packet = 64M\n",
                "Filename": "/etc/my.cnf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "Context": {
            "max_connections": "1000"
        },
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "MariaDB model database server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_mariadb",
                "ApplicationTemplate": "zodb_mariadb",
                "Name": "zodb_mariadb",
                "PortList": null,
                "PortNumber": 3306,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "mysql --protocol TCP -u{{(getContext . \"global.conf.zodb-admin-user\")}} -h{{(getContext . \"global.conf.zodb-host\")}} -P{{(getContext . \"global.conf.zodb-port\")}} -p{{getContext . \"global.conf.zodb-admin-password\"}} -e 'select 1' > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "luvy3it1wzcnwzsdhw924uo0",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/mariadb:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "mariadb"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/mysqld.log",
                "Type": "mariadb"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "mariadb-model",
        "OomKillDisable": true,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/mariadb/mariadb_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/mariadb-model_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:mariadb]\ncommand=/usr/bin/mysqld_safe\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:zodb_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/mysqlstats.py -d zodb\nautorestart=true\nautostart=true\nstartsecs=5\n\n[program:mariadb_model_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/storagestats.py mariadb-model\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/mariadb/mariadb_supervisor.conf",
                "Owner": "root:root",
                "Permissions": "0664"
            },
            "/etc/my.cnf": {
                "Content": "#---------------------------------------------------------------------------\n# Zenoss DataStore Configuration\n#---------------------------------------------------------------------------\n[mysqld]\ninnodb_file_per_table\nskip_external_locking\nskip-host-cache\nskip-name-resolve\nlog_error=/var/log/mysqld.log\n\n# Buffer pool instances should equal number of cores (subtract 1 for VMs) \n# Buffer pool size should be at least 1G per instance per MySQL documentation \ninnodb_buffer_pool_instances = 3 \ninnodb_buffer_pool_size = {{percentScale .RAMCommitment 0.8}} \n\n# TODO: Log file size should be 25% of of buffer pool size, but this cannot be\n# easily adjusted after image creation time.\ninnodb_log_file_size = 200M\ninnodb_additional_mem_pool_size = 32M\ninnodb_log_buffer_size = 8M\ninnodb_flush_method = O_DIRECT\ninnodb_flush_log_at_trx_commit = 2\n\n# In previous releases of MySQL, this was recommended to be set to 2 times the\n# number of CPUs, however the default and recommended option in 5.5 is to not\n# set a bound on the thread pool size.\ninnodb_thread_concurrency = 0\n\n# Setting this setting to 0 is recommended in virtualized environments. If\n# not running virtualized, a higher value can result in improved database\n# performance; the default value 6 is used if this setting is commented out.\ninnodb_spin_wait_delay = 0\n\n# In large installs, there were a significant number of mutex waits on the \n# adaptive hash index, and this needed to be disabled.\ninnodb_adaptive_hash_index = OFF\n\n# Use the Barracuda file format which enables support for dynamic and \n# compressed row formats.\ninnodb_file_format = Barracuda\n\n# Enable the thread pool - recommended on 5.5.16 and later.\nthread_pool_size = 32\n\n# Disable the query cache - it provides negligible performance improvements\n# and leads to significant thread contention under load.\nquery_cache_size = 0\nquery_cache_type = OFF\n\nmax_allowed_packet = 64M\nwait_timeout = 7200\n\n# Enable dedicated purge thread. (default is 0)\ninnodb_purge_threads = 1\n\n# Introduce operation lag to allow purge operations. (default is 0)\ninnodb_max_purge_lag = 0\n\n# Increase number of connections + open file handles\nmax_connections = {{ getContext . \"max_connections\" }}\n\n[mysql]\nmax_allowed_packet = 64M\n\n[mysqldump]\nmax_allowed_packet = 64M\n",
                "Filename": "/etc/my.cnf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "PIDFile": "exec echo /var/lib/mysql/$(hostname).pid",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "4G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "PAUSE_CHECK_TIMEOUT=60 LOCK_HOLD_DURATION=600 ${ZENHOME:-/opt/zenoss}/bin/quiesce-mariadb.sh pause",
            "Resume": "${ZENHOME:-/opt/zenoss}/bin/quiesce-mariadb.sh resume"
        },
        "StartLevel": 1,
        "Startup": "/bin/supervisord -n -c /etc/mariadb/mariadb_supervisor.conf",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/lib/mysql",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "mysql:mysql",
                "Permission": "0755",
                "ResourcePath": "mariadb-model",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/memcached/memcached_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/memcached_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:memcached-session]\ncommand=/opt/zenoss/bin/zenmemcached\nautorestart=true\nautostart=true\nstartsecs=5\n\n[program:memcached-session-metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/memcachedstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=2\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/memcached/memcached_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/etc/sysconfig/memcached": {
                "Content": "PORT=\"11211\"\nUSER=\"nobody\"\nMAXCONN=\"1024\"\nCACHESIZE=\"{{percentScale .RAMCommitment 0.9 | bytesToMB}}\"\n{{ $size := (getContext . \"global.conf.zodb-cache-max-object-size\") }}\nOPTIONS=\"-v -R 4096 -I {{if $size}} {{$size}} {{else}} 1048576 {{end}}\"\n",
                "Filename": "/etc/sysconfig/memcached",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Dedicated memcached instance for zope sessions",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached-session",
                "ApplicationTemplate": "memcached-session",
                "Name": "memcached-session",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "{ echo stats; sleep 1; } | nc 127.0.0.1 11211 | grep -q uptime",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "eehbag2ozkg45ocgwa8z1ixbm",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "memcached-session",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/memcached/memcached_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/memcached_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:memcached-session]\ncommand=/opt/zenoss/bin/zenmemcached\nautorestart=true\nautostart=true\nstartsecs=5\n\n[program:memcached-session-metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/memcachedstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=2\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/memcached/memcached_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/etc/sysconfig/memcached": {
                "Content": "PORT=\"11211\"\nUSER=\"nobody\"\nMAXCONN=\"1024\"\nCACHESIZE=\"{{percentScale .RAMCommitment 0.9 | bytesToMB}}\"\n{{ $size := (getContext . \"global.conf.zodb-cache-max-object-size\") }}\nOPTIONS=\"-v -R 4096 -I {{if $size}} {{$size}} {{else}} 1048576 {{end}}\"\n",
                "Filename": "/etc/sysconfig/memcached",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 1,
        "Startup": "/bin/supervisord -n -c /etc/memcached/memcached_supervisor.conf",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/opentsdb/src/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n  <!--<jmxConfigurator/>-->\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>\n        %date{ISO8601} %-5level [%thread] %logger{0}: %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n\n  <!-- This appender is responsible for the /logs endpoint. It maintains MaxSize\n       lines of the log file in memory. If you don't need the endpoint, disable\n       this appender (by removing the line \"<appender-ref ref=\"CYCLIC\"/>\" in\n       the \"root\" section below) to save some cycles and memory. -->\n  <appender name=\"CYCLIC\" class=\"ch.qos.logback.core.read.CyclicBufferAppender\">\n    <MaxSize>1024</MaxSize>\n  </appender>\n\n  <!-- Appender to write OpenTSDB data to a set of rotating log files -->\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/opentsdb.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <fileNamePattern>/var/log/opentsdb/opentsdb.log.%i</fileNamePattern>\n      <minIndex>1</minIndex>\n      <maxIndex>3</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n\n    <encoder>\n      <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Appender for writing full and completed queries to a log file. To use it, make\n       sure to set the \"level\" to \"INFO\" in QueryLog below. -->\n  <appender name=\"QUERY_LOG\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/queries.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n        <fileNamePattern>/var/log/opentsdb/queries.log.%i</fileNamePattern>\n        <minIndex>1</minIndex>\n        <maxIndex>4</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n        <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n    <encoder>\n        <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Per class logger levels -->\n  <logger name=\"QueryLog\" level=\"OFF\" additivity=\"false\">\n    <appender-ref ref=\"QUERY_LOG\"/>\n  </logger>\n  <logger name=\"org.apache.zookeeper\" level=\"INFO\"/>\n  <!-- ZEN-26681 -->\n  <logger name=\"org.hbase.async\" level=\"WARN\"/>\n  <logger name=\"com.stumbleupon.async\" level=\"WARN\"/>\n\n  <!-- Fallthrough root logger and router -->\n  <root level=\"INFO\">\n    <appender-ref ref=\"STDOUT\"/>\n    <appender-ref ref=\"CYCLIC\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n</configuration>\n",
                "Filename": "/opt/opentsdb/src/logback.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/opentsdb/opentsdb.conf": {
                "Content": "tsd.core.auto_create_metrics = True\ntsd.core.uid.random_metrics  = True\ntsd.storage.hbase.data_table = {{(parent (parent (parent .))).ID}}-tsdb\ntsd.storage.hbase.uid_table  = {{(parent (parent (parent .))).ID}}-tsdb-uid\ntsd.storage.hbase.meta_table = {{(parent (parent (parent .))).ID}}-tsdb-meta\ntsd.storage.hbase.tree_table = {{(parent (parent (parent .))).ID}}-tsdb-tree\ntsd.storage.fix_duplicates   = True\ntsd.http.cachedir            = /tmp/tsd\ntsd.http.staticroot          = /opt/opentsdb/build/staticroot\ntsd.network.port             = 4242\ntsd.storage.hbase.zk_quorum  = {{with $zks := (child (child (parent (parent .)) \"HBase\") \"ZooKeeper\").Instances }}{{ range (each $zks) }}127.0.0.1:{{plus 2181 .}}{{if ne (plus 1 .) $zks}},{{end}}{{end}}{{end}}\ntsd.storage.enable_compaction = {{(getContext . \"tsd.storage.enable_compaction\")}}\ntsd.query.skip_unresolved_tagvs = True\n",
                "Filename": "/opt/zenoss/etc/opentsdb/opentsdb.conf",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Reader for OpenTSDB server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "opentsdb-reader",
                "ApplicationTemplate": "opentsdb-reader",
                "Name": "opentsdb-reader",
                "PortList": null,
                "PortNumber": 4242,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": [
                    {
                        "Enabled": false,
                        "Name": "opentsdb"
                    }
                ],
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-client",
                "ApplicationTemplate": "zookeeper-client",
                "Name": "zookeeper-client",
                "PortList": null,
                "PortNumber": 2181,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-master-.*",
                "ApplicationTemplate": "hbase-master-.*",
                "Name": "hbase-master",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-regionserver",
                "ApplicationTemplate": "hbase-regionserver",
                "Name": "hbase-regionserver",
                "PortList": null,
                "PortNumber": 60200,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": [
            "TSDB_JAVA_MEM_MB=-Xmx{{bytesToMB .RAMCommitment}}m"
        ],
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "wget --timeout=3 --tries=1 -q -O - http://localhost:4242/api/stats",
                "Timeout": 0,
                "Tolerance": 0
            },
            "hbase_answering": {
                "Interval": 10,
                "Script": "curl -A 'HMaster rest_answering healthcheck' -o /dev/null -f -s http://localhost:61000/status/cluster",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "43dfjt1gg2gzc9zc04agc2q7i",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/opentsdb:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "hbasedaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/opentsdb/opentsdb.log",
                "Type": "opentsdb-reader"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "reader",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/opentsdb/src/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n  <!--<jmxConfigurator/>-->\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>\n        %date{ISO8601} %-5level [%thread] %logger{0}: %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n\n  <!-- This appender is responsible for the /logs endpoint. It maintains MaxSize\n       lines of the log file in memory. If you don't need the endpoint, disable\n       this appender (by removing the line \"<appender-ref ref=\"CYCLIC\"/>\" in\n       the \"root\" section below) to save some cycles and memory. -->\n  <appender name=\"CYCLIC\" class=\"ch.qos.logback.core.read.CyclicBufferAppender\">\n    <MaxSize>1024</MaxSize>\n  </appender>\n\n  <!-- Appender to write OpenTSDB data to a set of rotating log files -->\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/opentsdb.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <fileNamePattern>/var/log/opentsdb/opentsdb.log.%i</fileNamePattern>\n      <minIndex>1</minIndex>\n      <maxIndex>3</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n\n    <encoder>\n      <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Appender for writing full and completed queries to a log file. To use it, make\n       sure to set the \"level\" to \"INFO\" in QueryLog below. -->\n  <appender name=\"QUERY_LOG\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/queries.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n        <fileNamePattern>/var/log/opentsdb/queries.log.%i</fileNamePattern>\n        <minIndex>1</minIndex>\n        <maxIndex>4</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n        <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n    <encoder>\n        <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Per class logger levels -->\n  <logger name=\"QueryLog\" level=\"OFF\" additivity=\"false\">\n    <appender-ref ref=\"QUERY_LOG\"/>\n  </logger>\n  <logger name=\"org.apache.zookeeper\" level=\"INFO\"/>\n  <!-- ZEN-26681 -->\n  <logger name=\"org.hbase.async\" level=\"WARN\"/>\n  <logger name=\"com.stumbleupon.async\" level=\"WARN\"/>\n\n  <!-- Fallthrough root logger and router -->\n  <root level=\"INFO\">\n    <appender-ref ref=\"STDOUT\"/>\n    <appender-ref ref=\"CYCLIC\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n</configuration>\n",
                "Filename": "/opt/opentsdb/src/logback.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/opentsdb/opentsdb.conf": {
                "Content": "tsd.core.auto_create_metrics = True\ntsd.core.uid.random_metrics  = True\ntsd.storage.hbase.data_table = {{(parent (parent (parent .))).ID}}-tsdb\ntsd.storage.hbase.uid_table  = {{(parent (parent (parent .))).ID}}-tsdb-uid\ntsd.storage.hbase.meta_table = {{(parent (parent (parent .))).ID}}-tsdb-meta\ntsd.storage.hbase.tree_table = {{(parent (parent (parent .))).ID}}-tsdb-tree\ntsd.storage.fix_duplicates   = True\ntsd.http.cachedir            = /tmp/tsd\ntsd.http.staticroot          = /opt/opentsdb/build/staticroot\ntsd.network.port             = 4242\ntsd.storage.hbase.zk_quorum  = {{with $zks := (child (child (parent (parent .)) \"HBase\") \"ZooKeeper\").Instances }}{{ range (each $zks) }}127.0.0.1:{{plus 2181 .}}{{if ne (plus 1 .) $zks}},{{end}}{{end}}{{end}}\ntsd.storage.enable_compaction = {{(getContext . \"tsd.storage.enable_compaction\")}}\ntsd.query.skip_unresolved_tagvs = True\n",
                "Filename": "/opt/zenoss/etc/opentsdb/opentsdb.conf",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "878onvljonv3toy83mtufgpj5",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "HBase Regionservers up",
                "Script": "{{with $rss := (child (child (parent (parent .)) \"HBase\") \"RegionServer\").Instances }}wget -q -O- http://localhost:61000/status/cluster | grep '{{$rss}} live servers'{{end}}"
            },
            {
                "Name": "HBase tables exist",
                "Script": "wget -q -O- http://localhost:61000 | [[ $(grep -c -E -o \"\\b${CONTROLPLANE_TENANT_ID}-tsdb(-|\\s|$)\") == 4 ]]"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 3,
        "Startup": "/opt/opentsdb/start-opentsdb.sh {{with $zks := (child (child (parent (parent .)) \"HBase\") \"ZooKeeper\").Instances }}{{ range (each $zks) }}localhost:{{plus 2181 .}}{{if ne (plus 1 .) $zks}},{{end}}{{end}}{{end}}",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/hbase/conf/hbase-site.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<!--\n/**\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n-->\n<configuration>\n  <property>\n    <name>hbase.client.connection.impl</name>\n    <value>com.google.cloud.bigtable.hbase1_2.BigtableConnection</value>\n  </property>\n  <property>\n    <name>google.bigtable.instance.id</name>\n    <value>{{(getContext . \"gcp.bigtable.instance\")}}</value>\n  </property>\n  <property>\n    <name>google.bigtable.project.id</name>\n    <value>{{(getContext . \"gcp.bigtable.project\")}}</value>\n  </property>\n</configuration>\n",
                "Filename": "/opt/hbase/conf/hbase-site.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/opentsdb/src/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n  <!--<jmxConfigurator/>-->\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>\n        %date{ISO8601} %-5level [%thread] %logger{0}: %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n\n  <!-- This appender is responsible for the /logs endpoint. It maintains MaxSize\n       lines of the log file in memory. If you don't need the endpoint, disable\n       this appender (by removing the line \"<appender-ref ref=\"CYCLIC\"/>\" in\n       the \"root\" section below) to save some cycles and memory. -->\n  <appender name=\"CYCLIC\" class=\"ch.qos.logback.core.read.CyclicBufferAppender\">\n    <MaxSize>1024</MaxSize>\n  </appender>\n\n  <!-- Appender to write OpenTSDB data to a set of rotating log files -->\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/opentsdb.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <fileNamePattern>/var/log/opentsdb/opentsdb.log.%i</fileNamePattern>\n      <minIndex>1</minIndex>\n      <maxIndex>3</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n\n    <encoder>\n      <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Appender for writing full and completed queries to a log file. To use it, make\n       sure to set the \"level\" to \"INFO\" in QueryLog below. -->\n  <appender name=\"QUERY_LOG\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/queries.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n        <fileNamePattern>/var/log/opentsdb/queries.log.%i</fileNamePattern>\n        <minIndex>1</minIndex>\n        <maxIndex>4</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n        <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n    <encoder>\n        <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Per class logger levels -->\n  <logger name=\"QueryLog\" level=\"OFF\" additivity=\"false\">\n    <appender-ref ref=\"QUERY_LOG\"/>\n  </logger>\n  <logger name=\"org.apache.zookeeper\" level=\"INFO\"/>\n  <!-- ZEN-26681 -->\n  <logger name=\"org.hbase.async\" level=\"WARN\"/>\n  <logger name=\"com.stumbleupon.async\" level=\"WARN\"/>\n\n  <!-- Fallthrough root logger and router -->\n  <root level=\"INFO\">\n    <appender-ref ref=\"STDOUT\"/>\n    <appender-ref ref=\"CYCLIC\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n</configuration>\n",
                "Filename": "/opt/opentsdb/src/logback.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/opentsdb/opentsdb.conf": {
                "Content": "tsd.core.auto_create_metrics = True\ntsd.core.uid.random_metrics  = True\ntsd.storage.hbase.data_table = {{(getContext . \"cse.fqn\")}}-tsdb\ntsd.storage.hbase.uid_table  = {{(getContext . \"cse.fqn\")}}-tsdb-uid\ntsd.storage.hbase.meta_table = {{(getContext . \"cse.fqn\")}}-tsdb-meta\ntsd.storage.hbase.tree_table = {{(getContext . \"cse.fqn\")}}-tsdb-tree\ntsd.storage.fix_duplicates   = True\ntsd.http.cachedir            = /tmp/tsd\ntsd.http.staticroot          = /opt/opentsdb/build/staticroot\ntsd.network.port             = 4242\ntsd.storage.enable_compaction = {{(getContext . \"tsd.storage.enable_compaction\")}}\ntsd.query.skip_unresolved_tagvs = True\n\n\ngoogle.bigtable.project.id = {{(getContext . \"gcp.bigtable.project\")}}\ngoogle.bigtable.instance.id = {{(getContext . \"gcp.bigtable.instance\")}}\ngoogle.bigtable.zone.id = {{(getContext . \"gcp.bigtable.zone\")}}\nhbase.client.connection.impl = com.google.cloud.bigtable.hbase1_2.BigtableConnection\ngoogle.bigtable.auth.service.account.enable = true\n\ntsd.storage.uid.width.tagk   = 4\ntsd.storage.uid.width.tagv   = 4\ntsd.storage.uid.width.metric = 4\n",
                "Filename": "/opt/zenoss/etc/opentsdb/opentsdb.conf",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Reader for OpenTSDB server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "opentsdb-reader",
                "ApplicationTemplate": "opentsdb-reader",
                "Name": "opentsdb-reader",
                "PortList": null,
                "PortNumber": 4242,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": [
                    {
                        "Enabled": false,
                        "Name": "opentsdb-bigtable"
                    }
                ],
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": [
            "TSDB_JAVA_MEM_MB=-Xmx{{bytesToMB .RAMCommitment}}m"
        ],
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "wget --timeout=3 --tries=1 -q -O - http://localhost:4242/api/stats",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "5tum994wku1zv0mpvcr7134t3",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/otsdb-bigtable:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "hbasedaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/opentsdb/opentsdb.log",
                "Type": "opentsdb-reader"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "reader-bigtable",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/hbase/conf/hbase-site.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<!--\n/**\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n-->\n<configuration>\n  <property>\n    <name>hbase.client.connection.impl</name>\n    <value>com.google.cloud.bigtable.hbase1_2.BigtableConnection</value>\n  </property>\n  <property>\n    <name>google.bigtable.instance.id</name>\n    <value>{{(getContext . \"gcp.bigtable.instance\")}}</value>\n  </property>\n  <property>\n    <name>google.bigtable.project.id</name>\n    <value>{{(getContext . \"gcp.bigtable.project\")}}</value>\n  </property>\n</configuration>\n",
                "Filename": "/opt/hbase/conf/hbase-site.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/opentsdb/src/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n  <!--<jmxConfigurator/>-->\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>\n        %date{ISO8601} %-5level [%thread] %logger{0}: %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n\n  <!-- This appender is responsible for the /logs endpoint. It maintains MaxSize\n       lines of the log file in memory. If you don't need the endpoint, disable\n       this appender (by removing the line \"<appender-ref ref=\"CYCLIC\"/>\" in\n       the \"root\" section below) to save some cycles and memory. -->\n  <appender name=\"CYCLIC\" class=\"ch.qos.logback.core.read.CyclicBufferAppender\">\n    <MaxSize>1024</MaxSize>\n  </appender>\n\n  <!-- Appender to write OpenTSDB data to a set of rotating log files -->\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/opentsdb.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <fileNamePattern>/var/log/opentsdb/opentsdb.log.%i</fileNamePattern>\n      <minIndex>1</minIndex>\n      <maxIndex>3</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n\n    <encoder>\n      <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Appender for writing full and completed queries to a log file. To use it, make\n       sure to set the \"level\" to \"INFO\" in QueryLog below. -->\n  <appender name=\"QUERY_LOG\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/queries.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n        <fileNamePattern>/var/log/opentsdb/queries.log.%i</fileNamePattern>\n        <minIndex>1</minIndex>\n        <maxIndex>4</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n        <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n    <encoder>\n        <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Per class logger levels -->\n  <logger name=\"QueryLog\" level=\"OFF\" additivity=\"false\">\n    <appender-ref ref=\"QUERY_LOG\"/>\n  </logger>\n  <logger name=\"org.apache.zookeeper\" level=\"INFO\"/>\n  <!-- ZEN-26681 -->\n  <logger name=\"org.hbase.async\" level=\"WARN\"/>\n  <logger name=\"com.stumbleupon.async\" level=\"WARN\"/>\n\n  <!-- Fallthrough root logger and router -->\n  <root level=\"INFO\">\n    <appender-ref ref=\"STDOUT\"/>\n    <appender-ref ref=\"CYCLIC\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n</configuration>\n",
                "Filename": "/opt/opentsdb/src/logback.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/opentsdb/opentsdb.conf": {
                "Content": "tsd.core.auto_create_metrics = True\ntsd.core.uid.random_metrics  = True\ntsd.storage.hbase.data_table = {{(getContext . \"cse.fqn\")}}-tsdb\ntsd.storage.hbase.uid_table  = {{(getContext . \"cse.fqn\")}}-tsdb-uid\ntsd.storage.hbase.meta_table = {{(getContext . \"cse.fqn\")}}-tsdb-meta\ntsd.storage.hbase.tree_table = {{(getContext . \"cse.fqn\")}}-tsdb-tree\ntsd.storage.fix_duplicates   = True\ntsd.http.cachedir            = /tmp/tsd\ntsd.http.staticroot          = /opt/opentsdb/build/staticroot\ntsd.network.port             = 4242\ntsd.storage.enable_compaction = {{(getContext . \"tsd.storage.enable_compaction\")}}\ntsd.query.skip_unresolved_tagvs = True\n\n\ngoogle.bigtable.project.id = {{(getContext . \"gcp.bigtable.project\")}}\ngoogle.bigtable.instance.id = {{(getContext . \"gcp.bigtable.instance\")}}\ngoogle.bigtable.zone.id = {{(getContext . \"gcp.bigtable.zone\")}}\nhbase.client.connection.impl = com.google.cloud.bigtable.hbase1_2.BigtableConnection\ngoogle.bigtable.auth.service.account.enable = true\n\ntsd.storage.uid.width.tagk   = 4\ntsd.storage.uid.width.tagv   = 4\ntsd.storage.uid.width.metric = 4\n",
                "Filename": "/opt/zenoss/etc/opentsdb/opentsdb.conf",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "878onvljonv3toy83mtufgpj5",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 3,
        "Startup": "/opt/zenoss/start-opentsdb.sh",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/opentsdb/src/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n  <!--<jmxConfigurator/>-->\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>\n        %date{ISO8601} %-5level [%thread] %logger{0}: %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n\n  <!-- This appender is responsible for the /logs endpoint. It maintains MaxSize\n       lines of the log file in memory. If you don't need the endpoint, disable\n       this appender (by removing the line \"<appender-ref ref=\"CYCLIC\"/>\" in\n       the \"root\" section below) to save some cycles and memory. -->\n  <appender name=\"CYCLIC\" class=\"ch.qos.logback.core.read.CyclicBufferAppender\">\n    <MaxSize>1024</MaxSize>\n  </appender>\n\n  <!-- Appender to write OpenTSDB data to a set of rotating log files -->\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/opentsdb.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <fileNamePattern>/var/log/opentsdb/opentsdb.log.%i</fileNamePattern>\n      <minIndex>1</minIndex>\n      <maxIndex>3</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n\n    <encoder>\n      <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Appender for writing full and completed queries to a log file. To use it, make\n       sure to set the \"level\" to \"INFO\" in QueryLog below. -->\n  <appender name=\"QUERY_LOG\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/queries.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n        <fileNamePattern>/var/log/opentsdb/queries.log.%i</fileNamePattern>\n        <minIndex>1</minIndex>\n        <maxIndex>4</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n        <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n    <encoder>\n        <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Per class logger levels -->\n  <logger name=\"QueryLog\" level=\"OFF\" additivity=\"false\">\n    <appender-ref ref=\"QUERY_LOG\"/>\n  </logger>\n  <logger name=\"org.apache.zookeeper\" level=\"INFO\"/>\n  <!-- ZEN-26681 -->\n  <logger name=\"org.hbase.async\" level=\"WARN\"/>\n  <logger name=\"com.stumbleupon.async\" level=\"WARN\"/>\n\n  <!-- Fallthrough root logger and router -->\n  <root level=\"INFO\">\n    <appender-ref ref=\"STDOUT\"/>\n    <appender-ref ref=\"CYCLIC\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n</configuration>\n",
                "Filename": "/opt/opentsdb/src/logback.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/opentsdb/opentsdb.conf": {
                "Content": "tsd.core.auto_create_metrics = True\ntsd.core.uid.random_metrics  = True\ntsd.storage.hbase.data_table = {{(parent (parent (parent .))).ID}}-tsdb\ntsd.storage.hbase.uid_table  = {{(parent (parent (parent .))).ID}}-tsdb-uid\ntsd.storage.hbase.meta_table = {{(parent (parent (parent .))).ID}}-tsdb-meta\ntsd.storage.hbase.tree_table = {{(parent (parent (parent .))).ID}}-tsdb-tree\ntsd.storage.fix_duplicates   = True\ntsd.http.cachedir            = /tmp/tsd\ntsd.http.staticroot          = /opt/opentsdb/build/staticroot\ntsd.network.port             = 4242\ntsd.storage.hbase.zk_quorum  = {{with $zks := (child (child (parent (parent .)) \"HBase\") \"ZooKeeper\").Instances }}{{ range (each $zks) }}127.0.0.1:{{plus 2181 .}}{{if ne (plus 1 .) $zks}},{{end}}{{end}}{{end}}\ntsd.storage.enable_compaction = {{(getContext . \"tsd.storage.enable_compaction\")}}\ntsd.query.skip_unresolved_tagvs = True\n",
                "Filename": "/opt/zenoss/etc/opentsdb/opentsdb.conf",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Writer for OpenTSDB server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "opentsdb-writer",
                "ApplicationTemplate": "opentsdb-writer",
                "Name": "opentsdb-writer",
                "PortList": null,
                "PortNumber": 4242,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-client",
                "ApplicationTemplate": "zookeeper-client",
                "Name": "zookeeper-client",
                "PortList": null,
                "PortNumber": 2181,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-master-.*",
                "ApplicationTemplate": "hbase-master-.*",
                "Name": "hbase-master",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-regionserver",
                "ApplicationTemplate": "hbase-regionserver",
                "Name": "hbase-regionserver",
                "PortList": null,
                "PortNumber": 60200,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": [
            "TSDB_JAVA_MEM_MB=-Xmx{{bytesToMB .RAMCommitment}}m"
        ],
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "wget --timeout=3 --tries=1 -q -O - http://localhost:4242/api/stats",
                "Timeout": 0,
                "Tolerance": 0
            },
            "hbase_answering": {
                "Interval": 10,
                "Script": "curl -A 'HMaster rest_answering healthcheck' -o /dev/null -f -s http://localhost:61000/status/cluster",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "ds62lwneam09y9rh9c3lqb175",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/opentsdb:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "hbasedaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/opentsdb/opentsdb.log",
                "Type": "opentsdb-writer"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "writer",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/opentsdb/src/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n  <!--<jmxConfigurator/>-->\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>\n        %date{ISO8601} %-5level [%thread] %logger{0}: %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n\n  <!-- This appender is responsible for the /logs endpoint. It maintains MaxSize\n       lines of the log file in memory. If you don't need the endpoint, disable\n       this appender (by removing the line \"<appender-ref ref=\"CYCLIC\"/>\" in\n       the \"root\" section below) to save some cycles and memory. -->\n  <appender name=\"CYCLIC\" class=\"ch.qos.logback.core.read.CyclicBufferAppender\">\n    <MaxSize>1024</MaxSize>\n  </appender>\n\n  <!-- Appender to write OpenTSDB data to a set of rotating log files -->\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/opentsdb.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <fileNamePattern>/var/log/opentsdb/opentsdb.log.%i</fileNamePattern>\n      <minIndex>1</minIndex>\n      <maxIndex>3</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n\n    <encoder>\n      <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Appender for writing full and completed queries to a log file. To use it, make\n       sure to set the \"level\" to \"INFO\" in QueryLog below. -->\n  <appender name=\"QUERY_LOG\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/queries.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n        <fileNamePattern>/var/log/opentsdb/queries.log.%i</fileNamePattern>\n        <minIndex>1</minIndex>\n        <maxIndex>4</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n        <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n    <encoder>\n        <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Per class logger levels -->\n  <logger name=\"QueryLog\" level=\"OFF\" additivity=\"false\">\n    <appender-ref ref=\"QUERY_LOG\"/>\n  </logger>\n  <logger name=\"org.apache.zookeeper\" level=\"INFO\"/>\n  <!-- ZEN-26681 -->\n  <logger name=\"org.hbase.async\" level=\"WARN\"/>\n  <logger name=\"com.stumbleupon.async\" level=\"WARN\"/>\n\n  <!-- Fallthrough root logger and router -->\n  <root level=\"INFO\">\n    <appender-ref ref=\"STDOUT\"/>\n    <appender-ref ref=\"CYCLIC\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n</configuration>\n",
                "Filename": "/opt/opentsdb/src/logback.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/opentsdb/opentsdb.conf": {
                "Content": "tsd.core.auto_create_metrics = True\ntsd.core.uid.random_metrics  = True\ntsd.storage.hbase.data_table = {{(parent (parent (parent .))).ID}}-tsdb\ntsd.storage.hbase.uid_table  = {{(parent (parent (parent .))).ID}}-tsdb-uid\ntsd.storage.hbase.meta_table = {{(parent (parent (parent .))).ID}}-tsdb-meta\ntsd.storage.hbase.tree_table = {{(parent (parent (parent .))).ID}}-tsdb-tree\ntsd.storage.fix_duplicates   = True\ntsd.http.cachedir            = /tmp/tsd\ntsd.http.staticroot          = /opt/opentsdb/build/staticroot\ntsd.network.port             = 4242\ntsd.storage.hbase.zk_quorum  = {{with $zks := (child (child (parent (parent .)) \"HBase\") \"ZooKeeper\").Instances }}{{ range (each $zks) }}127.0.0.1:{{plus 2181 .}}{{if ne (plus 1 .) $zks}},{{end}}{{end}}{{end}}\ntsd.storage.enable_compaction = {{(getContext . \"tsd.storage.enable_compaction\")}}\ntsd.query.skip_unresolved_tagvs = True\n",
                "Filename": "/opt/zenoss/etc/opentsdb/opentsdb.conf",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "878onvljonv3toy83mtufgpj5",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "HBase Regionservers up",
                "Script": "{{with $rss := (child (child (parent (parent .)) \"HBase\") \"RegionServer\").Instances }}wget -q -O- http://localhost:61000/status/cluster | grep '{{$rss}} live servers'{{end}}"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 3,
        "Startup": "/bin/sh -c \"{{ if eq .InstanceID 0 }} export CREATE_TABLES=1;{{ end }} /opt/opentsdb/start-opentsdb.sh {{with $zks := (child (child (parent (parent .)) \"HBase\") \"ZooKeeper\").Instances }}{{ range (each $zks) }}localhost:{{plus 2181 .}}{{if ne (plus 1 .) $zks}},{{end}}{{end}}{{end}}\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/hbase/conf/hbase-site.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<!--\n/**\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n-->\n<configuration>\n  <property>\n    <name>hbase.client.connection.impl</name>\n    <value>com.google.cloud.bigtable.hbase1_2.BigtableConnection</value>\n  </property>\n  <property>\n    <name>google.bigtable.instance.id</name>\n    <value>{{(getContext . \"gcp.bigtable.instance\")}}</value>\n  </property>\n  <property>\n    <name>google.bigtable.project.id</name>\n    <value>{{(getContext . \"gcp.bigtable.project\")}}</value>\n  </property>\n</configuration>\n",
                "Filename": "/opt/hbase/conf/hbase-site.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/opentsdb/src/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n  <!--<jmxConfigurator/>-->\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>\n        %date{ISO8601} %-5level [%thread] %logger{0}: %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n\n  <!-- This appender is responsible for the /logs endpoint. It maintains MaxSize\n       lines of the log file in memory. If you don't need the endpoint, disable\n       this appender (by removing the line \"<appender-ref ref=\"CYCLIC\"/>\" in\n       the \"root\" section below) to save some cycles and memory. -->\n  <appender name=\"CYCLIC\" class=\"ch.qos.logback.core.read.CyclicBufferAppender\">\n    <MaxSize>1024</MaxSize>\n  </appender>\n\n  <!-- Appender to write OpenTSDB data to a set of rotating log files -->\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/opentsdb.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <fileNamePattern>/var/log/opentsdb/opentsdb.log.%i</fileNamePattern>\n      <minIndex>1</minIndex>\n      <maxIndex>3</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n\n    <encoder>\n      <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Appender for writing full and completed queries to a log file. To use it, make\n       sure to set the \"level\" to \"INFO\" in QueryLog below. -->\n  <appender name=\"QUERY_LOG\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/queries.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n        <fileNamePattern>/var/log/opentsdb/queries.log.%i</fileNamePattern>\n        <minIndex>1</minIndex>\n        <maxIndex>4</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n        <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n    <encoder>\n        <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Per class logger levels -->\n  <logger name=\"QueryLog\" level=\"OFF\" additivity=\"false\">\n    <appender-ref ref=\"QUERY_LOG\"/>\n  </logger>\n  <logger name=\"org.apache.zookeeper\" level=\"INFO\"/>\n  <!-- ZEN-26681 -->\n  <logger name=\"org.hbase.async\" level=\"WARN\"/>\n  <logger name=\"com.stumbleupon.async\" level=\"WARN\"/>\n\n  <!-- Fallthrough root logger and router -->\n  <root level=\"INFO\">\n    <appender-ref ref=\"STDOUT\"/>\n    <appender-ref ref=\"CYCLIC\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n</configuration>\n",
                "Filename": "/opt/opentsdb/src/logback.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/opentsdb/opentsdb.conf": {
                "Content": "tsd.core.auto_create_metrics = True\ntsd.core.uid.random_metrics  = True\ntsd.storage.hbase.data_table = {{(getContext . \"cse.fqn\")}}-tsdb\ntsd.storage.hbase.uid_table  = {{(getContext . \"cse.fqn\")}}-tsdb-uid\ntsd.storage.hbase.meta_table = {{(getContext . \"cse.fqn\")}}-tsdb-meta\ntsd.storage.hbase.tree_table = {{(getContext . \"cse.fqn\")}}-tsdb-tree\ntsd.storage.fix_duplicates   = True\ntsd.http.cachedir            = /tmp/tsd\ntsd.http.staticroot          = /opt/opentsdb/build/staticroot\ntsd.network.port             = 4242\ntsd.storage.enable_compaction = {{(getContext . \"tsd.storage.enable_compaction\")}}\ntsd.query.skip_unresolved_tagvs = True\n\n\ngoogle.bigtable.project.id = {{(getContext . \"gcp.bigtable.project\")}}\ngoogle.bigtable.instance.id = {{(getContext . \"gcp.bigtable.instance\")}}\ngoogle.bigtable.zone.id = {{(getContext . \"gcp.bigtable.zone\")}}\nhbase.client.connection.impl = com.google.cloud.bigtable.hbase1_2.BigtableConnection\ngoogle.bigtable.auth.service.account.enable = true\n\ntsd.storage.uid.width.tagk   = 4\ntsd.storage.uid.width.tagv   = 4\ntsd.storage.uid.width.metric = 4\n\n",
                "Filename": "/opt/zenoss/etc/opentsdb/opentsdb.conf",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Writer for OpenTSDB server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "opentsdb-writer",
                "ApplicationTemplate": "opentsdb-writer",
                "Name": "opentsdb-writer",
                "PortList": null,
                "PortNumber": 4242,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": [
            "TSDB_JAVA_MEM_MB=-Xmx{{bytesToMB .RAMCommitment}}m"
        ],
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "wget --timeout=3 --tries=1 -q -O - http://localhost:4242/api/stats",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "7zhwh4oqmszw52vdx15ookdcr",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/otsdb-bigtable:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "hbasedaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/opentsdb/opentsdb.log",
                "Type": "opentsdb-writer"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "writer-bigtable",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/hbase/conf/hbase-site.xml": {
                "Content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<!--\n/**\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n-->\n<configuration>\n  <property>\n    <name>hbase.client.connection.impl</name>\n    <value>com.google.cloud.bigtable.hbase1_2.BigtableConnection</value>\n  </property>\n  <property>\n    <name>google.bigtable.instance.id</name>\n    <value>{{(getContext . \"gcp.bigtable.instance\")}}</value>\n  </property>\n  <property>\n    <name>google.bigtable.project.id</name>\n    <value>{{(getContext . \"gcp.bigtable.project\")}}</value>\n  </property>\n</configuration>\n",
                "Filename": "/opt/hbase/conf/hbase-site.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/opentsdb/src/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n  <!--<jmxConfigurator/>-->\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>\n        %date{ISO8601} %-5level [%thread] %logger{0}: %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n\n  <!-- This appender is responsible for the /logs endpoint. It maintains MaxSize\n       lines of the log file in memory. If you don't need the endpoint, disable\n       this appender (by removing the line \"<appender-ref ref=\"CYCLIC\"/>\" in\n       the \"root\" section below) to save some cycles and memory. -->\n  <appender name=\"CYCLIC\" class=\"ch.qos.logback.core.read.CyclicBufferAppender\">\n    <MaxSize>1024</MaxSize>\n  </appender>\n\n  <!-- Appender to write OpenTSDB data to a set of rotating log files -->\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/opentsdb.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n      <fileNamePattern>/var/log/opentsdb/opentsdb.log.%i</fileNamePattern>\n      <minIndex>1</minIndex>\n      <maxIndex>3</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n      <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n\n    <encoder>\n      <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Appender for writing full and completed queries to a log file. To use it, make\n       sure to set the \"level\" to \"INFO\" in QueryLog below. -->\n  <appender name=\"QUERY_LOG\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>/var/log/opentsdb/queries.log</file>\n    <append>true</append>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n        <fileNamePattern>/var/log/opentsdb/queries.log.%i</fileNamePattern>\n        <minIndex>1</minIndex>\n        <maxIndex>4</maxIndex>\n    </rollingPolicy>\n\n    <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n        <maxFileSize>128MB</maxFileSize>\n    </triggeringPolicy>\n    <encoder>\n        <pattern>%date{ISO8601} %-5level [%thread] %logger{0}: %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <!-- Per class logger levels -->\n  <logger name=\"QueryLog\" level=\"OFF\" additivity=\"false\">\n    <appender-ref ref=\"QUERY_LOG\"/>\n  </logger>\n  <logger name=\"org.apache.zookeeper\" level=\"INFO\"/>\n  <!-- ZEN-26681 -->\n  <logger name=\"org.hbase.async\" level=\"WARN\"/>\n  <logger name=\"com.stumbleupon.async\" level=\"WARN\"/>\n\n  <!-- Fallthrough root logger and router -->\n  <root level=\"INFO\">\n    <appender-ref ref=\"STDOUT\"/>\n    <appender-ref ref=\"CYCLIC\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n</configuration>\n",
                "Filename": "/opt/opentsdb/src/logback.xml",
                "Owner": "root:root",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/opentsdb/opentsdb.conf": {
                "Content": "tsd.core.auto_create_metrics = True\ntsd.core.uid.random_metrics  = True\ntsd.storage.hbase.data_table = {{(getContext . \"cse.fqn\")}}-tsdb\ntsd.storage.hbase.uid_table  = {{(getContext . \"cse.fqn\")}}-tsdb-uid\ntsd.storage.hbase.meta_table = {{(getContext . \"cse.fqn\")}}-tsdb-meta\ntsd.storage.hbase.tree_table = {{(getContext . \"cse.fqn\")}}-tsdb-tree\ntsd.storage.fix_duplicates   = True\ntsd.http.cachedir            = /tmp/tsd\ntsd.http.staticroot          = /opt/opentsdb/build/staticroot\ntsd.network.port             = 4242\ntsd.storage.enable_compaction = {{(getContext . \"tsd.storage.enable_compaction\")}}\ntsd.query.skip_unresolved_tagvs = True\n\n\ngoogle.bigtable.project.id = {{(getContext . \"gcp.bigtable.project\")}}\ngoogle.bigtable.instance.id = {{(getContext . \"gcp.bigtable.instance\")}}\ngoogle.bigtable.zone.id = {{(getContext . \"gcp.bigtable.zone\")}}\nhbase.client.connection.impl = com.google.cloud.bigtable.hbase1_2.BigtableConnection\ngoogle.bigtable.auth.service.account.enable = true\n\ntsd.storage.uid.width.tagk   = 4\ntsd.storage.uid.width.tagv   = 4\ntsd.storage.uid.width.metric = 4\n\n",
                "Filename": "/opt/zenoss/etc/opentsdb/opentsdb.conf",
                "Owner": "root:root",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "878onvljonv3toy83mtufgpj5",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 3,
        "Startup": "/opt/zenoss/start-opentsdb.sh",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "OpenTSDB server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "878onvljonv3toy83mtufgpj5",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "opentsdb",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 3,
        "Startup": "",
        "Tags": [
            "opentsdb"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Zing API Proxy Service",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-api-proxy",
                "ApplicationTemplate": "zing-api-proxy",
                "Name": "zing-api-proxy",
                "PortList": [
                    {
                        "Enabled": false,
                        "PortAddr": ":9443",
                        "Protocol": "https",
                        "UseTLS": true
                    }
                ],
                "PortNumber": 9090,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": [],
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": [
            "KEYPROXY_JSON_SERVER=http://{{(getContext . \"cse.api-key-server-ip\")}}:9090/accessToken"
        ],
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "curl -A 'zing-api-proxy_answering Healthcheck' -f -s http://localhost:9090/zport/ruok > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "api_key_server_answering": {
                "Interval": 5,
                "Script": "curl -A 'api-key-server_answering Healthcheck' -f -s http://{{(getContext . \"cse.api-key-server-ip\")}}:9090/ > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "ab9nja9wi1bfojqosanu2zoyv",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/api-key-proxy:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "glog"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/api-key-proxy.log",
                "Type": "api-key-proxy"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zing-api-proxy",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"cd /opt/zenoss && /bin/supervisord -n -c etc/api-key-proxy/supervisord.conf\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/hbase-env.sh": {
                "Content": "export HBASE_MANAGES_ZK=false\nexport HBASE_HEAPSIZE={{percentScale (bytesToMB .RAMCommitment) 0.9}}\n",
                "Filename": "/etc/hbase-env.sh",
                "Owner": "hbase:hbase",
                "Permissions": "0775"
            },
            "/etc/hbase-site.xml": {
                "Content": "<configuration>\n  <property>\n    <name>hbase.rootdir</name>\n    <value>file:///var/hbase</value>\n  </property>\n  <property>\n    <name>hbase.cluster.distributed</name>\n    <value>true</value>\n  </property>\n  <property>\n      <name>hbase.zookeeper.quorum</name>\n      <value>{{ with $zks := (child (parent .) \"ZooKeeper\").Instances }}{{range (each $zks) }}zk{{plus 1 .}}{{if ne (plus 1 .) $zks}},{{end}}{{end}}{{end}}</value>\n  </property>\n</configuration>",
                "Filename": "/etc/hbase-site.xml",
                "Owner": "hbase:hbase",
                "Permissions": "0664"
            },
            "/opt/hbase/conf/hadoop-metrics2-hbase.properties": {
                "Content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# syntax: [prefix].[source|sink].[instance].[options]\n# See javadoc of package-info.java for org.apache.hadoop.metrics2 for details\n\n# sampling period\n*.period=15\n\n# Below are some examples of sinks that could be used\n# to monitor different hbase daemons.\n\nhbase.sink.file-all.class=com.zenoss.hadoop.metrics.ControlCenterSink\nhbase.sink.file-all.includedMetrics=numCallsInGeneralQueue,numCallsIn\\\\w*Queue,\\\\w*QueueLength,\\\\w*Count,\\\\w+RequestCount,storeFile\\\\w*\nhbase.sink.file-all.metricsPrefix=zenoss.hbase.\n# hbase.sink.file0.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file0.context=hmaster\n# hbase.sink.file0.filename=master.metrics\n\n# hbase.sink.file1.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file1.context=thrift-one\n# hbase.sink.file1.filename=thrift-one.metrics\n\n# hbase.sink.file2.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file2.context=thrift-two\n# hbase.sink.file2.filename=thrift-one.metrics\n\n# hbase.sink.file3.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file3.context=rest\n# hbase.sink.file3.filename=rest.metrics\n",
                "Filename": "/opt/hbase/conf/hadoop-metrics2-hbase.properties",
                "Owner": "",
                "Permissions": ""
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Region Server for HBase",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-master-.*",
                "ApplicationTemplate": "hbase-master-.*",
                "Name": "hbase-master",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-regionserver",
                "ApplicationTemplate": "hbase-regionserver",
                "Name": "hbase-regionserver",
                "PortList": null,
                "PortNumber": 60200,
                "PortTemplate": "{{ plus 60200 .InstanceID }}",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-regionserver",
                "ApplicationTemplate": "hbase-regionserver",
                "Name": "hbase-regionservers",
                "PortList": null,
                "PortNumber": 60200,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-regionserverinfo",
                "ApplicationTemplate": "hbase-regionserverinfo",
                "Name": "hbase-regionserverinfo",
                "PortList": null,
                "PortNumber": 60300,
                "PortTemplate": "{{ plus 60300 .InstanceID }}",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-client",
                "ApplicationTemplate": "zookeeper-client",
                "Name": "zookeeper-client",
                "PortList": null,
                "PortNumber": 2181,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": "zk{{ plus 1 .InstanceID }}:2181"
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 10,
                "Script": "echo | nc localhost {{ plus 60200 .InstanceID }}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "cluster_member": {
                "Interval": 10,
                "Script": "curl -A 'RegionServer cluster_member healthcheck' http://localhost:61000/status/cluster | grep -q 'localhost:{{ plus 60200 .InstanceID }}'",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "PREFER_SEPARATE",
        "ID": "2czabko5hyjlc65j2p24j2yew",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/hbase:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 3
        },
        "Instances": 3,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "hbasedaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/hbase/logs/hbase-regionserver.log",
                "Type": "hbase"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "numCallsInGeneralQueue",
                            "legend": "Current depth of the User Requests",
                            "metric": "numCallsInGeneralQueue",
                            "metricSource": "RegionServer",
                            "name": "Current depth of the User Requests",
                            "rate": false,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "numCallsInPriorityQueue",
                            "legend": "Current depth of the Internal Housekeeping Requests queue",
                            "metric": "numCallsInPriorityQueue",
                            "metricSource": "RegionServer",
                            "name": "Current depth of the Internal Housekeeping Requests queue",
                            "rate": false,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "flushQueueLength",
                            "legend": "Current depth of the memstore flush queue",
                            "metric": "flushQueueLength",
                            "metricSource": "RegionServer",
                            "name": "Current depth of the memstore flush queue",
                            "rate": false,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "compactionQueueLength",
                            "legend": "Current depth of the compaction request queue",
                            "metric": "compactionQueueLength",
                            "metricSource": "RegionServer",
                            "name": "Current depth of the compaction request queue",
                            "rate": false,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Queue Length",
                    "footer": false,
                    "format": "",
                    "id": "QueueLength",
                    "maxy": null,
                    "miny": 0,
                    "name": "Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": ""
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2czabko5hyjlc65j2p24j2yew"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Blocks of items"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "slowAppendCount",
                            "legend": "The number of slow append operations",
                            "metric": "slowAppendCount",
                            "metricSource": "RegionServer",
                            "name": "The number of slow append operations",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "slowDeleteCount",
                            "legend": "The number of slow delete operations",
                            "metric": "slowDeleteCount",
                            "metricSource": "RegionServer",
                            "name": "The number of slow delete operations",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "slowGetCount",
                            "legend": "The number of slow get operations",
                            "metric": "slowGetCount",
                            "metricSource": "RegionServer",
                            "name": "The number of slow get operations",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "slowIncrementCount",
                            "legend": "The number of slow increment operations",
                            "metric": "slowIncrementCount",
                            "metricSource": "RegionServer",
                            "name": "The number of slow increment operations",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Slow Operations",
                    "footer": false,
                    "format": "",
                    "id": "slowOps",
                    "maxy": null,
                    "miny": 0,
                    "name": "Slow Operations",
                    "range": {
                        "end": "0s-ago",
                        "start": ""
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2czabko5hyjlc65j2p24j2yew"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Operations"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": true,
                            "format": "",
                            "id": "totalRequestCount",
                            "legend": "Total request rate",
                            "metric": "totalRequestCount",
                            "metricSource": "RegionServer",
                            "name": "Total request rate",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": true,
                            "format": "",
                            "id": "readRequestCount",
                            "legend": "Read request rate",
                            "metric": "readRequestCount",
                            "metricSource": "RegionServer",
                            "name": "Read request rate",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": true,
                            "format": "",
                            "id": "writeRequestCount",
                            "legend": "Write request rate",
                            "metric": "writeRequestCount",
                            "metricSource": "RegionServer",
                            "name": "Write request rate",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Operations",
                    "footer": false,
                    "format": "",
                    "id": "opcounts",
                    "maxy": null,
                    "miny": 0,
                    "name": "Operations",
                    "range": {
                        "end": "0s-ago",
                        "start": ""
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2czabko5hyjlc65j2p24j2yew"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Operations"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "RegionServer internal metrics",
                    "ID": "RegionServer",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "numCallsInGeneralQueue",
                            "Name": "Current depth of the User Requests",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "numCallsInPriorityQueue",
                            "Name": "Current depth of the Internal Housekeeping Requests queue",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "flushQueueLength",
                            "Name": "Current depth of the memstore flush queue",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "compactionQueueLength",
                            "Name": "Current depth of the compaction request queue",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "slowAppendCount",
                            "Name": "The number of slow append operations",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "slowDeleteCount",
                            "Name": "The number of slow delete operations",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "slowGetCount",
                            "Name": "The number of slow get operations",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "slowIncrementCount",
                            "Name": "The number of slow increment operations",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "totalRequestCount",
                            "Name": "Total request rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "readRequestCount",
                            "Name": "Read request rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "writeRequestCount",
                            "Name": "Write request rate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "RegionServer internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"numCallsInGeneralQueue\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"numCallsInPriorityQueue\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"flushQueueLength\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"compactionQueueLength\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"slowAppendCount\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"slowDeleteCount\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"slowGetCount\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"slowIncrementCount\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"totalRequestCount\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"readRequestCount\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}},{\"metric\":\"writeRequestCount\",\"tags\":{\"controlplane_service_id\":[\"2czabko5hyjlc65j2p24j2yew\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "RegionServer",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/hbase-env.sh": {
                "Content": "export HBASE_MANAGES_ZK=false\nexport HBASE_HEAPSIZE={{percentScale (bytesToMB .RAMCommitment) 0.9}}\n",
                "Filename": "/etc/hbase-env.sh",
                "Owner": "hbase:hbase",
                "Permissions": "0775"
            },
            "/etc/hbase-site.xml": {
                "Content": "<configuration>\n  <property>\n    <name>hbase.rootdir</name>\n    <value>file:///var/hbase</value>\n  </property>\n  <property>\n    <name>hbase.cluster.distributed</name>\n    <value>true</value>\n  </property>\n  <property>\n      <name>hbase.zookeeper.quorum</name>\n      <value>{{ with $zks := (child (parent .) \"ZooKeeper\").Instances }}{{range (each $zks) }}zk{{plus 1 .}}{{if ne (plus 1 .) $zks}},{{end}}{{end}}{{end}}</value>\n  </property>\n</configuration>",
                "Filename": "/etc/hbase-site.xml",
                "Owner": "hbase:hbase",
                "Permissions": "0664"
            },
            "/opt/hbase/conf/hadoop-metrics2-hbase.properties": {
                "Content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# syntax: [prefix].[source|sink].[instance].[options]\n# See javadoc of package-info.java for org.apache.hadoop.metrics2 for details\n\n# sampling period\n*.period=15\n\n# Below are some examples of sinks that could be used\n# to monitor different hbase daemons.\n\nhbase.sink.file-all.class=com.zenoss.hadoop.metrics.ControlCenterSink\nhbase.sink.file-all.includedMetrics=numCallsInGeneralQueue,numCallsIn\\\\w*Queue,\\\\w*QueueLength,\\\\w*Count,\\\\w+RequestCount,storeFile\\\\w*\nhbase.sink.file-all.metricsPrefix=zenoss.hbase.\n# hbase.sink.file0.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file0.context=hmaster\n# hbase.sink.file0.filename=master.metrics\n\n# hbase.sink.file1.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file1.context=thrift-one\n# hbase.sink.file1.filename=thrift-one.metrics\n\n# hbase.sink.file2.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file2.context=thrift-two\n# hbase.sink.file2.filename=thrift-one.metrics\n\n# hbase.sink.file3.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file3.context=rest\n# hbase.sink.file3.filename=rest.metrics\n",
                "Filename": "/opt/hbase/conf/hadoop-metrics2-hbase.properties",
                "Owner": "",
                "Permissions": ""
            }
        },
        "PIDFile": "",
        "ParentServiceID": "57pbs7azvpowkahajgadex0ow",
        "PoolID": "default",
        "Prereqs": [],
        "Privileged": true,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 2,
        "Startup": "/usr/bin/run-hbase-regionserver.sh /etc/hbase-site.xml $CONTROLPLANE_INSTANCE_ID",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/hbase",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "hbase:hbase",
                "Permission": "0755",
                "ResourcePath": "hbase-master",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/hbase-env.sh": {
                "Content": "export HBASE_MANAGES_ZK=false\nexport HBASE_HEAPSIZE={{percentScale (bytesToMB .RAMCommitment) 0.9}}\n",
                "Filename": "/etc/hbase-env.sh",
                "Owner": "hbase:hbase",
                "Permissions": "0775"
            },
            "/etc/hbase-site.xml": {
                "Content": "<configuration>\n  <property>\n    <name>hbase.rootdir</name>\n    <value>file:///var/hbase</value>\n  </property>\n  <property>\n    <name>hbase.cluster.distributed</name>\n    <value>true</value>\n  </property>\n  <property>\n      <name>hbase.zookeeper.quorum</name>\n      <value>zk1,zk2,zk3</value>\n  </property>\n  <property>\n      <name>hbase.master.wait.on.regionservers.mintostart</name>\n      <value>2</value>\n  </property>\n</configuration>",
                "Filename": "/etc/hbase-site.xml",
                "Owner": "hbase:hbase",
                "Permissions": "0664"
            },
            "/opt/hbase/conf/hadoop-metrics2-hbase.properties": {
                "Content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# syntax: [prefix].[source|sink].[instance].[options]\n# See javadoc of package-info.java for org.apache.hadoop.metrics2 for details\n\n# sampling period\n*.period=15\n\n# Below are some examples of sinks that could be used\n# to monitor different hbase daemons.\n\nhbase.sink.file-all.class=com.zenoss.hadoop.metrics.ControlCenterSink\nhbase.sink.file-all.includedMetrics=Log\\\\w*,\\\\w*RegionServers,hbase\\.regionserver\\.\\\\w*,storeFile\\\\w*\nhbase.sink.file-all.metricsPrefix=zenoss.hbase.\n# hbase.sink.file0.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file0.context=hmaster\n# hbase.sink.file0.filename=master.metrics\n\n# hbase.sink.file1.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file1.context=thrift-one\n# hbase.sink.file1.filename=thrift-one.metrics\n\n# hbase.sink.file2.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file2.context=thrift-two\n# hbase.sink.file2.filename=thrift-one.metrics\n\n# hbase.sink.file3.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file3.context=rest\n# hbase.sink.file3.filename=rest.metrics\n",
                "Filename": "/opt/hbase/conf/hadoop-metrics2-hbase.properties",
                "Owner": "",
                "Permissions": ""
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Master Server for HBase",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-master-1",
                "ApplicationTemplate": "hbase-master-1",
                "Name": "hbase-master-1",
                "PortList": null,
                "PortNumber": 60000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-master-rest",
                "ApplicationTemplate": "hbase-master-rest",
                "Name": "hbase-master-rest",
                "PortList": null,
                "PortNumber": 61000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-masterinfo-1",
                "ApplicationTemplate": "hbase-masterinfo-1",
                "Name": "hbase-masterinfo-1",
                "PortList": null,
                "PortNumber": 60010,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": [
                    {
                        "Enabled": false,
                        "Name": "hbase"
                    }
                ],
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "hbase-regionserver",
                "ApplicationTemplate": "hbase-regionserver",
                "Name": "hbase-regionserver",
                "PortList": null,
                "PortNumber": 60200,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-client",
                "ApplicationTemplate": "zookeeper-client",
                "Name": "zookeeper-client",
                "PortList": null,
                "PortNumber": 2181,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": "zk{{ plus 1 .InstanceID }}:2181"
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "cluster_healthy": {
                "Interval": 10,
                "Script": "curl -A 'HMaster cluster_healthy healthcheck' -f -s http://127.0.0.1:61000/status/cluster | grep -q '0 dead'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rest_answering": {
                "Interval": 10,
                "Script": "curl -A 'HMaster rest_answering healthcheck' -o /dev/null -f -s http://127.0.0.1:61000/status/cluster",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "9ykr42ukm6wj65weycbqe510b",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/hbase:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "hbasedaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/hbase/logs/hbase-master.log",
                "Type": "hbase"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "LogFatal",
                            "legend": "Total number of fatal log events",
                            "metric": "LogFatal",
                            "metricSource": "Hmaster",
                            "name": "Total number of fatal log events",
                            "rate": false,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "LogError",
                            "legend": "Total number of error log events",
                            "metric": "LogError",
                            "metricSource": "Hmaster",
                            "name": "Total number of error log events",
                            "rate": false,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "LogWarn",
                            "legend": "Total number of warn log events",
                            "metric": "LogWarn",
                            "metricSource": "Hmaster",
                            "name": "Total number of warn log events",
                            "rate": false,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Log Stats",
                    "footer": false,
                    "format": "",
                    "id": "logStats",
                    "maxy": null,
                    "miny": 0,
                    "name": "Log Stats",
                    "range": {
                        "end": "0s-ago",
                        "start": ""
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9ykr42ukm6wj65weycbqe510b"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "events"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": true,
                            "format": "",
                            "id": "numRegionServers",
                            "legend": "Total number of live regions servers",
                            "metric": "numRegionServers",
                            "metricSource": "Hmaster",
                            "name": "Total number of live regions servers",
                            "rate": false,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "zimsum",
                            "color": "",
                            "expression": "",
                            "fill": true,
                            "format": "",
                            "id": "numDeadRegionServers",
                            "legend": "Total number of dead regions servers",
                            "metric": "numDeadRegionServers",
                            "metricSource": "Hmaster",
                            "name": "Total number of dead regions servers",
                            "rate": false,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": 1048576
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Region Servers",
                    "footer": false,
                    "format": "",
                    "id": "regionServers",
                    "maxy": null,
                    "miny": 0,
                    "name": "Region Servers",
                    "range": {
                        "end": "0s-ago",
                        "start": ""
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9ykr42ukm6wj65weycbqe510b"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "servers"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "HMaster internal metrics",
                    "ID": "HMaster",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "LogFatal",
                            "Name": "Total number of fatal log events",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "LogError",
                            "Name": "Total number of error log events",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "LogWarn",
                            "Name": "Total number of warn log events",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "numRegionServers",
                            "Name": "Total number of live regions servers",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "numDeadRegionServers",
                            "Name": "Total number of dead regions servers",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "HMaster internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"LogFatal\",\"tags\":{\"controlplane_service_id\":[\"9ykr42ukm6wj65weycbqe510b\"]}},{\"metric\":\"LogError\",\"tags\":{\"controlplane_service_id\":[\"9ykr42ukm6wj65weycbqe510b\"]}},{\"metric\":\"LogWarn\",\"tags\":{\"controlplane_service_id\":[\"9ykr42ukm6wj65weycbqe510b\"]}},{\"metric\":\"numRegionServers\",\"tags\":{\"controlplane_service_id\":[\"9ykr42ukm6wj65weycbqe510b\"]}},{\"metric\":\"numDeadRegionServers\",\"tags\":{\"controlplane_service_id\":[\"9ykr42ukm6wj65weycbqe510b\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "HMaster",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/hbase-env.sh": {
                "Content": "export HBASE_MANAGES_ZK=false\nexport HBASE_HEAPSIZE={{percentScale (bytesToMB .RAMCommitment) 0.9}}\n",
                "Filename": "/etc/hbase-env.sh",
                "Owner": "hbase:hbase",
                "Permissions": "0775"
            },
            "/etc/hbase-site.xml": {
                "Content": "<configuration>\n  <property>\n    <name>hbase.rootdir</name>\n    <value>file:///var/hbase</value>\n  </property>\n  <property>\n    <name>hbase.cluster.distributed</name>\n    <value>true</value>\n  </property>\n  <property>\n      <name>hbase.zookeeper.quorum</name>\n      <value>zk1,zk2,zk3</value>\n  </property>\n  <property>\n      <name>hbase.master.wait.on.regionservers.mintostart</name>\n      <value>2</value>\n  </property>\n</configuration>",
                "Filename": "/etc/hbase-site.xml",
                "Owner": "hbase:hbase",
                "Permissions": "0664"
            },
            "/opt/hbase/conf/hadoop-metrics2-hbase.properties": {
                "Content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# syntax: [prefix].[source|sink].[instance].[options]\n# See javadoc of package-info.java for org.apache.hadoop.metrics2 for details\n\n# sampling period\n*.period=15\n\n# Below are some examples of sinks that could be used\n# to monitor different hbase daemons.\n\nhbase.sink.file-all.class=com.zenoss.hadoop.metrics.ControlCenterSink\nhbase.sink.file-all.includedMetrics=Log\\\\w*,\\\\w*RegionServers,hbase\\.regionserver\\.\\\\w*,storeFile\\\\w*\nhbase.sink.file-all.metricsPrefix=zenoss.hbase.\n# hbase.sink.file0.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file0.context=hmaster\n# hbase.sink.file0.filename=master.metrics\n\n# hbase.sink.file1.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file1.context=thrift-one\n# hbase.sink.file1.filename=thrift-one.metrics\n\n# hbase.sink.file2.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file2.context=thrift-two\n# hbase.sink.file2.filename=thrift-one.metrics\n\n# hbase.sink.file3.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file3.context=rest\n# hbase.sink.file3.filename=rest.metrics\n",
                "Filename": "/opt/hbase/conf/hadoop-metrics2-hbase.properties",
                "Owner": "",
                "Permissions": ""
            }
        },
        "PIDFile": "",
        "ParentServiceID": "57pbs7azvpowkahajgadex0ow",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "All ZooKeepers up",
                "Script": "{{with $zks := (child (parent .) \"ZooKeeper\").Instances }}{{ range (each $zks) }}{ echo ruok; sleep 2; } | nc zk{{plus 1 .}} 2181 | grep imok {{if ne (plus 1 .) $zks}}&& {{end}}{{end}}{{end}}"
            }
        ],
        "Privileged": true,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 1,
        "Startup": "/usr/bin/run-hbase-master.sh /etc/hbase-site.xml",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/hbase",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "hbase:hbase",
                "Permission": "0755",
                "ResourcePath": "hbase-master",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/zookeeper.cfg": {
                "Content": "tickTime=2000\ndataDir=/var/lib/zookeeper\nclientPort={{plus 2181 .InstanceID}}\ninitLimit=5\nsyncLimit=2\n{{range $i, $n := (each .Instances)}}\nserver.{{plus 1 $n}}=127.0.0.1:{{plus $n 2888}}:{{plus $n 3888}}{{ end }}\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=1\n",
                "Filename": "/etc/zookeeper.cfg",
                "Owner": "zookeeper:zookeeper",
                "Permissions": "0664"
            },
            "/var/lib/zookeeper/myid": {
                "Content": "{{ plus 1 .InstanceID }}",
                "Filename": "/var/lib/zookeeper/myid",
                "Owner": "zookeeper:zookeeper",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-client",
                "ApplicationTemplate": "zookeeper-client",
                "Name": "zookeeper-client",
                "PortList": null,
                "PortNumber": 2181,
                "PortTemplate": "{{ plus .InstanceID 2181}}",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-quorum",
                "ApplicationTemplate": "zookeeper-quorum",
                "Name": "zookeeper-quorum",
                "PortList": null,
                "PortNumber": 2888,
                "PortTemplate": "{{ plus .InstanceID 2888}}",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-leader",
                "ApplicationTemplate": "zookeeper-leader",
                "Name": "zookeeper-leader",
                "PortList": null,
                "PortNumber": 3888,
                "PortTemplate": "{{ plus .InstanceID 3888}}",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-client",
                "ApplicationTemplate": "zookeeper-client",
                "Name": "zookeeper-clients",
                "PortList": null,
                "PortNumber": 2181,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-quorum",
                "ApplicationTemplate": "zookeeper-quorum",
                "Name": "zookeeper-quora",
                "PortList": null,
                "PortNumber": 2888,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zookeeper-leader",
                "ApplicationTemplate": "zookeeper-leader",
                "Name": "zookeeper-leaders",
                "PortList": null,
                "PortNumber": 3888,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "{ echo stats; sleep 1; } | nc 127.0.0.1 {{ plus 2181 .InstanceID }} | grep -q Zookeeper",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "PREFER_SEPARATE",
        "ID": "awdjqqbgzp90ry2os9h3e7a0g",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/hbase:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 3
        },
        "Instances": 3,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "zookeeper"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/zookeeper/zookeeper.log",
                "Type": "hbase"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "ZooKeeper",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/zookeeper.cfg": {
                "Content": "tickTime=2000\ndataDir=/var/lib/zookeeper\nclientPort={{plus 2181 .InstanceID}}\ninitLimit=5\nsyncLimit=2\n{{range $i, $n := (each .Instances)}}\nserver.{{plus 1 $n}}=127.0.0.1:{{plus $n 2888}}:{{plus $n 3888}}{{ end }}\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=1\n",
                "Filename": "/etc/zookeeper.cfg",
                "Owner": "zookeeper:zookeeper",
                "Permissions": "0664"
            },
            "/var/lib/zookeeper/myid": {
                "Content": "{{ plus 1 .InstanceID }}",
                "Filename": "/var/lib/zookeeper/myid",
                "Owner": "zookeeper:zookeeper",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "57pbs7azvpowkahajgadex0ow",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": true,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 1,
        "Startup": "/usr/bin/run-zk.sh /etc/zookeeper.cfg",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/lib/zookeeper/version-2",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zookeeper:zookeeper",
                "Permission": "0755",
                "ResourcePath": "hbase-zookeeper-{{ plus 1 .InstanceID }}",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "HBase Cluster",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "57pbs7azvpowkahajgadex0ow",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "HBase",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "994ch2gfxz8v4443uqq6x6pff",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "",
        "Tags": null,
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "994ch2gfxz8v4443uqq6x6pff",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Infrastructure",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "9jjluaptpxzrj26ci8btujvdr",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "",
        "Tags": [
            "zenoss-infrastructure"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '/opt/zenoss/bin/zencapacity debug'",
            "stats": "su - zenoss -c '/opt/zenoss/bin/zencapacity stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zencapacity.conf": {
                "Content": "#\n# Configuration file for zencapacity\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zencapacity.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Set a heartbeat timeout in seconds for\n#  a daemon, default: 900\n#heartbeattimeout 900\n#\n# Name of monitor to use for heartbeat\n#  events Default is %(default)s., default:\n#  localhost\n#monitor localhost\n#\n# How frequently (in seconds) to update\n#  capacity rankings. Default is %(default)s.,\n#  default: 300\n#cycletime 300\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Defer polling the database for the specified\n#  maximum time interval, in seconds.\n#  This will default to 60 only if --zodb-cacheservers\n#  is set.\n#zodb-poll-interval None\n#\n# memcached maximum object size in bytes,\n#  default: 1048576\n#zodb-cache-max-object-size 1048576\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zencapacity.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Aggregates, projects, and indexes capacity data.",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "opentsdb-reader",
                "ApplicationTemplate": "opentsdb-reader",
                "Name": "opentsdb-reader",
                "PortList": null,
                "PortNumber": 4242,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zencapacity.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "9f5b5yzhdq53anoug22ylo5mj",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zencapacity.log",
                "Type": "zencapacity"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Capacity",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zencapacity.conf": {
                "Content": "#\n# Configuration file for zencapacity\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zencapacity.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Set a heartbeat timeout in seconds for\n#  a daemon, default: 900\n#heartbeattimeout 900\n#\n# Name of monitor to use for heartbeat\n#  events Default is %(default)s., default:\n#  localhost\n#monitor localhost\n#\n# How frequently (in seconds) to update\n#  capacity rankings. Default is %(default)s.,\n#  default: 300\n#cycletime 300\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Defer polling the database for the specified\n#  maximum time interval, in seconds.\n#  This will default to 60 only if --zodb-cacheservers\n#  is set.\n#zodb-poll-interval None\n#\n# memcached maximum object size in bytes,\n#  default: 1048576\n#zodb-cache-max-object-size 1048576\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zencapacity.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "bf71nji53ltppe87g8dxjn95x",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "export TERM=xterm; mysql --host=127.0.0.1 --port=3306 -c ';' 2>&1 | grep denied"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "8G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zencapacity run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID \"",
        "Tags": [
            "daemon",
            "ZenPacks.zenoss.Capacity"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/metricshipper/metricshipper.yaml": {
                "Content": "# Redis URL to subscribe to, of the format:\n#\n#     redis://HOST:PORT/DATABASE/KEY\n#\n# Where KEY is the key of the list containing metrics. This must match whatever\n# is specified on the publishing side (i.e., in the collector daemon).\n#\n#redisurl: redis://localhost:6379/0/metrics2\n\n# WebSocket URL of consumer to publish to.\n#\n#consumerurl: ws://localhost:8080/ws/metrics/store\n\n# Username to use when connecting to the consumer\n#\n\nusername: {{(contextFilter . \"global.conf.zauth-\").username}}\n\n# Password to use when connecting to the consumer\n#\n\npassword: {{(contextFilter . \"global.conf.zauth-\").password}}\n\n# Number of simultaneous readers from Redis.\n#\n#readers: 2\n\n# Number of simultaneous writers to the consumer.\n#\n#writers: 1\n\n# Maximum number of messages to keep in the internal buffer.\n#\n#maxbuffersize: 1024\n\n# Maximum number of messages to send to the consumer in a single batch.\n# This should be smaller than the setting for maxbuffersize.\n#\n#maxbatchsize: 64\n\n# Maximum time in seconds to wait for messages from the internal buffer to\n# be ready before sending a batch to the consumer.\n#\n#batchtimeout: 0.1\n\n# Rolling time period in seconds to consider slow-down messages from the\n# consumer.\n#\n#backoffwindow: 60\n\n# Maximum age in seconds of websocket connections before they are closed and\n# reopened. Set to 0 to disable autoclosing connections.\n#\n#maxconnectionage: 600\n\n# Encoding to use for published metrics (\"binary\" or \"json\"). Default is\n# binary.\n#\n#encoding: binary\n\n# Maximum number of slow-down messages to consider for exponential backoff.\n#\n#maxbackoffsteps: 1200\n\n# Maximum number of milliseconds to wait before sending each batch of metrics.\n#\n#maxbackoffdelay: 10000\n\n# Number of processors to use.\n#\n#cpus: 4\n\n# Total retry attempts, zero for infinity\n#\n#retryconnection: 0\n\n# Timeout between connection retry attempts in seconds\n#\n#retryconnectiontimeout: 1\n",
                "Filename": "/opt/zenoss/etc/metricshipper/metricshipper.yaml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Pushes metric data to a MetricConsumer",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -u zenoss metricshipper",
                "Timeout": 0,
                "Tolerance": 0
            },
            "store_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/MetricShipper/store_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "1ychflfp9ju4pzanrdho5gbns",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "glog"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/metricshipper.log",
                "Type": "metricshipper"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "txBytes",
                            "legend": "tx",
                            "metric": "ZEN_INF.org.zenoss.app.metricshipper.txBytes.count",
                            "metricSource": "metricshipper",
                            "name": "tx",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Websocket throughput.",
                    "footer": false,
                    "format": "",
                    "id": "websocketThroughput",
                    "maxy": null,
                    "miny": null,
                    "name": "Websocket Throughput",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1ychflfp9ju4pzanrdho5gbns"
                        ]
                    },
                    "type": "line",
                    "units": "metrics/second",
                    "yAxisLabel": "Throughput"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "outgoing",
                            "legend": "outgoing",
                            "metric": "ZEN_INF.org.zenoss.app.metricshipper.totalOutgoing.count",
                            "metricSource": "metricshipper",
                            "name": "outgoing",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "incoming",
                            "legend": "incoming",
                            "metric": "ZEN_INF.org.zenoss.app.metricshipper.totalIncoming.count",
                            "metricSource": "metricshipper",
                            "name": "incoming",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints received / transmitted per second.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1ychflfp9ju4pzanrdho5gbns"
                        ]
                    },
                    "type": "line",
                    "units": "metrics/second",
                    "yAxisLabel": "Data Points"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "Metric Shipper metrics",
                    "ID": "metricshipper",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "rate of incoming metrics",
                            "ID": "ZEN_INF.org.zenoss.app.metricshipper.totalIncoming.count",
                            "Name": "incoming",
                            "ResetValue": 0,
                            "Unit": "metrics/second"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "rate of outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.app.metricshipper.totalOutgoing.count",
                            "Name": "outgoing",
                            "ResetValue": 0,
                            "Unit": "metrics/second"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "rate of outgoing bytes on websocket",
                            "ID": "ZEN_INF.org.zenoss.app.metricshipper.txBytes.count",
                            "Name": "txBytes",
                            "ResetValue": 0,
                            "Unit": "metrics/second"
                        }
                    ],
                    "Name": "Metric Shipper metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.metricshipper.totalIncoming.count\",\"tags\":{\"controlplane_service_id\":[\"1ychflfp9ju4pzanrdho5gbns\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricshipper.totalOutgoing.count\",\"tags\":{\"controlplane_service_id\":[\"1ychflfp9ju4pzanrdho5gbns\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricshipper.txBytes.count\",\"tags\":{\"controlplane_service_id\":[\"1ychflfp9ju4pzanrdho5gbns\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "MetricShipper",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/metricshipper/metricshipper.yaml": {
                "Content": "# Redis URL to subscribe to, of the format:\n#\n#     redis://HOST:PORT/DATABASE/KEY\n#\n# Where KEY is the key of the list containing metrics. This must match whatever\n# is specified on the publishing side (i.e., in the collector daemon).\n#\n#redisurl: redis://localhost:6379/0/metrics2\n\n# WebSocket URL of consumer to publish to.\n#\n#consumerurl: ws://localhost:8080/ws/metrics/store\n\n# Username to use when connecting to the consumer\n#\n\nusername: {{(contextFilter . \"global.conf.zauth-\").username}}\n\n# Password to use when connecting to the consumer\n#\n\npassword: {{(contextFilter . \"global.conf.zauth-\").password}}\n\n# Number of simultaneous readers from Redis.\n#\n#readers: 2\n\n# Number of simultaneous writers to the consumer.\n#\n#writers: 1\n\n# Maximum number of messages to keep in the internal buffer.\n#\n#maxbuffersize: 1024\n\n# Maximum number of messages to send to the consumer in a single batch.\n# This should be smaller than the setting for maxbuffersize.\n#\n#maxbatchsize: 64\n\n# Maximum time in seconds to wait for messages from the internal buffer to\n# be ready before sending a batch to the consumer.\n#\n#batchtimeout: 0.1\n\n# Rolling time period in seconds to consider slow-down messages from the\n# consumer.\n#\n#backoffwindow: 60\n\n# Maximum age in seconds of websocket connections before they are closed and\n# reopened. Set to 0 to disable autoclosing connections.\n#\n#maxconnectionage: 600\n\n# Encoding to use for published metrics (\"binary\" or \"json\"). Default is\n# binary.\n#\n#encoding: binary\n\n# Maximum number of slow-down messages to consider for exponential backoff.\n#\n#maxbackoffsteps: 1200\n\n# Maximum number of milliseconds to wait before sending each batch of metrics.\n#\n#maxbackoffdelay: 10000\n\n# Number of processors to use.\n#\n#cpus: 4\n\n# Total retry attempts, zero for infinity\n#\n#retryconnection: 0\n\n# Timeout between connection retry attempts in seconds\n#\n#retryconnectiontimeout: 1\n",
                "Filename": "/opt/zenoss/etc/metricshipper/metricshipper.yaml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"cd /opt/zenoss && /bin/supervisord -n -c etc/metricshipper/supervisord.conf\"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenperfsnmp.conf": {
                "Content": "#\n# Configuration file for zenperfsnmp\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenperfsnmp.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Show the raw RRD values. For debugging\n#  purposes only., default: False\n#showrawresults False\n#\n# Deprecated since 4.1.1. No longer used,\n#  default: 20\n#maxbackoffminutes 20\n#\n# How many attempts per cycle should be\n#  made to get data for an OID from a\n#  non-responsive device. Minimum of 2,\n#  default: 2\n#triespercycle 2\n#\n# How many consecutive time outs per cycle\n#  before stopping attempts to collect,\n#  default: 3\n#maxtimeouts 3\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenperfsnmp.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Performs high-performance, asynchronous SNMP performance collection and stores it locally to the collector",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenperfsnmp.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "1vik1hp3wqqu9qzz89sbq4wlq",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenperfsnmp.log",
                "Type": "zenperfsnmp"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenperfsnmp",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1vik1hp3wqqu9qzz89sbq4wlq"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenperfsnmp",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1vik1hp3wqqu9qzz89sbq4wlq"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenperfsnmp",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1vik1hp3wqqu9qzz89sbq4wlq"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenperfsnmp",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1vik1hp3wqqu9qzz89sbq4wlq"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenperfsnmp",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1vik1hp3wqqu9qzz89sbq4wlq"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenperfsnmp",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenperfsnmp",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenperfsnmp",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1vik1hp3wqqu9qzz89sbq4wlq"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenperfsnmp internal metrics",
                    "ID": "zenperfsnmp",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenperfsnmp internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"1vik1hp3wqqu9qzz89sbq4wlq\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"1vik1hp3wqqu9qzz89sbq4wlq\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"1vik1hp3wqqu9qzz89sbq4wlq\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"1vik1hp3wqqu9qzz89sbq4wlq\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"1vik1hp3wqqu9qzz89sbq4wlq\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"1vik1hp3wqqu9qzz89sbq4wlq\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"1vik1hp3wqqu9qzz89sbq4wlq\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"1vik1hp3wqqu9qzz89sbq4wlq\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenperfsnmp",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenperfsnmp",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenperfsnmp.conf": {
                "Content": "#\n# Configuration file for zenperfsnmp\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenperfsnmp.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Show the raw RRD values. For debugging\n#  purposes only., default: False\n#showrawresults False\n#\n# Deprecated since 4.1.1. No longer used,\n#  default: 20\n#maxbackoffminutes 20\n#\n# How many attempts per cycle should be\n#  made to get data for an OID from a\n#  non-responsive device. Minimum of 2,\n#  default: 2\n#triespercycle 2\n#\n# How many consecutive time outs per cycle\n#  before stopping attempts to collect,\n#  default: 3\n#maxtimeouts 3\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenperfsnmp.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenperfsnmp run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zencommand.conf": {
                "Content": "#\n# Configuration file for zencommand\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zencommand.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 50\n#maxparallel 50\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Show the raw RRD values. For debugging\n#  purposes only., default: False\n#showrawresults False\n#\n# When a device fails to respond, increase\n#  the time to check on the device until\n#  this limit., default: 20\n#maxbackoffminutes 20\n#\n# Display the entire command and command-line\n#  arguments,  including any passwords.,\n#  default: False\n#showfullcommand False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zencommand.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Run plugins locally and remotely by using a native SSH transport",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zencommand.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "a5rfpjegg6lm4fd22aog88fnd",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zencommand.log",
                "Type": "zencommand"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zencommand",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "a5rfpjegg6lm4fd22aog88fnd"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zencommand",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "a5rfpjegg6lm4fd22aog88fnd"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%.3f",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zencommand",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "%.3f",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "a5rfpjegg6lm4fd22aog88fnd"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%.3f",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zencommand",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "%.3f",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "a5rfpjegg6lm4fd22aog88fnd"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zencommand",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "a5rfpjegg6lm4fd22aog88fnd"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zencommand",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zencommand",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zencommand",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "a5rfpjegg6lm4fd22aog88fnd"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zencommand internal metrics",
                    "ID": "zencommand",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zencommand internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"a5rfpjegg6lm4fd22aog88fnd\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"a5rfpjegg6lm4fd22aog88fnd\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"a5rfpjegg6lm4fd22aog88fnd\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"a5rfpjegg6lm4fd22aog88fnd\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"a5rfpjegg6lm4fd22aog88fnd\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"a5rfpjegg6lm4fd22aog88fnd\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"a5rfpjegg6lm4fd22aog88fnd\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"a5rfpjegg6lm4fd22aog88fnd\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zencommand",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zencommand",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zencommand.conf": {
                "Content": "#\n# Configuration file for zencommand\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zencommand.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 50\n#maxparallel 50\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Show the raw RRD values. For debugging\n#  purposes only., default: False\n#showrawresults False\n#\n# When a device fails to respond, increase\n#  the time to check on the device until\n#  this limit., default: 20\n#maxbackoffminutes 20\n#\n# Display the entire command and command-line\n#  arguments,  including any passwords.,\n#  default: False\n#showfullcommand False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zencommand.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zencommand run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenmail.conf": {
                "Content": "#\n# Configuration file for zenmail\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenmail.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# File descriptor to use for listening,\n#  default: -1\n#useFileDescriptor -1\n#\n# Alternative listen port to use (default\n#  %default), default: 25\n# Note: If you change this, you will need to edit this service to match using:\n#     $ serviced service edit zenmail\nlistenPort 50025\n#\n# Severity for events created, default: 2\n#eventseverity 2\n#\n# IP address to listen on. Default is 0.0.0.0\n#listenip \n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenmail.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Collector daemon that listens on SMTP and converts email messages into events",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 25,
                    "Protocol": "tcp"
                },
                "Application": "localhost_zenmail",
                "ApplicationTemplate": "{{(parent .).Name}}_zenmail",
                "Name": "zenmail_smtp",
                "PortList": null,
                "PortNumber": 50025,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenmail.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "service_ready": {
                "Interval": 10,
                "Script": "echo 'QUIT' | nc -w 10 -C 127.0.0.1 50025 | grep -q '^220 '",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "72os710u3i1m0j0kahbr7e5ot",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 1,
            "Max": 1,
            "Min": 0
        },
        "Instances": 1,
        "Launch": "manual",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenmail.log",
                "Type": "zenmail"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenmail",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "72os710u3i1m0j0kahbr7e5ot"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenmail",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "72os710u3i1m0j0kahbr7e5ot"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenmail",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "72os710u3i1m0j0kahbr7e5ot"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenmail",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenmail",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenmail",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "72os710u3i1m0j0kahbr7e5ot"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenmail internal metrics",
                    "ID": "zenmail",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenmail internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"72os710u3i1m0j0kahbr7e5ot\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"72os710u3i1m0j0kahbr7e5ot\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"72os710u3i1m0j0kahbr7e5ot\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"72os710u3i1m0j0kahbr7e5ot\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"72os710u3i1m0j0kahbr7e5ot\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"72os710u3i1m0j0kahbr7e5ot\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenmail",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenmail",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenmail.conf": {
                "Content": "#\n# Configuration file for zenmail\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenmail.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# File descriptor to use for listening,\n#  default: -1\n#useFileDescriptor -1\n#\n# Alternative listen port to use (default\n#  %default), default: 25\n# Note: If you change this, you will need to edit this service to match using:\n#     $ serviced service edit zenmail\nlistenPort 50025\n#\n# Severity for events created, default: 2\n#eventseverity 2\n#\n# IP address to listen on. Default is 0.0.0.0\n#listenip \n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenmail.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenmail run -c --logfileonly --monitor {{(parent .).Name}} \"",
        "Tags": [
            "ZenPacks.zenoss.ZenMail",
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancezerodown"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/etc/redis.conf": {
                "Content": "# Redis configuration file example\n\n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k => 1000 bytes\n# 1kb => 1024 bytes\n# 1m => 1000000 bytes\n# 1mb => 1024*1024 bytes\n# 1g => 1000000000 bytes\n# 1gb => 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n\n# By default Redis does not run as a daemon. Use 'yes' if you need it.\n# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.\ndaemonize no\n\n# When running daemonized, Redis writes a pid file in /var/run/redis.pid by\n# default. You can specify a custom pid file location here.\npidfile /var/run/redis/redis.pid\n\n# Accept connections on the specified port, default is 6379.\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n\n# If you want you can bind a single interface, if the bind option is not\n# specified all the interfaces will listen for incoming connections.\n#\n# comment out bind as workaround for ZEN-10504\nbind 0.0.0.0\n\n# Specify the path for the unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket /tmp/redis.sock\n# unixsocketperm 755\n\n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n\n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Take the connection alive from the point of view of network\n#    equipment in the middle.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 60 seconds.\ntcp-keepalive 0\n\n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development/testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important / critical messages are logged)\nloglevel notice\n\n# Specify the log file name. Also 'stdout' can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to /dev/null\nlogfile /var/log/redis/redis.log\n\n# To enable logging to the system logger, just set 'syslog-enabled' to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n\n# Specify the syslog identity.\n# syslog-ident redis\n\n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n\n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT <dbid> where\n# dbid is a number between 0 and 'databases'-1\ndatabases 16\n\n################################ SNAPSHOTTING  #################################\n#\n# Save the DB on disk:\n#\n#   save <seconds> <changes>\n#\n#   Will save the DB if both the given number of seconds and the given\n#   number of write operations against the DB occurred.\n#\n#   In the example below the behaviour will be to save:\n#   after 900 sec (15 min) if at least 1 key changed\n#   after 300 sec (5 min) if at least 10 keys changed\n#   after 60 sec if at least 10000 keys changed\n#\n#   Note: you can disable saving at all commenting all the \"save\" lines.\n#\n#   It is also possible to remove all the previously configured save\n#   points by adding a save directive with a single empty string argument\n#   like in the following example:\n#\n#   save \"\"\n\nsave 900 1\nsave 300 10\nsave 60 10000\n\n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in an hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# distater will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usually even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n\n# Compress string objects using LZF when dump .rdb databases?\n# For default that's set to 'yes' as it's almost always a win.\n# If you want to save some CPU in the saving child set it to 'no' but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n\n# The filename where to dump the DB\ndbfilename dump.rdb\n\n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the 'dbfilename' configuration directive.\n# \n# The Append Only File will also be created inside this directory.\n# \n# Note that you must specify a directory here, not a file name.\ndir /var/lib/redis/\n\n################################# REPLICATION #################################\n\n# Master-Slave replication. Use slaveof to make a Redis instance a copy of\n# another Redis server. Note that the configuration is local to the slave\n# so for example it is possible to configure the slave to save the DB with a\n# different interval, or to listen to another port, and so on.\n#\n# slaveof <masterip> <masterport>\n\n# If the master is password protected (using the \"requirepass\" configuration\n# directive below) it is possible to tell the slave to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the slave request.\n#\n# masterauth <master-password>\n\n# When a slave loses its connection with the master, or when the replication\n# is still in progress, the slave can act in two different ways:\n#\n# 1) if slave-serve-stale-data is set to 'yes' (the default) the slave will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) if slave-serve-stale-data is set to 'no' the slave will reply with\n#    an error \"SYNC with master in progress\" to all the kind of commands\n#    but to INFO and SLAVEOF.\n#\nslave-serve-stale-data yes\n\n# You can configure a slave instance to accept writes or not. Writing against\n# a slave instance may be useful to store some ephemeral data (because data\n# written on a slave will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default slaves are read-only.\n#\n# Note: read only slaves are not designed to be exposed to untrusted clients\n# on the internet. It's just a protection layer against misuse of the instance.\n# Still a read only slave exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extend you can improve\n# security of read only slaves using 'rename-command' to shadow all the\n# administrative / dangerous commands.\nslave-read-only yes\n\n# Slaves send PINGs to server in a predefined interval. It's possible to change\n# this interval with the repl_ping_slave_period option. The default value is 10\n# seconds.\n#\n# repl-ping-slave-period 10\n\n# The following option sets a timeout for both Bulk transfer I/O timeout and\n# master data or ping response timeout. The default value is 60 seconds.\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-slave-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the slave.\n#\n# repl-timeout 60\n\n# Disable TCP_NODELAY on the slave socket after SYNC?\n#\n# If you select \"yes\" Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to slaves. But this can add a delay for\n# the data to appear on the slave side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select \"no\" the delay for data to appear on the slave side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and slaves are many hops away, turning this to \"yes\" may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n\n# The slave priority is an integer number published by Redis in the INFO output.\n# It is used by Redis Sentinel in order to select a slave to promote into a\n# master if the master is no longer working correctly.\n#\n# A slave with a low priority number is considered better for promotion, so\n# for instance if there are three slaves with priority 10, 100, 25 Sentinel will\n# pick the one wtih priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the slave as not able to perform the\n# role of master, so a slave with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nslave-priority 100\n\n################################## SECURITY ###################################\n\n# Require clients to issue AUTH <PASSWORD> before processing any other\n# commands.  This might be useful in environments in which you do not trust\n# others with access to the host running redis-server.\n#\n# This should stay commented out for backward compatibility and because most\n# people do not need auth (e.g. they run their own servers).\n# \n# Warning: since Redis is pretty fast an outside user can try up to\n# 150k passwords per second against a good box. This means that you should\n# use a very strong password otherwise it will be very easy to break.\n#\n# requirepass foobared\n\n# Command renaming.\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG \"\"\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to slaves may cause problems.\n\n################################### LIMITS ####################################\n\n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error 'max number of clients reached'.\n#\n# maxclients 10000\n\n# Don't use more memory than the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# accordingly to the eviction policy selected (see maxmemmory-policy).\n#\n# If Redis can't remove keys according to the policy, or if the policy is\n# set to 'noeviction', Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU cache, or to set\n# an hard memory limit for an instance (using the 'noeviction' policy).\n#\n# WARNING: If you have slaves attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the slaves are subtracted\n# from the used memory count, so that network problems / resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of slaves is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have slaves attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for slave\n# output buffers (but this is not needed if the policy is 'noeviction').\n#\nmaxmemory {{bytesToMB .RAMCommitment}}mb\n\n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select among five behaviors:\n# \n# volatile-lru -> remove the key with an expire set using an LRU algorithm\n# allkeys-lru -> remove any key accordingly to the LRU algorithm\n# volatile-random -> remove a random key with an expire set\n# allkeys-random -> remove a random key, any key\n# volatile-ttl -> remove the key with the nearest expire time (minor TTL)\n# noeviction -> don't expire at all, just return an error on write operations\n# \n# Note: with any of the above policies, Redis will return an error on write\n#       operations, when there are not suitable keys for eviction.\n#\n#       At the date of writing this commands are: set setnx setex append\n#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n#       getset mset msetnx exec sort\n#\n# The default is:\n#\n# maxmemory-policy volatile-lru\n\n# LRU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can select as well the sample\n# size to check. For instance for default Redis will check three keys and\n# pick the one that was used less recently, you can change the sample size\n# using the following configuration directive.\n#\n# maxmemory-samples 3\n\n############################## APPEND ONLY MODE ###############################\n\n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check http://redis.io/topics/persistence for more information.\n\nappendonly no\n\n# The name of the append only file (default: \"appendonly.aof\")\n# appendfilename appendonly.aof\n\n# The fsync() call tells the Operating System to actually write data on disk\n# instead to wait for more data in the output buffer. Some OS will really flush \n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don't fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log . Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is \"everysec\", as that's usually the right compromise between\n# speed and data safety. It's up to you to understand if you can relax this to\n# \"no\" that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that's snapshotting),\n# or on the contrary, use \"always\" that's very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http://antirez.com/post/redis-persistence-demystified.html\n#\n# If unsure, use \"everysec\".\n\n# appendfsync always\nappendfsync everysec\n# appendfsync no\n\n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I/O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it's possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as \"appendfsync none\". In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n# \n# If you have latency problems turn this to \"yes\". Otherwise leave it as\n# \"no\" that is the safest pick from the point of view of durability.\nno-appendfsync-on-rewrite no\n\n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n# \n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n\n################################ LUA SCRIPTING  ###############################\n\n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceed the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet called write commands. The second\n# is the only way to shut down the server in the case a write commands was\n# already issue by the script but the user don't want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n\n################################## SLOW LOG ###################################\n\n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I/O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n# \n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n\n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n\n############################### ADVANCED CONFIG ###############################\n\n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n\n# Similarly to hashes, small lists are also encoded in a special way in order\n# to save a lot of space. The special representation is only used when\n# you are under the following limits:\nlist-max-ziplist-entries 512\nlist-max-ziplist-value 64\n\n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happens to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n\n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n\n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into an hash table\n# that is rehashing, the more rehashing \"steps\" are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n# \n# The default is to use this millisecond 10 times every second in order to\n# active rehashing the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use \"activerehashing no\" if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply form time to time\n# to queries with 2 milliseconds delay.\n#\n# use \"activerehashing yes\" if you don't have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n\n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub/Sub client can't consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -> normal clients\n# slave  -> slave clients and MONITOR clients\n# pubsub -> clients subcribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes / 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don't receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and slave clients, since\n# subscribers and slaves receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit slave 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n\n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeot, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are perforemd with the same frequency, but Redis checks for\n# tasks to perform accordingly to the specified \"hz\" value.\n#\n# By default \"hz\" is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n\n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n\n################################## INCLUDES ###################################\n\n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis server but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# include /path/to/local.conf\n# include /path/to/other.conf\n",
                "Filename": "/etc/redis.conf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Redis server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedises",
                "PortList": null,
                "PortNumber": 16379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": "rd{{ plus 1 .InstanceID }}:6379"
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "metrics": {
                "Interval": 15,
                "Script": "/opt/zenoss/bin/healthchecks/collectorredis/metrics",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "REQUIRE_SEPARATE",
        "ID": "bwj6d99ds2c7enrvxa76tiaoe",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "redis"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/var/log/redis/redis.log",
                "Type": "redis"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "sum",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "metricsLength",
                            "legend": "Metrics",
                            "metric": "redis.metricsLength",
                            "metricSource": "redis",
                            "name": "Metric Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of metrics awaiting processing",
                    "footer": false,
                    "format": "",
                    "id": "metricqueue",
                    "maxy": null,
                    "miny": null,
                    "name": "Metric Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bwj6d99ds2c7enrvxa76tiaoe"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Metrics"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "total_commands_processed",
                            "legend": "Data Points",
                            "metric": "redis.total_commands_processed",
                            "metricSource": "redis",
                            "name": "Total Commands",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of commands per second",
                    "footer": false,
                    "format": "",
                    "id": "totalcommands",
                    "maxy": null,
                    "miny": null,
                    "name": "Total Commands",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bwj6d99ds2c7enrvxa76tiaoe"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Commands/s"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "redis internal metrics",
                    "ID": "redis",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "Number of commands processed by redis.",
                            "ID": "redis.total_commands_processed",
                            "Name": "Total Commands",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of metrics awaiting processing",
                            "ID": "redis.metricsLength",
                            "Name": "Metrics Queue Length",
                            "ResetValue": 0,
                            "Unit": "Count"
                        }
                    ],
                    "Name": "redis internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"redis.total_commands_processed\",\"tags\":{\"controlplane_service_id\":[\"bwj6d99ds2c7enrvxa76tiaoe\"]}},{\"metric\":\"redis.metricsLength\",\"tags\":{\"controlplane_service_id\":[\"bwj6d99ds2c7enrvxa76tiaoe\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "collectorredis",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/redis.conf": {
                "Content": "# Redis configuration file example\n\n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k => 1000 bytes\n# 1kb => 1024 bytes\n# 1m => 1000000 bytes\n# 1mb => 1024*1024 bytes\n# 1g => 1000000000 bytes\n# 1gb => 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n\n# By default Redis does not run as a daemon. Use 'yes' if you need it.\n# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.\ndaemonize no\n\n# When running daemonized, Redis writes a pid file in /var/run/redis.pid by\n# default. You can specify a custom pid file location here.\npidfile /var/run/redis/redis.pid\n\n# Accept connections on the specified port, default is 6379.\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n\n# If you want you can bind a single interface, if the bind option is not\n# specified all the interfaces will listen for incoming connections.\n#\n# comment out bind as workaround for ZEN-10504\nbind 0.0.0.0\n\n# Specify the path for the unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket /tmp/redis.sock\n# unixsocketperm 755\n\n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n\n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Take the connection alive from the point of view of network\n#    equipment in the middle.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 60 seconds.\ntcp-keepalive 0\n\n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development/testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important / critical messages are logged)\nloglevel notice\n\n# Specify the log file name. Also 'stdout' can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to /dev/null\nlogfile /var/log/redis/redis.log\n\n# To enable logging to the system logger, just set 'syslog-enabled' to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n\n# Specify the syslog identity.\n# syslog-ident redis\n\n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n\n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT <dbid> where\n# dbid is a number between 0 and 'databases'-1\ndatabases 16\n\n################################ SNAPSHOTTING  #################################\n#\n# Save the DB on disk:\n#\n#   save <seconds> <changes>\n#\n#   Will save the DB if both the given number of seconds and the given\n#   number of write operations against the DB occurred.\n#\n#   In the example below the behaviour will be to save:\n#   after 900 sec (15 min) if at least 1 key changed\n#   after 300 sec (5 min) if at least 10 keys changed\n#   after 60 sec if at least 10000 keys changed\n#\n#   Note: you can disable saving at all commenting all the \"save\" lines.\n#\n#   It is also possible to remove all the previously configured save\n#   points by adding a save directive with a single empty string argument\n#   like in the following example:\n#\n#   save \"\"\n\nsave 900 1\nsave 300 10\nsave 60 10000\n\n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in an hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# distater will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usually even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n\n# Compress string objects using LZF when dump .rdb databases?\n# For default that's set to 'yes' as it's almost always a win.\n# If you want to save some CPU in the saving child set it to 'no' but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n\n# The filename where to dump the DB\ndbfilename dump.rdb\n\n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the 'dbfilename' configuration directive.\n# \n# The Append Only File will also be created inside this directory.\n# \n# Note that you must specify a directory here, not a file name.\ndir /var/lib/redis/\n\n################################# REPLICATION #################################\n\n# Master-Slave replication. Use slaveof to make a Redis instance a copy of\n# another Redis server. Note that the configuration is local to the slave\n# so for example it is possible to configure the slave to save the DB with a\n# different interval, or to listen to another port, and so on.\n#\n# slaveof <masterip> <masterport>\n\n# If the master is password protected (using the \"requirepass\" configuration\n# directive below) it is possible to tell the slave to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the slave request.\n#\n# masterauth <master-password>\n\n# When a slave loses its connection with the master, or when the replication\n# is still in progress, the slave can act in two different ways:\n#\n# 1) if slave-serve-stale-data is set to 'yes' (the default) the slave will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) if slave-serve-stale-data is set to 'no' the slave will reply with\n#    an error \"SYNC with master in progress\" to all the kind of commands\n#    but to INFO and SLAVEOF.\n#\nslave-serve-stale-data yes\n\n# You can configure a slave instance to accept writes or not. Writing against\n# a slave instance may be useful to store some ephemeral data (because data\n# written on a slave will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default slaves are read-only.\n#\n# Note: read only slaves are not designed to be exposed to untrusted clients\n# on the internet. It's just a protection layer against misuse of the instance.\n# Still a read only slave exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extend you can improve\n# security of read only slaves using 'rename-command' to shadow all the\n# administrative / dangerous commands.\nslave-read-only yes\n\n# Slaves send PINGs to server in a predefined interval. It's possible to change\n# this interval with the repl_ping_slave_period option. The default value is 10\n# seconds.\n#\n# repl-ping-slave-period 10\n\n# The following option sets a timeout for both Bulk transfer I/O timeout and\n# master data or ping response timeout. The default value is 60 seconds.\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-slave-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the slave.\n#\n# repl-timeout 60\n\n# Disable TCP_NODELAY on the slave socket after SYNC?\n#\n# If you select \"yes\" Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to slaves. But this can add a delay for\n# the data to appear on the slave side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select \"no\" the delay for data to appear on the slave side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and slaves are many hops away, turning this to \"yes\" may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n\n# The slave priority is an integer number published by Redis in the INFO output.\n# It is used by Redis Sentinel in order to select a slave to promote into a\n# master if the master is no longer working correctly.\n#\n# A slave with a low priority number is considered better for promotion, so\n# for instance if there are three slaves with priority 10, 100, 25 Sentinel will\n# pick the one wtih priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the slave as not able to perform the\n# role of master, so a slave with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nslave-priority 100\n\n################################## SECURITY ###################################\n\n# Require clients to issue AUTH <PASSWORD> before processing any other\n# commands.  This might be useful in environments in which you do not trust\n# others with access to the host running redis-server.\n#\n# This should stay commented out for backward compatibility and because most\n# people do not need auth (e.g. they run their own servers).\n# \n# Warning: since Redis is pretty fast an outside user can try up to\n# 150k passwords per second against a good box. This means that you should\n# use a very strong password otherwise it will be very easy to break.\n#\n# requirepass foobared\n\n# Command renaming.\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG \"\"\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to slaves may cause problems.\n\n################################### LIMITS ####################################\n\n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error 'max number of clients reached'.\n#\n# maxclients 10000\n\n# Don't use more memory than the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# accordingly to the eviction policy selected (see maxmemmory-policy).\n#\n# If Redis can't remove keys according to the policy, or if the policy is\n# set to 'noeviction', Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU cache, or to set\n# an hard memory limit for an instance (using the 'noeviction' policy).\n#\n# WARNING: If you have slaves attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the slaves are subtracted\n# from the used memory count, so that network problems / resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of slaves is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have slaves attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for slave\n# output buffers (but this is not needed if the policy is 'noeviction').\n#\nmaxmemory {{bytesToMB .RAMCommitment}}mb\n\n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select among five behaviors:\n# \n# volatile-lru -> remove the key with an expire set using an LRU algorithm\n# allkeys-lru -> remove any key accordingly to the LRU algorithm\n# volatile-random -> remove a random key with an expire set\n# allkeys-random -> remove a random key, any key\n# volatile-ttl -> remove the key with the nearest expire time (minor TTL)\n# noeviction -> don't expire at all, just return an error on write operations\n# \n# Note: with any of the above policies, Redis will return an error on write\n#       operations, when there are not suitable keys for eviction.\n#\n#       At the date of writing this commands are: set setnx setex append\n#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd\n#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby\n#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby\n#       getset mset msetnx exec sort\n#\n# The default is:\n#\n# maxmemory-policy volatile-lru\n\n# LRU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can select as well the sample\n# size to check. For instance for default Redis will check three keys and\n# pick the one that was used less recently, you can change the sample size\n# using the following configuration directive.\n#\n# maxmemory-samples 3\n\n############################## APPEND ONLY MODE ###############################\n\n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check http://redis.io/topics/persistence for more information.\n\nappendonly no\n\n# The name of the append only file (default: \"appendonly.aof\")\n# appendfilename appendonly.aof\n\n# The fsync() call tells the Operating System to actually write data on disk\n# instead to wait for more data in the output buffer. Some OS will really flush \n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don't fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log . Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is \"everysec\", as that's usually the right compromise between\n# speed and data safety. It's up to you to understand if you can relax this to\n# \"no\" that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that's snapshotting),\n# or on the contrary, use \"always\" that's very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http://antirez.com/post/redis-persistence-demystified.html\n#\n# If unsure, use \"everysec\".\n\n# appendfsync always\nappendfsync everysec\n# appendfsync no\n\n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I/O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it's possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as \"appendfsync none\". In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n# \n# If you have latency problems turn this to \"yes\". Otherwise leave it as\n# \"no\" that is the safest pick from the point of view of durability.\nno-appendfsync-on-rewrite no\n\n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n# \n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n\n################################ LUA SCRIPTING  ###############################\n\n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceed the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet called write commands. The second\n# is the only way to shut down the server in the case a write commands was\n# already issue by the script but the user don't want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n\n################################## SLOW LOG ###################################\n\n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I/O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n# \n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n\n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n\n############################### ADVANCED CONFIG ###############################\n\n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n\n# Similarly to hashes, small lists are also encoded in a special way in order\n# to save a lot of space. The special representation is only used when\n# you are under the following limits:\nlist-max-ziplist-entries 512\nlist-max-ziplist-value 64\n\n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happens to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n\n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n\n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into an hash table\n# that is rehashing, the more rehashing \"steps\" are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n# \n# The default is to use this millisecond 10 times every second in order to\n# active rehashing the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use \"activerehashing no\" if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply form time to time\n# to queries with 2 milliseconds delay.\n#\n# use \"activerehashing yes\" if you don't have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n\n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub/Sub client can't consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -> normal clients\n# slave  -> slave clients and MONITOR clients\n# pubsub -> clients subcribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes / 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don't receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and slave clients, since\n# subscribers and slaves receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit slave 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n\n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeot, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are perforemd with the same frequency, but Redis checks for\n# tasks to perform accordingly to the specified \"hz\" value.\n#\n# By default \"hz\" is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n\n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n\n################################## INCLUDES ###################################\n\n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis server but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# include /path/to/local.conf\n# include /path/to/other.conf\n",
                "Filename": "/etc/redis.conf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": true,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "{{ if ne .InstanceID 0 }} /bin/sed -i 's/# slaveof <masterip> <masterport>/slaveof rd1 6379/' /etc/redis.conf & {{ end }} /usr/bin/redis-server /etc/redis.conf",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/lib/redis",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "root:root",
                "Permission": "0755",
                "ResourcePath": "{{(parent (parent .)).Name}}/{{(parent .).Name}}_collectorredis",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenvsphere.conf": {
                "Content": "#\n# Configuration file for zenvsphere\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenvsphere.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# When combined with --cycle, begin running\n#  all tasks immediately rather than normal\n#  scheduling, default: False\n#cyclenow False\n#\n# Specify which tasks/types to run.  Takes\n#  a regular expression.  Default is to\n#  run all tasks normally.\n#taskPattern \n#\n# Max heap, in MB, to use for java process\n#  (default is determined by JVM)\n#javaheap None\n#\n# Additional Java VM options\n#vmargs None\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenvsphere.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Collects performance data through a VMware vCenter server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenvsphere.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "8dgq2welx13h1o4skswqptyck",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "manual",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenvsphere.log",
                "Type": "zenvsphere"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenvsphere",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "8dgq2welx13h1o4skswqptyck"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenvsphere",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "8dgq2welx13h1o4skswqptyck"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenvsphere",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "8dgq2welx13h1o4skswqptyck"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenvsphere",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "8dgq2welx13h1o4skswqptyck"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenvsphere",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "8dgq2welx13h1o4skswqptyck"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenvsphere",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenvsphere",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenvsphere",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "8dgq2welx13h1o4skswqptyck"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenvsphere internal metrics",
                    "ID": "zenvsphere",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenvsphere internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"8dgq2welx13h1o4skswqptyck\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"8dgq2welx13h1o4skswqptyck\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"8dgq2welx13h1o4skswqptyck\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"8dgq2welx13h1o4skswqptyck\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"8dgq2welx13h1o4skswqptyck\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"8dgq2welx13h1o4skswqptyck\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"8dgq2welx13h1o4skswqptyck\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"8dgq2welx13h1o4skswqptyck\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenvsphere",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenvsphere",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenvsphere.conf": {
                "Content": "#\n# Configuration file for zenvsphere\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenvsphere.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# When combined with --cycle, begin running\n#  all tasks immediately rather than normal\n#  scheduling, default: False\n#cyclenow False\n#\n# Specify which tasks/types to run.  Takes\n#  a regular expression.  Default is to\n#  run all tasks normally.\n#taskPattern \n#\n# Max heap, in MB, to use for java process\n#  (default is determined by JVM)\n#javaheap None\n#\n# Additional Java VM options\n#vmargs None\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenvsphere.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenvsphere run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "ZenPacks.zenoss.vSphere",
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenucsevents.conf": {
                "Content": "#\n# Configuration file for zenucsevents\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenucsevents.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\nconfigsipsize 5\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Period between operState collection\n#  in seconds, default: 60\n#operStateInterval 60\n#\n# Tasks to run: events, stats, operstates.\n#  Default: all\n#task None\n#\n# Drop events instead of sending to zenhub,\n#  default: False\n#dropAll False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenucsevents.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Collects events from Cisco Unified Computing System event logs",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenucsevents.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "bbpqkb9ugclciql4bio3kamue",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "manual",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenucsevents.log",
                "Type": "zenucsevents"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenucsevents",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bbpqkb9ugclciql4bio3kamue"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenucsevents",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bbpqkb9ugclciql4bio3kamue"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenucsevents",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bbpqkb9ugclciql4bio3kamue"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenucsevents",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bbpqkb9ugclciql4bio3kamue"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenucsevents",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bbpqkb9ugclciql4bio3kamue"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenucsevents",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenucsevents",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenucsevents",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "bbpqkb9ugclciql4bio3kamue"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenucsevents internal metrics",
                    "ID": "zenucsevents",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenucsevents internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"bbpqkb9ugclciql4bio3kamue\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"bbpqkb9ugclciql4bio3kamue\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"bbpqkb9ugclciql4bio3kamue\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"bbpqkb9ugclciql4bio3kamue\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"bbpqkb9ugclciql4bio3kamue\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"bbpqkb9ugclciql4bio3kamue\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"bbpqkb9ugclciql4bio3kamue\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"bbpqkb9ugclciql4bio3kamue\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenucsevents",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenucsevents",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenucsevents.conf": {
                "Content": "#\n# Configuration file for zenucsevents\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenucsevents.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\nconfigsipsize 5\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Period between operState collection\n#  in seconds, default: 60\n#operStateInterval 60\n#\n# Tasks to run: events, stats, operstates.\n#  Default: all\n#task None\n#\n# Drop events instead of sending to zenhub,\n#  default: False\n#dropAll False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenucsevents.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenucsevents run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "ZenPacks.zenoss.CiscoUCS",
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenprocess.conf": {
                "Content": "#\n# Configuration file for zenprocess\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenprocess.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Show the list of processes found.For\n#  debugging purposes only., default: False\n#showprocs False\n#\n# Show the raw SNMP processes data returned\n#  from the device. For debugging purposes\n#  only., default: False\n#showrawtables False\n#\n# Directory and filename to use as a template\n#  to store SNMP results from device.\n#captureFilePrefix \n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenprocess.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Checks for the existence of monitored processes by using SNMP host resources' MIB, logging their CPU and memory utilization",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenprocess.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "9lb2d68eg0rswnaccffhlx9p6",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenprocess.log",
                "Type": "zenprocess"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenprocess",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9lb2d68eg0rswnaccffhlx9p6"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenprocess",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9lb2d68eg0rswnaccffhlx9p6"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenprocess",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9lb2d68eg0rswnaccffhlx9p6"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenprocess",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9lb2d68eg0rswnaccffhlx9p6"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenprocess",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9lb2d68eg0rswnaccffhlx9p6"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenprocess",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenprocess",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenprocess",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9lb2d68eg0rswnaccffhlx9p6"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenprocess internal metrics",
                    "ID": "zenprocess",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenprocess internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"9lb2d68eg0rswnaccffhlx9p6\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"9lb2d68eg0rswnaccffhlx9p6\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"9lb2d68eg0rswnaccffhlx9p6\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"9lb2d68eg0rswnaccffhlx9p6\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"9lb2d68eg0rswnaccffhlx9p6\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"9lb2d68eg0rswnaccffhlx9p6\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"9lb2d68eg0rswnaccffhlx9p6\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"9lb2d68eg0rswnaccffhlx9p6\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenprocess",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenprocess",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenprocess.conf": {
                "Content": "#\n# Configuration file for zenprocess\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenprocess.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Show the list of processes found.For\n#  debugging purposes only., default: False\n#showprocs False\n#\n# Show the raw SNMP processes data returned\n#  from the device. For debugging purposes\n#  only., default: False\n#showrawtables False\n#\n# Directory and filename to use as a template\n#  to store SNMP results from device.\n#captureFilePrefix \n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenprocess.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenprocess run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenjmx.conf": {
                "Content": "#\n# Configuration file for zenjmx\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenjmx.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Port for zenjmxjava process; default\n#  9988. Tries 5 consecutive ports if\n#  there is a conflict, default: 9988\n#zenjmxjavaport 9988\n#\n# Enable concurrent calls to a JMX server,\n#  default: False\n#concurrentJMXCalls False\n#\n# Number of devices to collect from at\n#  one time, default: 200\n#parallel 200\n#\n# Cycle time, in seconds, to run collection,\n#  default: 300\n#cycleInterval 300\n#\n# Number of ports to attempt when startingJava\n#  jmx client, default: 5\n#portRange 5\n#\n# Max heap, in MB, to use for java process,\n#  default: 512\n#javaheap 512\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenjmx.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Collect JMX data",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenjmx.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "cqdpfn8o0ylc0oazosad5ughl",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenjmx.log",
                "Type": "zenjmx"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenjmx",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "cqdpfn8o0ylc0oazosad5ughl"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenjmx",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "cqdpfn8o0ylc0oazosad5ughl"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenjmx",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "cqdpfn8o0ylc0oazosad5ughl"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenjmx",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "cqdpfn8o0ylc0oazosad5ughl"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenjmx",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "cqdpfn8o0ylc0oazosad5ughl"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenjmx",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenjmx",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenjmx",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "cqdpfn8o0ylc0oazosad5ughl"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenjmx internal metrics",
                    "ID": "zenjmx",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenjmx internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"cqdpfn8o0ylc0oazosad5ughl\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"cqdpfn8o0ylc0oazosad5ughl\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"cqdpfn8o0ylc0oazosad5ughl\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"cqdpfn8o0ylc0oazosad5ughl\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"cqdpfn8o0ylc0oazosad5ughl\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"cqdpfn8o0ylc0oazosad5ughl\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"cqdpfn8o0ylc0oazosad5ughl\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"cqdpfn8o0ylc0oazosad5ughl\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenjmx",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenjmx",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenjmx.conf": {
                "Content": "#\n# Configuration file for zenjmx\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenjmx.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Port for zenjmxjava process; default\n#  9988. Tries 5 consecutive ports if\n#  there is a conflict, default: 9988\n#zenjmxjavaport 9988\n#\n# Enable concurrent calls to a JMX server,\n#  default: False\n#concurrentJMXCalls False\n#\n# Number of devices to collect from at\n#  one time, default: 200\n#parallel 200\n#\n# Cycle time, in seconds, to run collection,\n#  default: 300\n#cycleInterval 300\n#\n# Number of ports to attempt when startingJava\n#  jmx client, default: 5\n#portRange 5\n#\n# Max heap, in MB, to use for java process,\n#  default: 512\n#javaheap 512\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenjmx.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenjmx run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "ZenPacks.zenoss.ZenJMX",
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenpop3.conf": {
                "Content": "#\n# Configuration file for zenpop3\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenpop3.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Use SSL when connecting to POP server,\n#  default: False\n#usessl False\n#\n# Leave messages on POP server, default: False\n#nodelete False\n#\n# POP server from which emails are to\n#  be read, default: pop.zenoss.com\n#pophost pop.zenoss.com\n#\n# POP port from which emails are to be\n#  read, default: 110\n#popport 110\n#\n# POP user, default: zenoss\n#popuser zenoss\n#\n# POP password, default: zenoss\n#poppass zenoss\n#\n# Frequency (in seconds) to poll the POP\n#  server, default: 60\n#cycletime 60\n#\n# Severity for events created, default: 2\n#eventseverity 2\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenpop3.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Collector daemon that converts email messages obtained from POP3 accounts into events",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 110,
                    "Protocol": "tcp"
                },
                "Application": "localhost_zenpop3",
                "ApplicationTemplate": "{{(parent .).Name}}_zenpop3",
                "Name": "zenpop3",
                "PortList": null,
                "PortNumber": 110,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenpop3.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "9wb13e9zd4w569djr23owkws1",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 1,
            "Max": 1,
            "Min": 0
        },
        "Instances": 1,
        "Launch": "manual",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenpop3.log",
                "Type": "zenpop3"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenpop3",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9wb13e9zd4w569djr23owkws1"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenpop3",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9wb13e9zd4w569djr23owkws1"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenpop3",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9wb13e9zd4w569djr23owkws1"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenpop3",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenpop3",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenpop3",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "9wb13e9zd4w569djr23owkws1"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenpop3 internal metrics",
                    "ID": "zenpop3",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenpop3 internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"9wb13e9zd4w569djr23owkws1\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"9wb13e9zd4w569djr23owkws1\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"9wb13e9zd4w569djr23owkws1\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"9wb13e9zd4w569djr23owkws1\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"9wb13e9zd4w569djr23owkws1\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"9wb13e9zd4w569djr23owkws1\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenpop3",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenpop3",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenpop3.conf": {
                "Content": "#\n# Configuration file for zenpop3\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenpop3.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Use SSL when connecting to POP server,\n#  default: False\n#usessl False\n#\n# Leave messages on POP server, default: False\n#nodelete False\n#\n# POP server from which emails are to\n#  be read, default: pop.zenoss.com\n#pophost pop.zenoss.com\n#\n# POP port from which emails are to be\n#  read, default: 110\n#popport 110\n#\n# POP user, default: zenoss\n#popuser zenoss\n#\n# POP password, default: zenoss\n#poppass zenoss\n#\n# Frequency (in seconds) to poll the POP\n#  server, default: 60\n#cycletime 60\n#\n# Severity for events created, default: 2\n#eventseverity 2\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenpop3.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenpop3 run -c --logfileonly --monitor {{(parent .).Name}} \"",
        "Tags": [
            "ZenPacks.zenoss.ZenPOP3",
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zentrap.conf": {
                "Content": "#\n# Configuration file for zentrap\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zentrap.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device\n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Listen for SNMP traps on this port rather\n#  than the default, default: 162\n#trapport 162\n#\n# Read from an existing connection  rather\n#  than opening a new port.\n#useFileDescriptor None\n#\n# Directory and filename to use as a template\n#   to store captured raw trap packets.\n#captureFilePrefix None\n#\n# Capture all packets., default: False\n#captureAll False\n#\n# Comma-separated list of IP addresses\n#  to capture.\n#captureIps\n#\n# Filename prefix containing captured\n#  packet data. Can specify more than\n#  once., default: []\n#replayFilePrefix []\n#\n# The name of the file used to filter traps. If no file specified\n# no traps are filtered. See zentrap.filter.conf for a description\n# of the filter formats.\n#\n#trapFilterFile zentrap.filter.conf\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zentrap.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zentrap.filter.conf": {
                "Content": "#\n# SNMP Trap Filter Definitions\n#\n# This file defines optional filters which zentrap applies to incoming traps.\n# The filters defined in this file are only applied if the 'trapFilterFile'\n# parameter in zentrap.conf specifies this file; e.g.\n#       trapFilterFile zentrap.filter.conf\n#\n# Each line defines a single filter definition to either include or exclude\n# a particular trap. Lines beginning with \"#\" and blank lines are ignored.\n# The order of the definitions does not matter, but duplicates are not allowed.\n# The filtering logic matches each incoming trap to the most specific filter\n# definition. It then either includes or excludes that trap based on the filter\n# definition.\n#\n# If no valid filters are found (for instance everything is commented\n# out), then no traps are filtered.\n#\n# zentrap will exit on the first syntax error - check the zentrap log for\n# details about the specific error.\n#\n# At a high level, the generic syntax for each filter definition is:\n#      ACTION SNMP_VERSION MATCHING_RULE\n# where:\n#      ACTION        is the filter action; must be one of \"include\" or \"exclude\"\n#      SNMP_VERSION  identifies the SNMP version; must be one of \"v1\" and \"v2\"\n#      MATCHING_RULE is the matching rule for trap (varies by SNMP version)\n#\n# Valid definitions for SNMP V1 traps have one of the following formats:\n#      include|exclude v1 TRAP_TYPE\n#      include|exclude v1 GLOBBED_OID\n#      include|exclude v1 OID *|SPECIFIC_TRAP\n# where:\n#     TRAP_TYPE       is a generic trap type in the range [0-5]\n#     GLOBBED_OID     is an OID ending with \".*\"\n#     OID             is a valid OID\n#     SPECIFIC_TRAP   is any specific trap type (any non-negative integer)\n# Note that the last two cases are used for enterprise-specific traps (i.e.\n# where the generic trap type is 6).\n#\n# Valid filter definitions for SNMP V2 traps have one of the following formats:\n#    include|exclude v2 OID\n#    include|exclude v2 GLOBBED_OID\n# where\n#    OID             is an valid OID\n#    GLOBBED_OID     is an OID ending with \".*\"\n#\n\n# Include all generic SNMP V1 Traps 0-5\ninclude v1 0\ninclude v1 1\ninclude v1 2\ninclude v1 3\ninclude v1 4\ninclude v1 5\n\n# Include all enterprise-specific SNMP V1 traps\ninclude v1 *\n\n# Include all SNMP V2 traps\ninclude v2 *\n",
                "Filename": "/opt/zenoss/etc/zentrap.filter.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Collects and parses SNMP traps, resolves OIDs into MIB names, and then forwards the traps to zenhub for additional processing",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 162,
                    "Protocol": "udp"
                },
                "Application": "localhost_snmp_trap",
                "ApplicationTemplate": "{{(parent .).Name}}_snmp_trap",
                "Name": "zentrap",
                "PortList": null,
                "PortNumber": 162,
                "PortTemplate": "",
                "Protocol": "udp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "listening": {
                "Interval": 10,
                "Script": "nmap -oG - -Pn -sU -p 162 127.0.0.1 | grep -q 'Ports: 162'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zentrap.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "50f2n6i8z6kgj6lb1gml4gm6r",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zentrap.log",
                "Type": "zentrap"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "cycleTime",
                            "legend": "Cycle Time",
                            "metric": "cycleTime",
                            "metricSource": "zentrap",
                            "name": "Cycle Time",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Daemon collection interval.",
                    "footer": false,
                    "format": "",
                    "id": "cycleTime",
                    "maxy": null,
                    "miny": null,
                    "name": "Cycle Time",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "50f2n6i8z6kgj6lb1gml4gm6r"
                        ]
                    },
                    "type": "line",
                    "units": "Time",
                    "yAxisLabel": "Cycle Time"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zentrap",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "50f2n6i8z6kgj6lb1gml4gm6r"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zentrap",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "50f2n6i8z6kgj6lb1gml4gm6r"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zentrap internal metrics",
                    "ID": "zentrap",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Daemon collection interval",
                            "ID": "cycleTime",
                            "Name": "Cycle Time",
                            "ResetValue": 0,
                            "Unit": "Time"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "",
                            "ID": "events",
                            "Name": "Events",
                            "ResetValue": 0,
                            "Unit": "Events"
                        }
                    ],
                    "Name": "zentrap internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}},{\"metric\":\"cycleTime\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}},{\"metric\":\"events\",\"tags\":{\"controlplane_service_id\":[\"50f2n6i8z6kgj6lb1gml4gm6r\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "zentrap",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zentrap.conf": {
                "Content": "#\n# Configuration file for zentrap\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zentrap.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device\n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Listen for SNMP traps on this port rather\n#  than the default, default: 162\n#trapport 162\n#\n# Read from an existing connection  rather\n#  than opening a new port.\n#useFileDescriptor None\n#\n# Directory and filename to use as a template\n#   to store captured raw trap packets.\n#captureFilePrefix None\n#\n# Capture all packets., default: False\n#captureAll False\n#\n# Comma-separated list of IP addresses\n#  to capture.\n#captureIps\n#\n# Filename prefix containing captured\n#  packet data. Can specify more than\n#  once., default: []\n#replayFilePrefix []\n#\n# The name of the file used to filter traps. If no file specified\n# no traps are filtered. See zentrap.filter.conf for a description\n# of the filter formats.\n#\n#trapFilterFile zentrap.filter.conf\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zentrap.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zentrap.filter.conf": {
                "Content": "#\n# SNMP Trap Filter Definitions\n#\n# This file defines optional filters which zentrap applies to incoming traps.\n# The filters defined in this file are only applied if the 'trapFilterFile'\n# parameter in zentrap.conf specifies this file; e.g.\n#       trapFilterFile zentrap.filter.conf\n#\n# Each line defines a single filter definition to either include or exclude\n# a particular trap. Lines beginning with \"#\" and blank lines are ignored.\n# The order of the definitions does not matter, but duplicates are not allowed.\n# The filtering logic matches each incoming trap to the most specific filter\n# definition. It then either includes or excludes that trap based on the filter\n# definition.\n#\n# If no valid filters are found (for instance everything is commented\n# out), then no traps are filtered.\n#\n# zentrap will exit on the first syntax error - check the zentrap log for\n# details about the specific error.\n#\n# At a high level, the generic syntax for each filter definition is:\n#      ACTION SNMP_VERSION MATCHING_RULE\n# where:\n#      ACTION        is the filter action; must be one of \"include\" or \"exclude\"\n#      SNMP_VERSION  identifies the SNMP version; must be one of \"v1\" and \"v2\"\n#      MATCHING_RULE is the matching rule for trap (varies by SNMP version)\n#\n# Valid definitions for SNMP V1 traps have one of the following formats:\n#      include|exclude v1 TRAP_TYPE\n#      include|exclude v1 GLOBBED_OID\n#      include|exclude v1 OID *|SPECIFIC_TRAP\n# where:\n#     TRAP_TYPE       is a generic trap type in the range [0-5]\n#     GLOBBED_OID     is an OID ending with \".*\"\n#     OID             is a valid OID\n#     SPECIFIC_TRAP   is any specific trap type (any non-negative integer)\n# Note that the last two cases are used for enterprise-specific traps (i.e.\n# where the generic trap type is 6).\n#\n# Valid filter definitions for SNMP V2 traps have one of the following formats:\n#    include|exclude v2 OID\n#    include|exclude v2 GLOBBED_OID\n# where\n#    OID             is an valid OID\n#    GLOBBED_OID     is an OID ending with \".*\"\n#\n\n# Include all generic SNMP V1 Traps 0-5\ninclude v1 0\ninclude v1 1\ninclude v1 2\ninclude v1 3\ninclude v1 4\ninclude v1 5\n\n# Include all enterprise-specific SNMP V1 traps\ninclude v1 *\n\n# Include all SNMP V2 traps\ninclude v2 *\n",
                "Filename": "/opt/zenoss/etc/zentrap.filter.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zentrap run -c --logfileonly --monitor {{(parent .).Name}} \"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenpython.conf": {
                "Content": "#\n# Configuration file for zenpython\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenpython.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenpython.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Adds a \"Python\" data source type for asynchronous collection using a custom Python module",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq",
                "ApplicationTemplate": "rabbitmq",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 5672,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "central_query_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/query_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenpython.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "gyqzsra5wo63rsy3j60mrccl",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenpython.log",
                "Type": "zenpython"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenpython",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "gyqzsra5wo63rsy3j60mrccl"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenpython",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "gyqzsra5wo63rsy3j60mrccl"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenpython",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "gyqzsra5wo63rsy3j60mrccl"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenpython",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "gyqzsra5wo63rsy3j60mrccl"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenpython",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "gyqzsra5wo63rsy3j60mrccl"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenpython",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenpython",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenpython",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "gyqzsra5wo63rsy3j60mrccl"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenpython internal metrics",
                    "ID": "zenpython",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenpython internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"gyqzsra5wo63rsy3j60mrccl\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"gyqzsra5wo63rsy3j60mrccl\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"gyqzsra5wo63rsy3j60mrccl\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"gyqzsra5wo63rsy3j60mrccl\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"gyqzsra5wo63rsy3j60mrccl\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"gyqzsra5wo63rsy3j60mrccl\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"gyqzsra5wo63rsy3j60mrccl\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"gyqzsra5wo63rsy3j60mrccl\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenpython",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenpython",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenpython.conf": {
                "Content": "#\n# Configuration file for zenpython\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenpython.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenpython.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenpython run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "ZenPacks.zenoss.PythonCollector",
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenpropertymonitor.conf": {
                "Content": "#\n# Configuration file for zenpropertymonitor\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenpropertymonitor.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Number of properties to include in each\n#  zenhub query (default=256), default: 256\n#querychunksize 256\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenpropertymonitor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Monitor a numeric property",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenpropertymonitor.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "5ytyaisi86yvhatelp3z7bw10",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenpropertymonitor.log",
                "Type": "zenpropertymonitor"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenpropertymonitor",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5ytyaisi86yvhatelp3z7bw10"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenpropertymonitor",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5ytyaisi86yvhatelp3z7bw10"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenpropertymonitor",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5ytyaisi86yvhatelp3z7bw10"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenpropertymonitor",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5ytyaisi86yvhatelp3z7bw10"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenpropertymonitor",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5ytyaisi86yvhatelp3z7bw10"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenpropertymonitor",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenpropertymonitor",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenpropertymonitor",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5ytyaisi86yvhatelp3z7bw10"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenpropertymonitor internal metrics",
                    "ID": "zenpropertymonitor",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenpropertymonitor internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"5ytyaisi86yvhatelp3z7bw10\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"5ytyaisi86yvhatelp3z7bw10\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"5ytyaisi86yvhatelp3z7bw10\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"5ytyaisi86yvhatelp3z7bw10\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"5ytyaisi86yvhatelp3z7bw10\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"5ytyaisi86yvhatelp3z7bw10\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"5ytyaisi86yvhatelp3z7bw10\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"5ytyaisi86yvhatelp3z7bw10\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenpropertymonitor",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenpropertymonitor",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenpropertymonitor.conf": {
                "Content": "#\n# Configuration file for zenpropertymonitor\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenpropertymonitor.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Number of properties to include in each\n#  zenhub query (default=256), default: 256\n#querychunksize 256\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenpropertymonitor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "256M",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenpropertymonitor run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "ZenPacks.zenoss.PropertyMonitor",
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zensyslog.conf": {
                "Content": "#\n# Configuration file for zensyslog\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zensyslog.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Try to parse the hostname part of a\n#  syslog HEADER, default: False\n#parsehost False\n#\n# Print statistics to log every 2 secs,\n#  default: False\n#stats False\n#\n# Log the original message, default: False\n#logorig False\n#\n# Human-readable (/var/log/messages) or\n#  raw (wire), default: human\n#logformat human\n#\n# Minimum priority message that zensyslog\n#  will accept, default: 6\n#minpriority 6\n#\n# Port number to use for syslog events,\n#  default: 514\n#syslogport 514\n#\n# IP address to listen on. Default is\n#  %default, default: 0.0.0.0\n#listenip 0.0.0.0\n#\n# Read from an existing connection rather\n#  opening a new port.\n#useFileDescriptor None\n#\n# Don't convert the remote device's IP\n#  address to a hostname., default: False\n#noreverseLookup False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zensyslog.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Collects and classifies syslog events",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 514,
                    "Protocol": "udp"
                },
                "Application": "localhost_syslog",
                "ApplicationTemplate": "{{(parent .).Name}}_syslog",
                "Name": "syslog",
                "PortList": null,
                "PortNumber": 514,
                "PortTemplate": "",
                "Protocol": "udp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "listening": {
                "Interval": 10,
                "Script": "nmap -oG - -Pn -sU -p 514 127.0.0.1 | grep -q 'Ports: 514'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zensyslog.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "1p2vjje7xbcq6rnvx96z1c1nq",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zensyslog.log",
                "Type": "zensyslog"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zensyslog",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1p2vjje7xbcq6rnvx96z1c1nq"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zensyslog",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1p2vjje7xbcq6rnvx96z1c1nq"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "events",
                            "legend": "Queued",
                            "metric": "events",
                            "metricSource": "zensyslog",
                            "name": "Events",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Events",
                            "metric": "eventCount",
                            "metricSource": "zensyslog",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Events",
                    "footer": false,
                    "format": "",
                    "id": "events",
                    "maxy": null,
                    "miny": null,
                    "name": "Events",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1p2vjje7xbcq6rnvx96z1c1nq"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Events"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zensyslog",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1p2vjje7xbcq6rnvx96z1c1nq"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zensyslog",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1p2vjje7xbcq6rnvx96z1c1nq"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zensyslog",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zensyslog",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zensyslog",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1p2vjje7xbcq6rnvx96z1c1nq"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zensyslog internal metrics",
                    "ID": "zensyslog",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "",
                            "ID": "events",
                            "Name": "Events",
                            "ResetValue": 0,
                            "Unit": "Events"
                        }
                    ],
                    "Name": "zensyslog internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"1p2vjje7xbcq6rnvx96z1c1nq\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"1p2vjje7xbcq6rnvx96z1c1nq\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"1p2vjje7xbcq6rnvx96z1c1nq\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"1p2vjje7xbcq6rnvx96z1c1nq\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"1p2vjje7xbcq6rnvx96z1c1nq\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"1p2vjje7xbcq6rnvx96z1c1nq\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"1p2vjje7xbcq6rnvx96z1c1nq\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"1p2vjje7xbcq6rnvx96z1c1nq\"]}},{\"metric\":\"events\",\"tags\":{\"controlplane_service_id\":[\"1p2vjje7xbcq6rnvx96z1c1nq\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zensyslog",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zensyslog",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zensyslog.conf": {
                "Content": "#\n# Configuration file for zensyslog\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zensyslog.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Try to parse the hostname part of a\n#  syslog HEADER, default: False\n#parsehost False\n#\n# Print statistics to log every 2 secs,\n#  default: False\n#stats False\n#\n# Log the original message, default: False\n#logorig False\n#\n# Human-readable (/var/log/messages) or\n#  raw (wire), default: human\n#logformat human\n#\n# Minimum priority message that zensyslog\n#  will accept, default: 6\n#minpriority 6\n#\n# Port number to use for syslog events,\n#  default: 514\n#syslogport 514\n#\n# IP address to listen on. Default is\n#  %default, default: 0.0.0.0\n#listenip 0.0.0.0\n#\n# Read from an existing connection rather\n#  opening a new port.\n#useFileDescriptor None\n#\n# Don't convert the remote device's IP\n#  address to a hostname., default: False\n#noreverseLookup False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zensyslog.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zensyslog run -c --logfileonly --monitor {{(parent .).Name}} \"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenwebtx.conf": {
                "Content": "#\n# Configuration file for zenwebtx\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenwebtx.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Show the raw RRD values. For debugging\n#  purposes only., default: False\n#showrawresults False\n#\n# When a device fails to respond, increase\n#  the time to check on the device until\n#  this limit., default: 20\n#maxbackoffminutes 20\n#\n# Global timeout for all socket operations\n#sockettimeout None\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenwebtx.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Checks the availability and performance of Web sites with synthetic transactions",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenwebtx.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "5yy64yiifdwh8fxc3a099imgy",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenwebtx.log",
                "Type": "zenwebtx"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenwebtx",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5yy64yiifdwh8fxc3a099imgy"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenwebtx",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5yy64yiifdwh8fxc3a099imgy"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenwebtx",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5yy64yiifdwh8fxc3a099imgy"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenwebtx",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5yy64yiifdwh8fxc3a099imgy"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenwebtx",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5yy64yiifdwh8fxc3a099imgy"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenwebtx",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenwebtx",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenwebtx",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "5yy64yiifdwh8fxc3a099imgy"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenwebtx internal metrics",
                    "ID": "zenwebtx",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenwebtx internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"5yy64yiifdwh8fxc3a099imgy\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"5yy64yiifdwh8fxc3a099imgy\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"5yy64yiifdwh8fxc3a099imgy\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"5yy64yiifdwh8fxc3a099imgy\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"5yy64yiifdwh8fxc3a099imgy\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"5yy64yiifdwh8fxc3a099imgy\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"5yy64yiifdwh8fxc3a099imgy\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"5yy64yiifdwh8fxc3a099imgy\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenwebtx",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenwebtx",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenwebtx.conf": {
                "Content": "#\n# Configuration file for zenwebtx\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenwebtx.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Show the raw RRD values. For debugging\n#  purposes only., default: False\n#showrawresults False\n#\n# When a device fails to respond, increase\n#  the time to check on the device until\n#  this limit., default: 20\n#maxbackoffminutes 20\n#\n# Global timeout for all socket operations\n#sockettimeout None\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenwebtx.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenwebtx run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "ZenPacks.zenoss.ZenWebTx",
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenmodeler.conf": {
                "Content": "#\n# Configuration file for zenmodeler\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenmodeler.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Don't fork threads for processing, default:\n#  False\n#debug False\n#\n# Do not execute WMI plugins, default: True\n#nowmi True\n#\n# Number of devices to collect from in\n#  parallel, default: 1\n#parallel 1\nparallel {{ getContext . \"parallel\" }}\n#\n# Run collection every x minutes\n#cycletime None\ncycletime {{ getContext . \"cycletime\" }}\n#\n# Modeler plugins to ignore. Takes a regular\n#  expression\n#ignore \n#\n# Modeler plugins to use. Takes a regular\n#  expression\n#collect \n#\n# Start class path for collection\n#  ie /NetworkDevices\n#path None\n#\n# Fully qualified device name ie\n#  www.confmon.com\n#device None\n#\n# Start string in cron(8) format\n#startat None\nstartat {{ getContext . \"startat\" }}\n#\n# Do not collect from devices whose collect\n#  date is within this many minutes, default: 0\n#collage 0\n#\n# Number of times to try to write if a\n#  read conflict is found, default: 2\n#writetries 2\n#\n# Force collection of config data (deprecated),\n#  default: True\n#force True\n#\n# Time to wait for connection failures\n#  when port scanning, default: 5\n#portscantimeout 5\n#\n# Start daemon now, do not sleep before\n#  starting, default: False\n#now False\n#\n# If an snmp connection fails try and\n#  rediscover it's connection info, default:\n#  False\n#communities False\n#\n# Don't model if the device is ping or\n#  snmp down, default: False\n#checkstatus False\n#\n# Save raw results for replay purposes\n#  in /tmp, default: False\n#save_raw_results False\n#\n# Save modeler plugin outputs for replay\n#  purposes in /tmp, default: False\n#save_processed_results False\n#\n# Login username, default: zenoss\n#user zenoss\n#\n# Login password\n#password \n#\n# Number of times to attempt to login,\n#  default: 1\n#loginTries 1\n#\n# Timeout period (secs) to find login\n#  expect statments, default: 10\n#loginTimeout 10\n#\n# Timeout period (secs) after issuing\n#  a command, default: 10\n#commandTimeout 10\n#\n# Path to use when looking for SSH keys,\n#  default: ~/.ssh/id_dsa\n#keyPath ~/.ssh/id_dsa\n#\n# Allowable number of concurrent SSH sessions,\n#  default: 10\n#concurrentSessions 10\n#\n# Path to use when looking for commands,\n#  default: []\n#searchPath []\n#\n# How to check if a command is available\n#  or not, default: test -f %s\n#existenceTest test -f %s\n#\n# Timeout when discovering prompt, default: 10\n#promptTimeout 10\n#\n# Python regular expression that will\n#  find the login prompt, default: ogin:.$\n#loginRegex ogin:.$\n#\n# Python regex that will find the password\n#  prompt, default: assword:\n#passwordRegex assword:\n#\n# Enter 'enable' mode on a Cisco device,\n#  default: False\n#enable False\n#\n# Python regex that will find the enable\n#  prompt, default: assword:\n#enableRegex assword:\n#\n# Enable password\n#enablePassword \n#\n# Enter 'send terminal length 0' on a\n#  Cisco device, default: False\n#termlen False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#\n",
                "Filename": "/opt/zenoss/etc/zenmodeler.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": {
            "cycletime": "1440",
            "parallel": "10",
            "startat": "0 0 * * *"
        },
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Configuration collection and configuration daemon, used for high-performance, automated model population",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenmodeler.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "34o55uqoiafvgrmqjntumkb71",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenmodeler.log",
                "Type": "zenmodeler"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [
                {
                    "Description": "zenmodeler internal metrics",
                    "ID": "zenmodeler",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Daemon collection interval",
                            "ID": "cycleTime",
                            "Name": "Cycle Time",
                            "ResetValue": 0,
                            "Unit": "Time"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "Number of devices since daemon startup.",
                            "ID": "modeledDevices",
                            "Name": "Modeled Devices",
                            "ResetValue": 0,
                            "Unit": "Devices"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices currently modeled.",
                            "ID": "modeledDevicesCount",
                            "Name": "Modeled Devices Count",
                            "ResetValue": 0,
                            "Unit": "Devices"
                        }
                    ],
                    "Name": "zenmodeler internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"cycleTime\",\"tags\":{\"controlplane_service_id\":[\"34o55uqoiafvgrmqjntumkb71\"]}},{\"metric\":\"modeledDevices\",\"tags\":{\"controlplane_service_id\":[\"34o55uqoiafvgrmqjntumkb71\"]}},{\"metric\":\"modeledDevicesCount\",\"tags\":{\"controlplane_service_id\":[\"34o55uqoiafvgrmqjntumkb71\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "zenmodeler",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenmodeler.conf": {
                "Content": "#\n# Configuration file for zenmodeler\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenmodeler.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Don't fork threads for processing, default:\n#  False\n#debug False\n#\n# Do not execute WMI plugins, default: True\n#nowmi True\n#\n# Number of devices to collect from in\n#  parallel, default: 1\n#parallel 1\nparallel {{ getContext . \"parallel\" }}\n#\n# Run collection every x minutes\n#cycletime None\ncycletime {{ getContext . \"cycletime\" }}\n#\n# Modeler plugins to ignore. Takes a regular\n#  expression\n#ignore \n#\n# Modeler plugins to use. Takes a regular\n#  expression\n#collect \n#\n# Start class path for collection\n#  ie /NetworkDevices\n#path None\n#\n# Fully qualified device name ie\n#  www.confmon.com\n#device None\n#\n# Start string in cron(8) format\n#startat None\nstartat {{ getContext . \"startat\" }}\n#\n# Do not collect from devices whose collect\n#  date is within this many minutes, default: 0\n#collage 0\n#\n# Number of times to try to write if a\n#  read conflict is found, default: 2\n#writetries 2\n#\n# Force collection of config data (deprecated),\n#  default: True\n#force True\n#\n# Time to wait for connection failures\n#  when port scanning, default: 5\n#portscantimeout 5\n#\n# Start daemon now, do not sleep before\n#  starting, default: False\n#now False\n#\n# If an snmp connection fails try and\n#  rediscover it's connection info, default:\n#  False\n#communities False\n#\n# Don't model if the device is ping or\n#  snmp down, default: False\n#checkstatus False\n#\n# Save raw results for replay purposes\n#  in /tmp, default: False\n#save_raw_results False\n#\n# Save modeler plugin outputs for replay\n#  purposes in /tmp, default: False\n#save_processed_results False\n#\n# Login username, default: zenoss\n#user zenoss\n#\n# Login password\n#password \n#\n# Number of times to attempt to login,\n#  default: 1\n#loginTries 1\n#\n# Timeout period (secs) to find login\n#  expect statments, default: 10\n#loginTimeout 10\n#\n# Timeout period (secs) after issuing\n#  a command, default: 10\n#commandTimeout 10\n#\n# Path to use when looking for SSH keys,\n#  default: ~/.ssh/id_dsa\n#keyPath ~/.ssh/id_dsa\n#\n# Allowable number of concurrent SSH sessions,\n#  default: 10\n#concurrentSessions 10\n#\n# Path to use when looking for commands,\n#  default: []\n#searchPath []\n#\n# How to check if a command is available\n#  or not, default: test -f %s\n#existenceTest test -f %s\n#\n# Timeout when discovering prompt, default: 10\n#promptTimeout 10\n#\n# Python regular expression that will\n#  find the login prompt, default: ogin:.$\n#loginRegex ogin:.$\n#\n# Python regex that will find the password\n#  prompt, default: assword:\n#passwordRegex assword:\n#\n# Enter 'enable' mode on a Cisco device,\n#  default: False\n#enable False\n#\n# Python regex that will find the enable\n#  prompt, default: assword:\n#enableRegex assword:\n#\n# Enable password\n#enablePassword \n#\n# Enter 'send terminal length 0' on a\n#  Cisco device, default: False\n#termlen False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#\n",
                "Filename": "/opt/zenoss/etc/zenmodeler.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenmodeler run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenping.conf": {
                "Content": "#\n# Configuration file for zenping\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenping.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Disable the correlator., default: True\n#disable-correlator True\n#\n# Traceroute every N ping intervals; default\n#  is 5, traceroute every time a ping\n#  is performed., default: 5\n#traceroute-interval 5\n#\n# Length of datapacket for zenping to\n#  use (default: %default), default: 0\n#data-length 0\n#\n# Delay down events until more than this\n#  many ping downs are collected in a\n#  row. Default is 0 (no delay)., default: 0\n#delay-count 0\n#\n# Use ip's connected to a device for ping\n#  correlation (default: %default), default:\n#  disabled\n#connected-ips disabled\n#\n# ping backend to use (nmap, ping) default:\n#  %default, default: nmap\n#ping-backend nmap\n#\n# Correlationbackend to use (simple, distributed)\n#  default: %default, default: distributed\n#correlation-backend distributed\n#\n# Suppress ping downs using interfaces\n#  on a device whose IPs may not be monitored,\n#  default: False\n#connected-ip-suppress False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenping.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Performs high-performance, asynchronous testing of ICMP status",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenping.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "1h4wgcqqftecqmbd7lwrrt1p7",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenping.log",
                "Type": "zenping"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenping",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1h4wgcqqftecqmbd7lwrrt1p7"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenping",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1h4wgcqqftecqmbd7lwrrt1p7"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenping",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1h4wgcqqftecqmbd7lwrrt1p7"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenping",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1h4wgcqqftecqmbd7lwrrt1p7"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenping",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1h4wgcqqftecqmbd7lwrrt1p7"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenping",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenping",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenping",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1h4wgcqqftecqmbd7lwrrt1p7"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenping internal metrics",
                    "ID": "zenping",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenping internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"1h4wgcqqftecqmbd7lwrrt1p7\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"1h4wgcqqftecqmbd7lwrrt1p7\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"1h4wgcqqftecqmbd7lwrrt1p7\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"1h4wgcqqftecqmbd7lwrrt1p7\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"1h4wgcqqftecqmbd7lwrrt1p7\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"1h4wgcqqftecqmbd7lwrrt1p7\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"1h4wgcqqftecqmbd7lwrrt1p7\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"1h4wgcqqftecqmbd7lwrrt1p7\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenping",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenping",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenping.conf": {
                "Content": "#\n# Configuration file for zenping\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenping.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Disable the correlator., default: True\n#disable-correlator True\n#\n# Traceroute every N ping intervals; default\n#  is 5, traceroute every time a ping\n#  is performed., default: 5\n#traceroute-interval 5\n#\n# Length of datapacket for zenping to\n#  use (default: %default), default: 0\n#data-length 0\n#\n# Delay down events until more than this\n#  many ping downs are collected in a\n#  row. Default is 0 (no delay)., default: 0\n#delay-count 0\n#\n# Use ip's connected to a device for ping\n#  correlation (default: %default), default:\n#  disabled\n#connected-ips disabled\n#\n# ping backend to use (nmap, ping) default:\n#  %default, default: nmap\n#ping-backend nmap\n#\n# Correlationbackend to use (simple, distributed)\n#  default: %default, default: distributed\n#correlation-backend distributed\n#\n# Suppress ping downs using interfaces\n#  on a device whose IPs may not be monitored,\n#  default: False\n#connected-ip-suppress False\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenping.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenping run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": [
            "restartalloninstancechanged"
        ],
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenstatus.conf": {
                "Content": "#\n# Configuration file for zenstatus\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenstatus.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenstatus.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Checks the status of Zenoss daemons on localhost",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_redis",
                "ApplicationTemplate": "{{(parent .).Name}}_redis",
                "Name": "CollectorRedis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenstatus.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "2e8qwn5r7jge3ozfesu0pfpez",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zenstatus.log",
                "Type": "zenstatus"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "dataPoints",
                            "legend": "Data Points",
                            "metric": "dataPoints",
                            "metricSource": "zenstatus",
                            "name": "Data Points",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints collected.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2e8qwn5r7jge3ozfesu0pfpez"
                        ]
                    },
                    "type": "line",
                    "units": "Points",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "devices",
                            "legend": "Devices",
                            "metric": "devices",
                            "metricSource": "zenstatus",
                            "name": "Devices",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of devices.",
                    "footer": false,
                    "format": "",
                    "id": "devices",
                    "maxy": null,
                    "miny": null,
                    "name": "Devices",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2e8qwn5r7jge3ozfesu0pfpez"
                        ]
                    },
                    "type": "line",
                    "units": "Count",
                    "yAxisLabel": "Devices"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventCount",
                            "legend": "Event Count",
                            "metric": "eventCount",
                            "metricSource": "zenstatus",
                            "name": "Event Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Total number of events.",
                    "footer": false,
                    "format": "",
                    "id": "eventCount",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Count",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2e8qwn5r7jge3ozfesu0pfpez"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Count"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "eventQueueLength",
                            "legend": "Event Queue Length",
                            "metric": "eventQueueLength",
                            "metricSource": "zenstatus",
                            "name": "Event Queue Length",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "The number of events pending to be flushed from a daemon's memory queue.",
                    "footer": false,
                    "format": "",
                    "id": "eventQueueLength",
                    "maxy": null,
                    "miny": null,
                    "name": "Event Queue Length",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2e8qwn5r7jge3ozfesu0pfpez"
                        ]
                    },
                    "type": "line",
                    "units": "Events",
                    "yAxisLabel": "Event Queue Length"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "missedRuns",
                            "legend": "Missed Runs",
                            "metric": "missedRuns",
                            "metricSource": "zenstatus",
                            "name": "Missed Runs",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of missed runs of tasks running on daemon.",
                    "footer": false,
                    "format": "",
                    "id": "missedRuns",
                    "maxy": null,
                    "miny": null,
                    "name": "Missed Runs",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2e8qwn5r7jge3ozfesu0pfpez"
                        ]
                    },
                    "type": "line",
                    "units": "Runs",
                    "yAxisLabel": "Missed Runs"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "queuedTasks",
                            "legend": "Queued Tasks",
                            "metric": "queuedTasks",
                            "metricSource": "zenstatus",
                            "name": "Queued Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "runningTasks",
                            "legend": "Running Tasks",
                            "metric": "runningTasks",
                            "metricSource": "zenstatus",
                            "name": "Running Tasks",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "%d",
                            "id": "taskCount",
                            "legend": "Task Count",
                            "metric": "taskCount",
                            "metricSource": "zenstatus",
                            "name": "Task Count",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queued, running, and total tasks.",
                    "footer": false,
                    "format": "",
                    "id": "tasks",
                    "maxy": null,
                    "miny": null,
                    "name": "Tasks",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2e8qwn5r7jge3ozfesu0pfpez"
                        ]
                    },
                    "type": "line",
                    "units": "Tasks",
                    "yAxisLabel": ""
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "zenstatus internal metrics",
                    "ID": "zenstatus",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of datapoints collected.",
                            "ID": "dataPoints",
                            "Name": "Datapoints",
                            "ResetValue": 0,
                            "Unit": "Points"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of devices.",
                            "ID": "devices",
                            "Name": "Devices",
                            "ResetValue": 0,
                            "Unit": "Count"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of events.",
                            "ID": "eventCount",
                            "Name": "Event Count",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "The number of events pending to be flushed from a daemon's memory queue.",
                            "ID": "eventQueueLength",
                            "Name": "Event Queue Length",
                            "ResetValue": 0,
                            "Unit": "Events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of missed runs of tasks running on daemon.",
                            "ID": "missedRuns",
                            "Name": "Missed Runs",
                            "ResetValue": 0,
                            "Unit": "Runs"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of tasks scheduled to be run, but are not running yet.",
                            "ID": "queuedTasks",
                            "Name": "Queued Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of currently running tasks.",
                            "ID": "runningTasks",
                            "Name": "Running Tasks",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Total number of tasks.",
                            "ID": "taskCount",
                            "Name": "Task Count",
                            "ResetValue": 0,
                            "Unit": "Tasks"
                        }
                    ],
                    "Name": "zenstatus internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"dataPoints\",\"tags\":{\"controlplane_service_id\":[\"2e8qwn5r7jge3ozfesu0pfpez\"]}},{\"metric\":\"devices\",\"tags\":{\"controlplane_service_id\":[\"2e8qwn5r7jge3ozfesu0pfpez\"]}},{\"metric\":\"eventCount\",\"tags\":{\"controlplane_service_id\":[\"2e8qwn5r7jge3ozfesu0pfpez\"]}},{\"metric\":\"eventQueueLength\",\"tags\":{\"controlplane_service_id\":[\"2e8qwn5r7jge3ozfesu0pfpez\"]}},{\"metric\":\"missedRuns\",\"tags\":{\"controlplane_service_id\":[\"2e8qwn5r7jge3ozfesu0pfpez\"]}},{\"metric\":\"queuedTasks\",\"tags\":{\"controlplane_service_id\":[\"2e8qwn5r7jge3ozfesu0pfpez\"]}},{\"metric\":\"runningTasks\",\"tags\":{\"controlplane_service_id\":[\"2e8qwn5r7jge3ozfesu0pfpez\"]}},{\"metric\":\"taskCount\",\"tags\":{\"controlplane_service_id\":[\"2e8qwn5r7jge3ozfesu0pfpez\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": [
                {
                    "AppliedTo": 0,
                    "DataPoints": [
                        "missedRuns"
                    ],
                    "Description": "High number of missed runs",
                    "EventTags": {
                        "EventClass": "/App/Zenoss",
                        "Explanation": "This service is missing runs",
                        "Resolution": "Add more collectors",
                        "Severity": 3
                    },
                    "ID": "missedRuns.high",
                    "MetricSource": "zenstatus",
                    "Name": "Missed Runs High",
                    "Threshold": {
                        "Max": "5",
                        "Min": ""
                    },
                    "Type": "MinMax"
                }
            ]
        },
        "Name": "zenstatus",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenstatus.conf": {
                "Content": "#\n# Configuration file for zenstatus\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Host of zenhub daemon. Default is localhost.,\n#  default: localhost\n#hubhost localhost\n#\n# Port zenhub listens on.Default is 8789.,\n#  default: 8789\n#hubport 8789\n#\n# Username for zenhub login. Default is\n#  admin., default: admin\n#hubusername admin\n#\n# Password for zenhub login. Default is\n#  zenoss., default: zenoss\n#hubpassword zenoss\n#\n# Name of monitor instance to use for\n#  configuration.  Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# Initial time to wait for a ZenHub connection,\n#  default: 30\n#initialHubTimeout 30\n#\n# Send clear events even when the most\n#  recent event was also a clear event.,\n#  default: False\n#allowduplicateclears False\n#\n# Send a clear event every [DUPLICATECLEARINTEVAL]\n#  events., default: 0\n#duplicateclearinterval 0\n#\n# Seconds between attempts to flush events\n#  to ZenHub., default: 5.0\n#eventflushseconds 5.0\n#\n# Number of events to send to ZenHubat\n#  one time, default: 50\n#eventflushchunksize 50\n#\n# Maximum number of events to queue, default:\n#  5000\n#maxqueuelen 5000\n#\n# The size, in percent, of the event queue\n#  when event pushback starts, default: 0.75\n#queuehighwatermark 0.75\n#\n# How often to ping zenhub, default: 30\n#zenhubpinginterval 30\n#\n# Disable event de-duplication, default: True\n#disable-event-deduplication True\n#\n# redis connection string: redis://[hostname]:[port]/[db],\n#  default: %default, default:\n#  redis://localhost:6379/0\n#redis-url redis://localhost:6379/0\n#\n# Number of metrics to buffer if redis\n#  goes down, default: 65536\n#metricBufferSize 65536\n#\n# redis channel to which metrics are published,\n#  default: metrics\n#metricsChannel metrics\n#\n# Max Number of metrics to allow in redis,\n#  default: 864000000\n#maxOutstandingMetrics 864000000\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenstatus.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Specify a device ID to monitor\n#device \n#\n# Max number of tasks to run at once,\n#  default %default, default: 500\n#maxparallel 500\n#\n# How often to logs statistics of current\n#  tasks, value in seconds; very verbose,\n#  default: 0\n#logTaskStats 0\n#\n# How often to write internal statistics\n#  value in seconds, default: 60\n#writeStatistics 60\n#\n# Max number of device configurations\n#  to load at once, default %default (0\n#  == all devices), default: 25\n#configsipsize 25\n#\n# Delay in seconds between device configurations\n#  loading, default %default, default: 1\n#configsipdelay 1\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# Disable ping perspective, default: True\n#disable-ping-perspective True\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#",
                "Filename": "/opt/zenoss/etc/zenstatus.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenstatus run -c --logfileonly --workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID --monitor {{(parent .).Name}} \"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zminion/supervisord.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[include]\nfiles = zminion_supervisor.conf\n",
                "Filename": "/opt/zenoss/etc/zminion/supervisord.conf",
                "Owner": "",
                "Permissions": ""
            },
            "/opt/zenoss/etc/zminion/zminion_supervisor.conf": {
                "Content": "[program:zminion]\ncommand=/opt/zenoss/bin/zminion --minion-name zminion_{{(parent .).Name}} serve\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/opt/zenoss/etc/zminion/zminion_supervisor.conf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Performs distributed bash executions",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent (parent .)).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "2qrt5p0txytc2upyor4e1ju06",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "glog"
                ],
                "IsAudit": false,
                "LogTags": [
                    {
                        "Name": "monitor",
                        "Value": "{{(parent .).Name}}"
                    }
                ],
                "Path": "/opt/zenoss/log/zminion.log",
                "Type": "zminion"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zminion",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zminion/supervisord.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[include]\nfiles = zminion_supervisor.conf\n",
                "Filename": "/opt/zenoss/etc/zminion/supervisord.conf",
                "Owner": "",
                "Permissions": ""
            },
            "/opt/zenoss/etc/zminion/zminion_supervisor.conf": {
                "Content": "[program:zminion]\ncommand=/opt/zenoss/bin/zminion --minion-name zminion_{{(parent .).Name}} serve\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/opt/zenoss/etc/zminion/zminion_supervisor.conf",
                "Owner": "",
                "Permissions": ""
            }
        },
        "PIDFile": "",
        "ParentServiceID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "256M",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/bin/supervisord -n -c /opt/zenoss/etc/zminion/supervisord.conf\"",
        "Tags": [
            "daemon",
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Localhost collector",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "3ibzdvmqxfo7q4jdeq9l3rfd9",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "localhost",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "a8xypex0h8p4p2ctfse21g20b",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "",
        "Tags": [
            "collector"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenhub.conf": {
                "Content": "#\n# Configuration file for zenhub\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenhub.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Port to use for XML-based Remote Procedure\n#  Calls (RPC), default: 8081\n#xmlrpcport 8081\n#\n# Port to use for Twisted's pb service,\n#  default: 8789\n#pbport 8789\n#\n# File where passwords are stored, default:\n#  /opt/zenoss/etc/hubpasswd\n#passwd /opt/zenoss/etc/hubpasswd\n#\n# Name of the distributed monitor this\n#  hub runs on, default: localhost\n#monitor localhost\n#\n# Number of worker instances to reserve\n#  for handling events, default: 1\n#workers-reserved-for-events 1\n#\n# Interval at which to poll invalidations\n#  (default: %default), default: 30\n#invalidation-poll-interval 30\n#\n# URL for posting internal metrics (default:\n#  %default), default:\n#  http://localhost:8080/api/metrics/store\n#metrics-store-url http://localhost:8080/api/metrics/store\n#\n# Username to use when publishing to metric\n#  consumer. Default is %default\n#zauth-username None\n#\n# Password to use when publishing to metric\n#  consumer. Default is %default\n#zauth-password None\n#\n# Number of workers dedicated to processing\n#  invalidations, default: 1\n#invalidationworkers 1\ninvalidationworkers {{ getContext . \"invalidationworkers\" }}\n#\n# The relative process priority of invalidation\n#  workers (%default), default: 10\n#invalidationworker-priority 10\n#\n# Number of invalidations each worker\n#  will deal with at a time, default: 100\n#invalidationchunksize 100\n#\n# Number of invalidations to process before\n#  shutting down, default: 5000\n#invalidationlimit 5000\ninvalidationlimit {{ getContext . \"invalidationlimit\" }}\n#\n# Optional override of the hub's identifier\n#  (defaults to 'host:port'). A 'random'\n#  setting changes the identifier on every\n#  startup; set in HA scenarios.\nidentifier random\n#\n# Use memcache to reduce the number of\n#  collector updates, default: True\n#no-memcache True\n#\n# Minimum period to delay configuration\n#  updates for batching, default: 30\n#min-update-delay-seconds 30\n#\n# Maximum period to delay configuration\n#  updates, default: 300\n#max-update-delay-seconds 300\n#\n# Period to delay configuration deletions\n#  for batching, default: 30\n#delete-delay-seconds 30\n#\n# The maximum number of unacknowledged\n#  messages that will be delivered to\n#  the invalidations consumer., default: 1000\n#invalidation-prefetch-count 1000\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#\n",
                "Filename": "/opt/zenoss/etc/zenhub.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": {
            "invalidationlimit": "200",
            "invalidationworkers": "2"
        },
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Zenoss ZenHub",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent .).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubXMLRpc",
                "ApplicationTemplate": "{{(parent .).Name}}_zenhubXMLRpc",
                "Name": "zenhub_rpc",
                "PortList": null,
                "PortNumber": 8081,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "central_query_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/query_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "metric_consumer_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/metrics_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rpc_listening": {
                "Interval": 10,
                "Script": "nmap -oG - -Pn -sS -p 8081 127.0.0.1 | grep -q 8081/open",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenhub.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zing-connector-answering": {
                "Interval": 10,
                "Script": "test \"$(curl localhost:9000/ping)\" = \"PONG\"",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "PREFER_SEPARATE",
        "ID": "1xs8oer0a1no95hb27zpx6isb",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zenhub.log",
                "Type": "zenhub"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [
                {
                    "Description": "zenhub internal metrics",
                    "ID": "zenhub",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Number of invalidations since daemon startup.",
                            "ID": "invalidations",
                            "Name": "Invalidations",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Please describe me.",
                            "ID": "services",
                            "Name": "Services",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Please describe me.",
                            "ID": "totalCallTime",
                            "Name": "Total Call Time",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Please describe me.",
                            "ID": "totalEvents",
                            "Name": "Total Events",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Please describe me.",
                            "ID": "totalTime",
                            "Name": "Total Time",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Please describe me.",
                            "ID": "workerItems",
                            "Name": "Worker Items",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "Please describe me.",
                            "ID": "workListLength",
                            "Name": "Work List Length",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "zenhub internal metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"invalidations\",\"tags\":{\"controlplane_service_id\":[\"1xs8oer0a1no95hb27zpx6isb\"]}},{\"metric\":\"services\",\"tags\":{\"controlplane_service_id\":[\"1xs8oer0a1no95hb27zpx6isb\"]}},{\"metric\":\"totalCallTime\",\"tags\":{\"controlplane_service_id\":[\"1xs8oer0a1no95hb27zpx6isb\"]}},{\"metric\":\"totalEvents\",\"tags\":{\"controlplane_service_id\":[\"1xs8oer0a1no95hb27zpx6isb\"]}},{\"metric\":\"totalTime\",\"tags\":{\"controlplane_service_id\":[\"1xs8oer0a1no95hb27zpx6isb\"]}},{\"metric\":\"workerItems\",\"tags\":{\"controlplane_service_id\":[\"1xs8oer0a1no95hb27zpx6isb\"]}},{\"metric\":\"workListLength\",\"tags\":{\"controlplane_service_id\":[\"1xs8oer0a1no95hb27zpx6isb\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "zenhub",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenhub.conf": {
                "Content": "#\n# Configuration file for zenhub\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenhub.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Port to use for XML-based Remote Procedure\n#  Calls (RPC), default: 8081\n#xmlrpcport 8081\n#\n# Port to use for Twisted's pb service,\n#  default: 8789\n#pbport 8789\n#\n# File where passwords are stored, default:\n#  /opt/zenoss/etc/hubpasswd\n#passwd /opt/zenoss/etc/hubpasswd\n#\n# Name of the distributed monitor this\n#  hub runs on, default: localhost\n#monitor localhost\n#\n# Number of worker instances to reserve\n#  for handling events, default: 1\n#workers-reserved-for-events 1\n#\n# Interval at which to poll invalidations\n#  (default: %default), default: 30\n#invalidation-poll-interval 30\n#\n# URL for posting internal metrics (default:\n#  %default), default:\n#  http://localhost:8080/api/metrics/store\n#metrics-store-url http://localhost:8080/api/metrics/store\n#\n# Username to use when publishing to metric\n#  consumer. Default is %default\n#zauth-username None\n#\n# Password to use when publishing to metric\n#  consumer. Default is %default\n#zauth-password None\n#\n# Number of workers dedicated to processing\n#  invalidations, default: 1\n#invalidationworkers 1\ninvalidationworkers {{ getContext . \"invalidationworkers\" }}\n#\n# The relative process priority of invalidation\n#  workers (%default), default: 10\n#invalidationworker-priority 10\n#\n# Number of invalidations each worker\n#  will deal with at a time, default: 100\n#invalidationchunksize 100\n#\n# Number of invalidations to process before\n#  shutting down, default: 5000\n#invalidationlimit 5000\ninvalidationlimit {{ getContext . \"invalidationlimit\" }}\n#\n# Optional override of the hub's identifier\n#  (defaults to 'host:port'). A 'random'\n#  setting changes the identifier on every\n#  startup; set in HA scenarios.\nidentifier random\n#\n# Use memcache to reduce the number of\n#  collector updates, default: True\n#no-memcache True\n#\n# Minimum period to delay configuration\n#  updates for batching, default: 30\n#min-update-delay-seconds 30\n#\n# Maximum period to delay configuration\n#  updates, default: 300\n#max-update-delay-seconds 300\n#\n# Period to delay configuration deletions\n#  for batching, default: 30\n#delete-delay-seconds 30\n#\n# The maximum number of unacknowledged\n#  messages that will be delivered to\n#  the invalidations consumer., default: 1000\n#invalidation-prefetch-count 1000\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#\n",
                "Filename": "/opt/zenoss/etc/zenhub.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "a8xypex0h8p4p2ctfse21g20b",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            },
            {
                "Name": "Solr answering",
                "Script": "curl -A 'Solr answering prereq' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "2G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 2,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenhub run -c --logfileonly --monitor {{(parent .).Name}}\"",
        "Tags": [
            "daemon",
            "hub"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenhubworker.conf": {
                "Content": "#\n# Configuration file for zenhubworker\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenhubworker.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Set a heartbeat timeout in seconds for\n#  a daemon, default: 900\n#heartbeattimeout 900\n#\n# Host to use for connecting to ZenHub,\n#  default: localhost\n#hubhost localhost\n#\n# Port to use for connecting to ZenHub,\n#  default: 8789\n#hubport 8789\n#\n# Login name to use when connecting to\n#  ZenHub, default: admin\n#hubusername admin\n#\n# password to use when connecting to ZenHub,\n#  default: zenoss\n#hubpassword zenoss\n#\n# Maximum number of remote calls before\n#  restarting worker, default: 200\n#call-limit 200\ncall-limit {{ getContext . \"call-limit\" }}\n#\n# Run with profiling on, default: False\n#profiling False\n#\n# Name of the distributed monitor this\n#  hub runs on, default: localhost\n#monitor localhost\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# memcached maximum object size in bytes,\n#  default: 1048576\n#zodb-cache-max-object-size 1048576\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zenhubworker.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": {
            "call-limit": "200"
        },
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Executes service requests on ZenHub's behalf",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent .).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubXMLRpc",
                "ApplicationTemplate": "{{(parent .).Name}}_zenhubXMLRpc",
                "Name": "zenhub_rpc",
                "PortList": null,
                "PortNumber": 8081,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "central_query_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/query_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "metric_consumer_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/metrics_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenhubworker.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "PREFER_SEPARATE",
        "ID": "5rlymy9fzqtu5y5ayovok45pb",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 2,
            "Max": 0,
            "Min": 1
        },
        "Instances": 2,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": null,
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zenhubworker.log",
                "Type": "zenhubworker"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zenhubworker (adm)",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenhubworker.conf": {
                "Content": "#\n# Configuration file for zenhubworker\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenhubworker.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Set a heartbeat timeout in seconds for\n#  a daemon, default: 900\n#heartbeattimeout 900\n#\n# Host to use for connecting to ZenHub,\n#  default: localhost\n#hubhost localhost\n#\n# Port to use for connecting to ZenHub,\n#  default: 8789\n#hubport 8789\n#\n# Login name to use when connecting to\n#  ZenHub, default: admin\n#hubusername admin\n#\n# password to use when connecting to ZenHub,\n#  default: zenoss\n#hubpassword zenoss\n#\n# Maximum number of remote calls before\n#  restarting worker, default: 200\n#call-limit 200\ncall-limit {{ getContext . \"call-limit\" }}\n#\n# Run with profiling on, default: False\n#profiling False\n#\n# Name of the distributed monitor this\n#  hub runs on, default: localhost\n#monitor localhost\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# memcached maximum object size in bytes,\n#  default: 1048576\n#zodb-cache-max-object-size 1048576\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zenhubworker.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "a8xypex0h8p4p2ctfse21g20b",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            },
            {
                "Name": "Solr answering",
                "Script": "curl -A 'Solr answering prereq' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 2,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenhubworker run -c --logfileonly --monitor {{(parent .).Name}} --workerid $CONTROLPLANE_INSTANCE_ID adm\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenhubiworker.conf": {
                "Content": "#\n# Configuration file for worker\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenhubiworker.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Set a heartbeat timeout in seconds for\n#  a daemon, default: 900\n#heartbeattimeout 900\n#\n# UUID of this worker's ZenHub\n#hub None\n#\n# Disable using memcache to reduce the\n#  number of collector updates, default: True\n#no-memcache True\n#\n# Number of invalidations to process before\n#  shutting down, default: 5000\n#invalidationlimit 5000\n#\n# Memcached namespace, so hub restart\n#  can use a fresh cache, default: 0\n#memcache-prefix 0\n#\n# The maximum number of unacknowledged\n#  messages that will be delivered to\n#  the queue consumer., default: 1\n#prefetch 1\n#\n# Interval at which the worker\n#  its pending_calls queue to the collectorcall\n#  queue., default: 10\n#publish_interval 10\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# memcached maximum object size in bytes,\n#  default: 1048576\n#zodb-cache-max-object-size 1048576\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zenhubiworker.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Process config invalidations",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent .).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubXMLRpc",
                "ApplicationTemplate": "{{(parent .).Name}}_zenhubXMLRpc",
                "Name": "zenhub_rpc",
                "PortList": null,
                "PortNumber": 8081,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "central_query_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/query_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "metric_consumer_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/metrics_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss invalidations/worker.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "PREFER_SEPARATE",
        "ID": "dy0cg1v8m1srz6n0r8ud275uk",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 2,
            "Max": 0,
            "Min": 1
        },
        "Instances": 2,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": null,
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zenhubiworker.log",
                "Type": "zenhubworker"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zenhubiworker",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenhubiworker.conf": {
                "Content": "#\n# Configuration file for worker\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenhubiworker.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Set a heartbeat timeout in seconds for\n#  a daemon, default: 900\n#heartbeattimeout 900\n#\n# UUID of this worker's ZenHub\n#hub None\n#\n# Disable using memcache to reduce the\n#  number of collector updates, default: True\n#no-memcache True\n#\n# Number of invalidations to process before\n#  shutting down, default: 5000\n#invalidationlimit 5000\n#\n# Memcached namespace, so hub restart\n#  can use a fresh cache, default: 0\n#memcache-prefix 0\n#\n# The maximum number of unacknowledged\n#  messages that will be delivered to\n#  the queue consumer., default: 1\n#prefetch 1\n#\n# Interval at which the worker\n#  its pending_calls queue to the collectorcall\n#  queue., default: 10\n#publish_interval 10\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# memcached maximum object size in bytes,\n#  default: 1048576\n#zodb-cache-max-object-size 1048576\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zenhubiworker.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "a8xypex0h8p4p2ctfse21g20b",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            },
            {
                "Name": "Solr answering",
                "Script": "curl -A 'Solr answering prereq' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 2,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenhubiworker run -c --duallog --hub {{(parent .).Name}} --workerid $CONTROLPLANE_INSTANCE_ID\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenhubworker.conf": {
                "Content": "#\n# Configuration file for zenhubworker\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenhubworker.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Set a heartbeat timeout in seconds for\n#  a daemon, default: 900\n#heartbeattimeout 900\n#\n# Host to use for connecting to ZenHub,\n#  default: localhost\n#hubhost localhost\n#\n# Port to use for connecting to ZenHub,\n#  default: 8789\n#hubport 8789\n#\n# Login name to use when connecting to\n#  ZenHub, default: admin\n#hubusername admin\n#\n# password to use when connecting to ZenHub,\n#  default: zenoss\n#hubpassword zenoss\n#\n# Maximum number of remote calls before\n#  restarting worker, default: 200\n#call-limit 200\ncall-limit {{ getContext . \"call-limit\" }}\n#\n# Run with profiling on, default: False\n#profiling False\n#\n# Name of the distributed monitor this\n#  hub runs on, default: localhost\n#monitor localhost\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# memcached maximum object size in bytes,\n#  default: 1048576\n#zodb-cache-max-object-size 1048576\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zenhubworker.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": {
            "call-limit": "200"
        },
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Executes service requests on ZenHub's behalf",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "{{(parent .).Name}}_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubXMLRpc",
                "ApplicationTemplate": "{{(parent .).Name}}_zenhubXMLRpc",
                "Name": "zenhub_rpc",
                "PortList": null,
                "PortNumber": 8081,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "central_query_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/query_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "metric_consumer_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/metrics_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenhubworker.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zenhub_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zenhub_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "PREFER_SEPARATE",
        "ID": "9jz9g58bbub8et3utm60npg0a",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 2,
            "Max": 0,
            "Min": 1
        },
        "Instances": 2,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": null,
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zenhubworker.log",
                "Type": "zenhubworker"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zenhubworker (default)",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenhubworker.conf": {
                "Content": "#\n# Configuration file for zenhubworker\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenhubworker.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Set a heartbeat timeout in seconds for\n#  a daemon, default: 900\n#heartbeattimeout 900\n#\n# Host to use for connecting to ZenHub,\n#  default: localhost\n#hubhost localhost\n#\n# Port to use for connecting to ZenHub,\n#  default: 8789\n#hubport 8789\n#\n# Login name to use when connecting to\n#  ZenHub, default: admin\n#hubusername admin\n#\n# password to use when connecting to ZenHub,\n#  default: zenoss\n#hubpassword zenoss\n#\n# Maximum number of remote calls before\n#  restarting worker, default: 200\n#call-limit 200\ncall-limit {{ getContext . \"call-limit\" }}\n#\n# Run with profiling on, default: False\n#profiling False\n#\n# Name of the distributed monitor this\n#  hub runs on, default: localhost\n#monitor localhost\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# memcached maximum object size in bytes,\n#  default: 1048576\n#zodb-cache-max-object-size 1048576\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zenhubworker.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "a8xypex0h8p4p2ctfse21g20b",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            },
            {
                "Name": "Solr answering",
                "Script": "curl -A 'Solr answering prereq' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 2,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenhubworker run -c --logfileonly --monitor {{(parent .).Name}} --workerid $CONTROLPLANE_INSTANCE_ID default\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Localhost application",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "a8xypex0h8p4p2ctfse21g20b",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "localhost",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "as7yj4wxvmkwspn5sbo402zhu",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "",
        "Tags": [
            "hub"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "as7yj4wxvmkwspn5sbo402zhu",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Collection",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "bf71nji53ltppe87g8dxjn95x",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "",
        "Tags": [
            "zenoss-collection"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenactiond.conf": {
                "Content": "#\n# Configuration file for zenactiond\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenactiond.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Cycle, in seconds, for maintenance tasks.\n#  Default is 60., default: 60\n#maintenancecycle 60\n#\n# Max number of action commands to perform\n#  concurrently (default: 10), default: 10\n#maxcommands 10\n#\n# http path to the root of the zope server\n#  (default: http://localhost:8080), default:\n#  http://localhost:8080\n#zopeurl http://localhost:8080\nzopeurl https://{{ getContext . \"cse.tenant\" }}.{{ getContext . \"cse.domain\"}}/{{ getContext . \"cse.source\" }}\n#\n# Name of monitor instance to use for\n#  heartbeat  events. Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# How often to check to see if there are\n#  any maintenance windows to execute,\n#  default: 60\n#maintenance-window-cycletime 60\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#\n# Strip HTML/XML tags from plaintext\n# email notifications?\n#strip-email-body-tags True\n#\n",
                "Filename": "/opt/zenoss/etc/zenactiond.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Runs background jobs such as email notification, database aging, and maintenance window processing",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubXMLRpc",
                "ApplicationTemplate": "localhost_zenhubXMLRpc",
                "Name": "zenhub_rpc",
                "PortList": null,
                "PortNumber": 8081,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenactiond.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "bhs528r6pgyskswuc58h96ifu",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zenactiond.log",
                "Type": "zenactiond"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zenactiond",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenactiond.conf": {
                "Content": "#\n# Configuration file for zenactiond\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenactiond.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Cycle, in seconds, for maintenance tasks.\n#  Default is 60., default: 60\n#maintenancecycle 60\n#\n# Max number of action commands to perform\n#  concurrently (default: 10), default: 10\n#maxcommands 10\n#\n# http path to the root of the zope server\n#  (default: http://localhost:8080), default:\n#  http://localhost:8080\n#zopeurl http://localhost:8080\nzopeurl https://{{ getContext . \"cse.tenant\" }}.{{ getContext . \"cse.domain\"}}/{{ getContext . \"cse.source\" }}\n#\n# Name of monitor instance to use for\n#  heartbeat  events. Default is localhost.,\n#  default: localhost\n#monitor localhost\n#\n# How often to check to see if there are\n#  any maintenance windows to execute,\n#  default: 60\n#maintenance-window-cycletime 60\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#\n# Strip HTML/XML tags from plaintext\n# email notifications?\n#strip-email-body-tags True\n#\n",
                "Filename": "/opt/zenoss/etc/zenactiond.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "bv11l0njvi35iusmi9ccwq062",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "export TERM=xterm; mysql --host=127.0.0.1 --port=3306 -c ';' 2>&1 | grep denied"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenactiond run -c --logfileonly --workerid $CONTROLPLANE_INSTANCE_ID \"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 4,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zeneventserver.conf": {
                "Content": "# The URI to the RabbitMQ server. This property is ignored if \n# $ZENHOME/etc/global.conf can be read in which the AMQP URI will be \n# built from the properties found in that location.\n#zep.amqp.uri=amqp://zenoss:zenoss@localhost:5672/zenoss\n\n# The maximum number of concurrent API archive requests. Zero for no limit\n#zep.archive.max_requests=0\n\n# The number of milliseconds to wait between connection retries\n#zep.amqp.retry=60000\n\n# The default maximum number of events returned in an event query\n#zep.query.limit=1000\n\n# Enable throttling zenevents consumer when\n# len(event_summary_index_queue) >  zep.index.throttle_threshold\n#zep.index.throttle=true\n\n# Threshold at which consumer throttling is enabled, 0 is automatically sets it to 2 * zep.index.limit\n#zep.index.throttle_threshold=100000\n\n# Number of ms for event consumer to sleep when throttling\n#zep.index.throttle_sleep=100\n\n# The maximum number of minutes a closed event may not be seen again before moving to archive.\n#zep.max_event_archive_interval_minutes=43200\n\n# JDBC Protocol\n# Loaded from global.conf zep_db_type first, then falls back to the definition in this file.\n#zep.jdbc.protocol=mysql\n\n# JDBC Hostname\n# Loaded from global.conf zep_host first, then falls back to the definition in this file.\n#zep.jdbc.hostname=localhost\n\n# JDBC Port\n# Loaded from global.conf zep_port first, then falls back to the definition in this file.\n#zep.jdbc.port=3306\n\n# JDBC Database Name\n# Loaded from global.conf zep_db first, then falls back to the definition in this file.\n#zep.jdbc.dbname=zenoss_zep\n\n# JDBC Username\n# Loaded from global.conf zep_user first, then falls back to the definition in this file.\n#zep.jdbc.username=zenoss\n\n# JDBC Password\n# Loaded from global.conf zep_password first, then falls back to the definition in this file.\n#zep.jdbc.password=zenoss\n\n# The default auto commit state of pooled connections\n#zep.jdbc.pool.default_auto_commit=false\n\n# The default read only state of pooled connections\n#zep.jdbc.pool.default_read_only=false\n\n# The default transaction isolation of pooled connections\n#zep.jdbc.pool.default_transaction_isolation=2\n\n# The maximum number of active connections in the pool\n#zep.jdbc.pool.max_active=50\n\n# The maximum number of idle connections in the pool\n#zep.jdbc.pool.max_idle=25\n\n# The minimum number of idle connections in the pool\n#zep.jdbc.pool.min_idle=3\n\n# The initial number of connections in the pool\n#zep.jdbc.pool.initial_size=3\n\n# The maximum amount of time to wait for a connection from the pool\n#zep.jdbc.pool.max_wait=-1\n\n# Whether to validate connections when borrowing from the pool\n#zep.jdbc.pool.test_on_borrow=true\n\n# Whether to validate connections when returning to the pool\n#zep.jdbc.pool.test_on_return=false\n\n# Whether to validation connections periodically while idle\n#zep.jdbc.pool.test_while_idle=false\n\n# Amount of time between idle connection validation, abandoned cleaner, and\n# idle pool resizing.\n#zep.jdbc.pool.time_between_eviction_runs_millis=5000\n\n# Amount of time before a connection is considered idle\n#zep.jdbc.pool.min_evictable_idle_time_millis=60000\n\n# Interceptors to run\n#zep.jdbc.pool.jdbc_interceptors=ConnectionState\n\n# How often to validate connections in the pool\n#zep.jdbc.pool.validation_interval=30000\n\n# Whether JMX can be used to configure the pool\n#zep.jdbc.pool.jmx_enabled=true\n\n# True if a fair queue is used by the connection pool.\n#zep.jdbc.pool.fair_queue=true\n\n# Timed out connections will get closed when this percentage of the pool is full.\n#zep.jdbc.pool.abandon_when_percentage_full=0\n\n# Time in milliseconds to keep connections alive.\n#zep.jdbc.pool.max_age=0\n\n# Set to true if ProxyConnection class should use String.equals instead of ==\n# when comparing method names.\n#zep.jdbc.pool.use_equals=true\n\n# Whether to remove abandoned connections if they exceed the\n# remove_abandoned_timeout.\n#zep.jdbc.pool.remove_abandoned=false\n\n# The amount of time (in seconds) before a connection is considered abandoned.\n#zep.jdbc.pool.remove_abandoned_timeout=60\n\n# Whether to log stack traces of abandoned connections.\n#zep.jdbc.pool.log_abandoned=false\n\n# Instead of abandoning connections, logs a warning if log_abandoned is true.\n# If this value is <= 0, then no suspect checking will be performed.\n#zep.jdbc.pool.suspect_timeout=0\n\n# The default number of retries performed when a database deadlock is encountered.\n#zep.jdbc.deadlock_retries=5\n\n# The core pool size used by the primary executor service.\n# By default, this is set to the number of processors in the system.\n#zep.executor.core_pool_size=4\n\n# The maximum pool size used by the primary executor service.\n# By default, this is set to the number of processors in the system.\n#zep.executor.max_pool_size=4\n\n# The maximum number of entries waiting to execute on the executor service.\n# Changed to default of Integer.MAX_VALUE because AMQP QOS settings prevent\n# overwhelming system.\n#zep.executor.queue_capacity=2147483647\n\n# AMQP QOS prefetch_count settings for queues consumed by zeneventserver.\n# These should only need to be changed if there is significant latency\n# between the AMQP server and zeneventserver.\n#zep.queue.$ZepHeartbeats.prefetch_count=100\n#zep.queue.$ZepMigratedEventSummary.prefetch_count=100\n#zep.queue.$ZepMigratedEventArchive.prefetch_count=100\n#zep.queue.$ZepModelChange.prefetch_count=1\n#zep.queue.$ZepZenEvents.prefetch_count=100\n\n# Index Directory\n#zep.index.dir=var/zeneventserver/index\n\n# Index RAM buffer size\n#zep.index.ram_buffer_size_mb=16.0\n\n# Heartbeat check interval in seconds\n#zep.heartbeat.interval_seconds=60\n\n# Database optimization is performed on this interval (in minutes). Specify an interval <= 0 to disable.\n#zep.database.optimize_minutes=720\n#zep.database.optimize_use_external_tool=true\n#zep.database.optimize_external_tool_path=/var/zenoss/percona/bin\n#zep.database.optimize_external_tool_options=\n#zep.database.optimize_elapsed_warn_threshold_seconds=120\n\n## Comma separated list of ZEP plug-ins to disable.\n#zep.plugins.disabled=\n\n## Whether to disable all external ZEP plug-ins (from ZenPacks).\n#zep.plugins.external.disabled=false\n\n## Optional configuration settings for each plug-in\n#plugin.<ID>.<NAME>=<VALUE>\n\n## The default number of trigger rule compilations to cache.\n#plugin.TriggerPlugin.triggerRuleCacheSize=200\n\n## Partitioning parameters for partitioned tables in ZEP.\n##\n## Values are:\n##\n##   partition.<table>.unit = The TimeUnit of each partition.\n##   partition.<table>.duration = The duration of each partition.\n##   partition.<table>.initial_past_partitions = The initial number of partitions to create in the past.\n##   partition.<table>.future_partitions = The number of future partitions to maintain.\n##\n\n#partition.event_archive.unit=DAYS\n#partition.event_archive.duration=1\n# We want to configure the maximum number of initial partitions for migration.\n#partition.event_archive.initial_past_partitions=90\n#partition.event_archive.future_partitions=3\n\n#partition.event_time.unit=HOURS\n#partition.event_time.duration=1\n# We want to configure the maximum number of initial partitions for migration.\n#partition.event_time.initial_past_partitions=0\n#partition.event_time.future_partitions=2\n\n# redis connection\n#zep.redis.host=localhost\n#zep.redis.port=6379\n\n# Max number of search terms allowed in a zeneventserver query for events\n# zep.query.clause_limit=1024\n\n## The amount of time zep will cache search results from the index\n#zep.query.cache_refresh_interval=10\n#zep.query.archive_cache_refresh_interval=60\n\n## Configuration to forward events to Zenoss Cloud\n#\nzep.zing.enabled=true\nzep.zing.project={{getContext . \"cse.project\"}}\nzep.zing.tenant={{getContext . \"cse.tenant\"}}\nzep.zing.source={{getContext . \"cse.source\"}}\nzep.zing.topic=event-in\nzep.zing.minimum_severity=INFO\n\n# Path to the credentials file in case a svc account key is needed\n#zep.zing.credentials=\n\n# if running with a pubsub emulator, set zep.zing.use_emulator to true and\n# zep.zing.emulator_url= to the ip:port of the emulator\n#\n#zep.zing.use_emulator=false\n#zep.zing.emulator_url=\n\n#zep.zing.max_pubsub_message_size=7340032\n#zep.zing.max_event_field_length=51200\n",
                "Filename": "/opt/zenoss/etc/zeneventserver.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0600"
            },
            "/opt/zenoss/etc/zeneventserver/jetty/jetty.ini": {
                "Content": "#===========================================================\n# Jetty start.jar arguments\n# Each line of this file is prepended to the command line \n# arguments # of a call to:\n#    java -jar start.jar [arg...]\n#===========================================================\n\n\n\n#===========================================================\n# If the arguments in this file include JVM arguments\n# (eg -Xmx512m) or JVM System properties (eg com.sun.???),\n# then these will not take affect unless the --exec \n# parameter is included or if the output from --dry-run\n# is executed like:\n#   eval $(java -jar start.jar --dry-run)\n#\n# Below are some recommended options for Sun's JRE\n#-----------------------------------------------------------\n# --exec\n# -Dcom.sun.management.jmxremote\n# -Xmx2000m\n# -Xmn512m\n# -verbose:gc\n# -XX:+PrintGCDateStamps\n# -XX:+PrintGCTimeStamps\n# -XX:+PrintGCDetails\n# -XX:+PrintTenuringDistribution\n# -XX:+PrintCommandLineFlags\n# -XX:+DisableExplicitGC\n# -XX:+UseConcMarkSweepGC\n# -XX:ParallelCMSThreads=2\n# -XX:+CMSClassUnloadingEnabled  \n# -XX:+UseCMSCompactAtFullCollection\n# -XX:CMSInitiatingOccupancyFraction=80\n#-----------------------------------------------------------\n\n\n#===========================================================\n# Start classpath OPTIONS.\n# These control what classes are on the classpath\n# for a full listing do\n#   java -jar start.jar --list-options\n#-----------------------------------------------------------\nOPTIONS=Server\n#-----------------------------------------------------------\n\n\n#===========================================================\n# Configuration files.\n# For a full list of available configuration files do\n#   java -jar start.jar --help\n#-----------------------------------------------------------\netc/zeneventserver/jetty/jetty.xml\netc/zeneventserver/jetty/jetty-deploy.xml\netc/zeneventserver/jetty/jetty-webapps.xml\n",
                "Filename": "/opt/zenoss/etc/zeneventserver/jetty/jetty.ini",
                "Owner": "zenoss:zenoss",
                "Permissions": "0600"
            },
            "/opt/zenoss/etc/zeneventserver/jetty/start.config": {
                "Content": "# This file controls what file are to be put on classpath or command line.\n#\n# Format is as follows:\n#\n# Each line contains entry in the format:\n#\n#  SUBJECT [ [!] CONDITION [AND|OR] ]*\n# \n# where SUBJECT: \n#   ends with \".class\" is the Main class to run.\n#   ends with \".xml\" is a configuration file for the command line\n#   ends with \"/\" is a directory from which to add all jar and zip files. \n#   ends with \"/*\" is a directory from which to add all unconsidered jar and zip files.\n#   ends with \"/**\" is a directory from which to recursively add all unconsidered jar and zip files.\n#   Containing = are used to assign system properties.\n#   Containing ~= are used to assign start properties.\n#   Containing /= are used to assign a canonical path.\n#   all other subjects are treated as files to be added to the classpath.\n#\n# ${name} is expanded to a start property\n# $(name) is expanded to either a start property or a system property. \n# The start property ${version} is defined as the version of the start.jar\n#\n# Files starting with \"/\" are considered absolute, all others are relative to\n# the home directory.\n#\n# CONDITION is one of:\n#   always\n#   never\n#   available classname        # true if class on classpath\n#   property name              # true if set as start property\n#   system   name              # true if set as system property\n#   exists file                # true if file/dir exists\n#   java OPERATOR version      # java version compared to literal\n#   nargs OPERATOR number      # number of command line args compared to literal\n#   OPERATOR := one of \"<\",\">\",\"<=\",\">=\",\"==\",\"!=\"\n#\n# CONTITIONS can be combined with AND OR or !, with AND being the assume\n# operator for a list of CONDITIONS.\n#\n# Classpath operations are evaluated on the fly, so once a class or jar is\n# added to the classpath, subsequent available conditions will see that class.\n#\n# The configuration file may be divided into sections with option names like:\n# [ssl,default]\n#\n# Clauses after a section header will only be included if they match one of the tags in the \n# options property.  By default options are set to \"default,*\" or the OPTIONS property may\n# be used to pass in a list of tags, eg. :\n#\n#    java -jar start.jar OPTIONS=jetty,jsp,ssl\n#\n# The tag '*' is always appended to the options, so any section with the * tag is always \n# applied.\n#\n\n# add a property defined classpath\n${path}.path                                     property path\n\n# add a property defined library directory\n#${lib}/**                                        exists ${lib}\n\n# Try different settings of jetty.home until the start.jar is found.\n#jetty.home=.                                     ! exists $(jetty.home)/start.jar \n#jetty.home=..                                    ! exists $(jetty.home)/start.jar \n#jetty.home=jetty-distribution/src/main/resources     ! exists $(jetty.home)/start.jar \n#jetty.home=../jetty-distribution/src/main/resources  ! exists $(jetty.home)/start.jar \n#jetty.home=.                                     ! exists $(jetty.home)/start.jar\n#jetty.home/=$(jetty.home)                        exists $(jetty.home)/start.jar\n\n# The main class to run\norg.eclipse.jetty.xml.XmlConfiguration.class\n${start.class}.class                             property start.class\n\n# The default configuration files\n#$(jetty.home)/etc/jetty.xml                      nargs == 0\n#./jetty-server/src/main/config/etc/jetty.xml     nargs == 0 AND ! exists $(jetty.home)/etc/jetty.xml\n\n# Default OPTIONS if not specified on the command line\nOPTIONS~=default,*                               ! property OPTIONS\n\n# Add a resources directory if it is there\n#[All,resources,default]\n#$(jetty.home)/resources/\n           \n# Add jetty modules\n[*]\n$(jetty.home)/lib/jetty-util-$(version).jar                                             ! available org.eclipse.jetty.util.StringUtil\n$(jetty.home)/lib/jetty-io-$(version).jar                                               ! available org.eclipse.jetty.io.Buffer\n\n[Server,All,xml,default]\n$(jetty.home)/lib/jetty-xml-$(version).jar                                              ! available org.eclipse.jetty.xml.XmlParser\n         \n[Server,All,server,default]\n$(jetty.home)/lib/servlet-api-2.5.jar                                                   ! available javax.servlet.ServletContext\n$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser\n$(jetty.home)/lib/jetty-continuation-$(version).jar                                     ! available org.eclipse.jetty.continuation.Continuation\n$(jetty.home)/lib/jetty-server-$(version).jar                                           ! available org.eclipse.jetty.server.Server\n                                             \n[Server,All,security,default]\n$(jetty.home)/lib/jetty-security-$(version).jar                                         ! available org.eclipse.jetty.security.LoginService\n                                                       \n[Server,All,servlet,default]\n$(jetty.home)/lib/servlet-api-2.5.jar                                                   ! available javax.servlet.ServletContext\n$(jetty.home)/lib/jetty-servlet-$(version).jar                                          ! available org.eclipse.jetty.servlet.ServletHandler\n                            \n[Server,All,webapp,default]\n$(jetty.home)/lib/jetty-webapp-$(version).jar                                           ! available org.eclipse.jetty.webapp.WebAppContext\n                                  \n[Server,All,deploy,default]\n$(jetty.home)/lib/jetty-deploy-$(version).jar                                           ! available org.eclipse.jetty.deploy.ContextDeployer\n           \n[Server,All,servlets,default]\n$(jetty.home)/lib/jetty-servlets-$(version).jar                                         ! available org.eclipse.jetty.servlets.WelcomeFilter\n\n[All,rewrite]\n$(jetty.home)/lib/jetty-rewrite-$(version).jar                                          ! available org.eclipse.jetty.rewrite.handler.RewriteHandler\n\n[All,jmx]\n$(jetty.home)/lib/jetty-jmx-$(version).jar                                              ! available org.eclipse.jetty.jmx.MBeanContainer\n                  \n[All,ajp]\n$(jetty.home)/lib/jetty-ajp-$(version).jar                                              ! available org.eclipse.jetty.ajp.Ajp13Connection      \n                   \n[All,plus,jndi]\n$(jetty.home)/lib/jetty-jndi-${version}.jar                                             ! available org.eclipse.jetty.jndi.ContextFactory\n$(jetty.home)/lib/jetty-plus-${version}.jar                                             ! available org.eclipse.jetty.plus.jndi.NamingEntry\n$(jetty.home)/lib/jndi/**                                                               exists $(jetty.home)/lib/jndi \n\n[All,annotations]\n$(jetty.home)/lib/jetty-annotations-$(version).jar                                      ! available org.eclipse.jetty.annotations.AnnotationFinder\n$(jetty.home)/lib/annotations/**                                                        exists $(jetty.home)/lib/jndi \n          \n[All,setuid]\n$(jetty.home)/lib/jetty-setuid-$(version).jar                                           ! available org.eclipse.jetty.setuid.SetUID\n$(jetty.home)/lib/setuid/**                                                       \n                                    \n[All,policy]\n$(jetty.home)/lib/jetty-policy-$(version).jar                                           ! available org.eclipse.jetty.policy.JettyPolicy\n                                    \n[All,Client,client]\n$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser\n$(jetty.home)/lib/jetty-client-$(version).jar                                           ! available org.eclipse.jetty.client.HttpClient\n       \n[Client]\n$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser\n\n[All,websocket]\n$(jetty.home)/lib/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket\n       \n[All,overlay,overlays]\n$(jetty.home)/lib/jetty-overlay-deployer-$(version).jar                                 ! available org.eclipse.jetty.overlay.OverlayedAppProvider\n       \n      \n# Add ext if it exists\n[Server,All,default,ext]        \n$(jetty.home)/lib/ext/**\n\n# Add all other sub-directories in /lib/ as options in a dynamic way\n#[All,=$(jetty.home)/lib/**]        \n\n",
                "Filename": "/opt/zenoss/etc/zeneventserver/jetty/start.config",
                "Owner": "zenoss:zenoss",
                "Permissions": "0600"
            },
            "/opt/zenoss/etc/zeneventserver/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n##############################################################################\n#\n# Copyright (C) Zenoss, Inc. 2016, all rights reserved.\n# \n# This content is made available according to terms specified in\n# License.zenoss under the directory where your Zenoss product is installed.\n#\n##############################################################################\n-->\n\n\n<configuration scan=\"true\">\n    <statusListener class=\"ch.qos.logback.core.status.OnConsoleStatusListener\" />\n\n    <if condition='isNull(\"ZENOSS_DAEMON\")'>\n        <then>\n            <appender name=\"APPENDER\" class=\"ch.qos.logback.core.ConsoleAppender\">\n                <encoder>\n                    <pattern>%date{yyyy-MM-dd'T'HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>\n                </encoder>\n            </appender>\n        </then>\n        <else>\n            <appender name=\"APPENDER\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n                <file>${ZENHOME:-.}/log/zeneventserver.log</file>\n                <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n                    <!-- daily rollover -->\n                    <fileNamePattern>${ZENHOME:-.}/log/zeneventserver.log.%i</fileNamePattern>\n                    <!-- keep up to 3 logs by default -->\n                    <minIndex>1</minIndex>\n                    <maxIndex>3</maxIndex>\n                </rollingPolicy>\n                <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n                    <maxFileSize>10MB</maxFileSize>\n                </triggeringPolicy>\n                <encoder>\n                    <pattern>%date{yyyy-MM-dd'T'HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>\n                </encoder>\n            </appender>\n        </else>\n    </if>\n\n    <contextName>zeneventserver</contextName>\n    <jmxConfigurator />\n    <logger name=\"org.springframework\" level=\"WARN\"/>\n    <logger name=\"ch.qos.logback\" level=\"WARN\"/>\n    <logger name=\"com.zenoss\" level=\"${ZENOSS_LOG_LEVEL:-INFO}\" />\n    <logger name=\"org.zenoss\" level=\"${ZENOSS_LOG_LEVEL:-INFO}\" />\n    <root level=\"INFO\">\n        <appender-ref ref=\"APPENDER\"/>\n    </root>\n</configuration>\n",
                "Filename": "/opt/zenoss/etc/zeneventserver/logback.xml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0600"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Stores and retrieves events from its database",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep_mariadb",
                "ApplicationTemplate": "zep_mariadb",
                "Name": "zep_mariadb",
                "PortList": null,
                "PortNumber": 3306,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": [
            "DEFAULT_ZEP_JVM_ARGS='-server -Xmx{{.RAMCommitment}}'"
        ],
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "curl -A 'zeneventserver answering healthcheck' -f -s http://localhost:8084/zeneventserver/api/1.0/heartbeats/",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss java.*zeneventserver >/dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "2rwl0xi54ivc5cr2qrhzrc7f4",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "zeneventserver"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zeneventserver.log",
                "Type": "zeneventserver"
            },
            {
                "Filters": [
                    "zeneventserver-stdio"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zeneventserver-stdio.[0-9]*_[0-9]*_[0-9]*.log",
                "Type": "zeneventserver_stdio"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "bytes",
                            "legend": "bytes",
                            "metric": "zeneventserver.zing.bytesSent.count",
                            "metricSource": "events-to-pubsub",
                            "name": "bytes",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Bytes published to Pub/Sub",
                    "footer": false,
                    "format": "",
                    "id": "eventsBytes",
                    "maxy": null,
                    "miny": null,
                    "name": "Bytes published to Pub/Sub",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2rwl0xi54ivc5cr2qrhzrc7f4"
                        ]
                    },
                    "type": "line",
                    "units": "bytes",
                    "yAxisLabel": "Bytes Published"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "published",
                            "legend": "published",
                            "metric": "zeneventserver.zing.sentEvents.count",
                            "metricSource": "events-to-pubsub",
                            "name": "published",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "failed",
                            "legend": "failed",
                            "metric": "zeneventserver.zing.failedEvents.count",
                            "metricSource": "events-to-pubsub",
                            "name": "failed",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "invalid",
                            "legend": "invalid",
                            "metric": "zeneventserver.zing.invalidEvents.count",
                            "metricSource": "events-to-pubsub",
                            "name": "invalid",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Number of events published to Pub/Sub.",
                    "footer": false,
                    "format": "",
                    "id": "eventsPublished",
                    "maxy": null,
                    "miny": null,
                    "name": "Events Published to Pub/Sub",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2rwl0xi54ivc5cr2qrhzrc7f4"
                        ]
                    },
                    "type": "line",
                    "units": "events",
                    "yAxisLabel": "Events Published"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "min",
                            "legend": "min",
                            "metric": "zeneventserver.zing.processEvent.min",
                            "metricSource": "events-to-pubsub",
                            "name": "min",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "max",
                            "legend": "max",
                            "metric": "zeneventserver.zing.processEvent.max",
                            "metricSource": "events-to-pubsub",
                            "name": "max",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "mean",
                            "legend": "mean",
                            "metric": "zeneventserver.zing.processEvent.mean",
                            "metricSource": "events-to-pubsub",
                            "name": "mean",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Seconds to Forward events to Pub/Sub.",
                    "footer": false,
                    "format": "",
                    "id": "processEventSeconds",
                    "maxy": null,
                    "miny": null,
                    "name": "Events to Pub/Sub Time (seconds)",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "2rwl0xi54ivc5cr2qrhzrc7f4"
                        ]
                    },
                    "type": "line",
                    "units": "seconds",
                    "yAxisLabel": "Events to Pub/Sub Time (s)"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "Statistics for outgoing events to Pub/Sub",
                    "ID": "events-to-pubsub",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of event bytes sent",
                            "ID": "zeneventserver.zing.bytesSent.count",
                            "Name": "bytes",
                            "ResetValue": 0,
                            "Unit": "bytes"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of events failed when publishing to Pub/Sub",
                            "ID": "zeneventserver.zing.failedEvents.count",
                            "Name": "failedEvents",
                            "ResetValue": 0,
                            "Unit": "events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number invalid events that were not sent to Pub/Sub",
                            "ID": "zeneventserver.zing.invalidEvents.count",
                            "Name": "invalidEvents",
                            "ResetValue": 0,
                            "Unit": "events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number events dropped for not meeting minimum severity criteria",
                            "ID": "zeneventserver.zing.irrelevantSeverityEvents.count",
                            "Name": "irrelevantSeverityEvents",
                            "ResetValue": 0,
                            "Unit": "events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number events successfully sent to Pub/Sub",
                            "ID": "zeneventserver.zing.sentEvents.count",
                            "Name": "sentEvents",
                            "ResetValue": 0,
                            "Unit": "events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "number of calls to processEvent",
                            "ID": "zeneventserver.zing.processEvent.count",
                            "Name": "count",
                            "ResetValue": 0,
                            "Unit": "events"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "max time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.max",
                            "Name": "max",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "mean time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.mean",
                            "Name": "mean",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "min time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.min",
                            "Name": "mean",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "50th percentile time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.p50",
                            "Name": "p50",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "75th percentile time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.p75",
                            "Name": "p75",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "95th percentile time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.p95",
                            "Name": "p95",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "98th percentile time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.p98",
                            "Name": "p98",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "99th percentile time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.p99",
                            "Name": "p99",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "99.9th percentile time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.p999",
                            "Name": "p99.9",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "stddev time in processEvent",
                            "ID": "zeneventserver.zing.processEvent.stddev",
                            "Name": "stddev",
                            "ResetValue": 0,
                            "Unit": "seconds"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "15 minute processEvent rate",
                            "ID": "zeneventserver.zing.processEvent.m15_rate",
                            "Name": "15MinuteRate",
                            "ResetValue": 0,
                            "Unit": "evt/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "1 minute processEvent rate",
                            "ID": "zeneventserver.zing.processEvent.m1_rate",
                            "Name": "1MinuteRate",
                            "ResetValue": 0,
                            "Unit": "evt/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "5 minute processEvent rate",
                            "ID": "zeneventserver.zing.processEvent.m5_rate",
                            "Name": "5MinuteRate",
                            "ResetValue": 0,
                            "Unit": "evt/sec"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "mean processEvent rate",
                            "ID": "zeneventserver.zing.processEvent.mean_rate",
                            "Name": "meanRate",
                            "ResetValue": 0,
                            "Unit": "evt/sec"
                        }
                    ],
                    "Name": "Events to Pub/Sub",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"zeneventserver.zing.bytesSent.count\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.failedEvents.count\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.invalidEvents.count\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.irrelevantSeverityEvents.count\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.sentEvents.count\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.count\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.max\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.mean\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.min\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.p50\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.p75\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.p95\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.p98\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.p99\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.p999\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.stddev\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.m15_rate\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.m1_rate\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.m5_rate\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}},{\"metric\":\"zeneventserver.zing.processEvent.mean_rate\",\"tags\":{\"controlplane_service_id\":[\"2rwl0xi54ivc5cr2qrhzrc7f4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "zeneventserver",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zeneventserver.conf": {
                "Content": "# The URI to the RabbitMQ server. This property is ignored if \n# $ZENHOME/etc/global.conf can be read in which the AMQP URI will be \n# built from the properties found in that location.\n#zep.amqp.uri=amqp://zenoss:zenoss@localhost:5672/zenoss\n\n# The maximum number of concurrent API archive requests. Zero for no limit\n#zep.archive.max_requests=0\n\n# The number of milliseconds to wait between connection retries\n#zep.amqp.retry=60000\n\n# The default maximum number of events returned in an event query\n#zep.query.limit=1000\n\n# Enable throttling zenevents consumer when\n# len(event_summary_index_queue) >  zep.index.throttle_threshold\n#zep.index.throttle=true\n\n# Threshold at which consumer throttling is enabled, 0 is automatically sets it to 2 * zep.index.limit\n#zep.index.throttle_threshold=100000\n\n# Number of ms for event consumer to sleep when throttling\n#zep.index.throttle_sleep=100\n\n# The maximum number of minutes a closed event may not be seen again before moving to archive.\n#zep.max_event_archive_interval_minutes=43200\n\n# JDBC Protocol\n# Loaded from global.conf zep_db_type first, then falls back to the definition in this file.\n#zep.jdbc.protocol=mysql\n\n# JDBC Hostname\n# Loaded from global.conf zep_host first, then falls back to the definition in this file.\n#zep.jdbc.hostname=localhost\n\n# JDBC Port\n# Loaded from global.conf zep_port first, then falls back to the definition in this file.\n#zep.jdbc.port=3306\n\n# JDBC Database Name\n# Loaded from global.conf zep_db first, then falls back to the definition in this file.\n#zep.jdbc.dbname=zenoss_zep\n\n# JDBC Username\n# Loaded from global.conf zep_user first, then falls back to the definition in this file.\n#zep.jdbc.username=zenoss\n\n# JDBC Password\n# Loaded from global.conf zep_password first, then falls back to the definition in this file.\n#zep.jdbc.password=zenoss\n\n# The default auto commit state of pooled connections\n#zep.jdbc.pool.default_auto_commit=false\n\n# The default read only state of pooled connections\n#zep.jdbc.pool.default_read_only=false\n\n# The default transaction isolation of pooled connections\n#zep.jdbc.pool.default_transaction_isolation=2\n\n# The maximum number of active connections in the pool\n#zep.jdbc.pool.max_active=50\n\n# The maximum number of idle connections in the pool\n#zep.jdbc.pool.max_idle=25\n\n# The minimum number of idle connections in the pool\n#zep.jdbc.pool.min_idle=3\n\n# The initial number of connections in the pool\n#zep.jdbc.pool.initial_size=3\n\n# The maximum amount of time to wait for a connection from the pool\n#zep.jdbc.pool.max_wait=-1\n\n# Whether to validate connections when borrowing from the pool\n#zep.jdbc.pool.test_on_borrow=true\n\n# Whether to validate connections when returning to the pool\n#zep.jdbc.pool.test_on_return=false\n\n# Whether to validation connections periodically while idle\n#zep.jdbc.pool.test_while_idle=false\n\n# Amount of time between idle connection validation, abandoned cleaner, and\n# idle pool resizing.\n#zep.jdbc.pool.time_between_eviction_runs_millis=5000\n\n# Amount of time before a connection is considered idle\n#zep.jdbc.pool.min_evictable_idle_time_millis=60000\n\n# Interceptors to run\n#zep.jdbc.pool.jdbc_interceptors=ConnectionState\n\n# How often to validate connections in the pool\n#zep.jdbc.pool.validation_interval=30000\n\n# Whether JMX can be used to configure the pool\n#zep.jdbc.pool.jmx_enabled=true\n\n# True if a fair queue is used by the connection pool.\n#zep.jdbc.pool.fair_queue=true\n\n# Timed out connections will get closed when this percentage of the pool is full.\n#zep.jdbc.pool.abandon_when_percentage_full=0\n\n# Time in milliseconds to keep connections alive.\n#zep.jdbc.pool.max_age=0\n\n# Set to true if ProxyConnection class should use String.equals instead of ==\n# when comparing method names.\n#zep.jdbc.pool.use_equals=true\n\n# Whether to remove abandoned connections if they exceed the\n# remove_abandoned_timeout.\n#zep.jdbc.pool.remove_abandoned=false\n\n# The amount of time (in seconds) before a connection is considered abandoned.\n#zep.jdbc.pool.remove_abandoned_timeout=60\n\n# Whether to log stack traces of abandoned connections.\n#zep.jdbc.pool.log_abandoned=false\n\n# Instead of abandoning connections, logs a warning if log_abandoned is true.\n# If this value is <= 0, then no suspect checking will be performed.\n#zep.jdbc.pool.suspect_timeout=0\n\n# The default number of retries performed when a database deadlock is encountered.\n#zep.jdbc.deadlock_retries=5\n\n# The core pool size used by the primary executor service.\n# By default, this is set to the number of processors in the system.\n#zep.executor.core_pool_size=4\n\n# The maximum pool size used by the primary executor service.\n# By default, this is set to the number of processors in the system.\n#zep.executor.max_pool_size=4\n\n# The maximum number of entries waiting to execute on the executor service.\n# Changed to default of Integer.MAX_VALUE because AMQP QOS settings prevent\n# overwhelming system.\n#zep.executor.queue_capacity=2147483647\n\n# AMQP QOS prefetch_count settings for queues consumed by zeneventserver.\n# These should only need to be changed if there is significant latency\n# between the AMQP server and zeneventserver.\n#zep.queue.$ZepHeartbeats.prefetch_count=100\n#zep.queue.$ZepMigratedEventSummary.prefetch_count=100\n#zep.queue.$ZepMigratedEventArchive.prefetch_count=100\n#zep.queue.$ZepModelChange.prefetch_count=1\n#zep.queue.$ZepZenEvents.prefetch_count=100\n\n# Index Directory\n#zep.index.dir=var/zeneventserver/index\n\n# Index RAM buffer size\n#zep.index.ram_buffer_size_mb=16.0\n\n# Heartbeat check interval in seconds\n#zep.heartbeat.interval_seconds=60\n\n# Database optimization is performed on this interval (in minutes). Specify an interval <= 0 to disable.\n#zep.database.optimize_minutes=720\n#zep.database.optimize_use_external_tool=true\n#zep.database.optimize_external_tool_path=/var/zenoss/percona/bin\n#zep.database.optimize_external_tool_options=\n#zep.database.optimize_elapsed_warn_threshold_seconds=120\n\n## Comma separated list of ZEP plug-ins to disable.\n#zep.plugins.disabled=\n\n## Whether to disable all external ZEP plug-ins (from ZenPacks).\n#zep.plugins.external.disabled=false\n\n## Optional configuration settings for each plug-in\n#plugin.<ID>.<NAME>=<VALUE>\n\n## The default number of trigger rule compilations to cache.\n#plugin.TriggerPlugin.triggerRuleCacheSize=200\n\n## Partitioning parameters for partitioned tables in ZEP.\n##\n## Values are:\n##\n##   partition.<table>.unit = The TimeUnit of each partition.\n##   partition.<table>.duration = The duration of each partition.\n##   partition.<table>.initial_past_partitions = The initial number of partitions to create in the past.\n##   partition.<table>.future_partitions = The number of future partitions to maintain.\n##\n\n#partition.event_archive.unit=DAYS\n#partition.event_archive.duration=1\n# We want to configure the maximum number of initial partitions for migration.\n#partition.event_archive.initial_past_partitions=90\n#partition.event_archive.future_partitions=3\n\n#partition.event_time.unit=HOURS\n#partition.event_time.duration=1\n# We want to configure the maximum number of initial partitions for migration.\n#partition.event_time.initial_past_partitions=0\n#partition.event_time.future_partitions=2\n\n# redis connection\n#zep.redis.host=localhost\n#zep.redis.port=6379\n\n# Max number of search terms allowed in a zeneventserver query for events\n# zep.query.clause_limit=1024\n\n## The amount of time zep will cache search results from the index\n#zep.query.cache_refresh_interval=10\n#zep.query.archive_cache_refresh_interval=60\n\n## Configuration to forward events to Zenoss Cloud\n#\nzep.zing.enabled=true\nzep.zing.project={{getContext . \"cse.project\"}}\nzep.zing.tenant={{getContext . \"cse.tenant\"}}\nzep.zing.source={{getContext . \"cse.source\"}}\nzep.zing.topic=event-in\nzep.zing.minimum_severity=INFO\n\n# Path to the credentials file in case a svc account key is needed\n#zep.zing.credentials=\n\n# if running with a pubsub emulator, set zep.zing.use_emulator to true and\n# zep.zing.emulator_url= to the ip:port of the emulator\n#\n#zep.zing.use_emulator=false\n#zep.zing.emulator_url=\n\n#zep.zing.max_pubsub_message_size=7340032\n#zep.zing.max_event_field_length=51200\n",
                "Filename": "/opt/zenoss/etc/zeneventserver.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0600"
            },
            "/opt/zenoss/etc/zeneventserver/jetty/jetty.ini": {
                "Content": "#===========================================================\n# Jetty start.jar arguments\n# Each line of this file is prepended to the command line \n# arguments # of a call to:\n#    java -jar start.jar [arg...]\n#===========================================================\n\n\n\n#===========================================================\n# If the arguments in this file include JVM arguments\n# (eg -Xmx512m) or JVM System properties (eg com.sun.???),\n# then these will not take affect unless the --exec \n# parameter is included or if the output from --dry-run\n# is executed like:\n#   eval $(java -jar start.jar --dry-run)\n#\n# Below are some recommended options for Sun's JRE\n#-----------------------------------------------------------\n# --exec\n# -Dcom.sun.management.jmxremote\n# -Xmx2000m\n# -Xmn512m\n# -verbose:gc\n# -XX:+PrintGCDateStamps\n# -XX:+PrintGCTimeStamps\n# -XX:+PrintGCDetails\n# -XX:+PrintTenuringDistribution\n# -XX:+PrintCommandLineFlags\n# -XX:+DisableExplicitGC\n# -XX:+UseConcMarkSweepGC\n# -XX:ParallelCMSThreads=2\n# -XX:+CMSClassUnloadingEnabled  \n# -XX:+UseCMSCompactAtFullCollection\n# -XX:CMSInitiatingOccupancyFraction=80\n#-----------------------------------------------------------\n\n\n#===========================================================\n# Start classpath OPTIONS.\n# These control what classes are on the classpath\n# for a full listing do\n#   java -jar start.jar --list-options\n#-----------------------------------------------------------\nOPTIONS=Server\n#-----------------------------------------------------------\n\n\n#===========================================================\n# Configuration files.\n# For a full list of available configuration files do\n#   java -jar start.jar --help\n#-----------------------------------------------------------\netc/zeneventserver/jetty/jetty.xml\netc/zeneventserver/jetty/jetty-deploy.xml\netc/zeneventserver/jetty/jetty-webapps.xml\n",
                "Filename": "/opt/zenoss/etc/zeneventserver/jetty/jetty.ini",
                "Owner": "zenoss:zenoss",
                "Permissions": "0600"
            },
            "/opt/zenoss/etc/zeneventserver/jetty/start.config": {
                "Content": "# This file controls what file are to be put on classpath or command line.\n#\n# Format is as follows:\n#\n# Each line contains entry in the format:\n#\n#  SUBJECT [ [!] CONDITION [AND|OR] ]*\n# \n# where SUBJECT: \n#   ends with \".class\" is the Main class to run.\n#   ends with \".xml\" is a configuration file for the command line\n#   ends with \"/\" is a directory from which to add all jar and zip files. \n#   ends with \"/*\" is a directory from which to add all unconsidered jar and zip files.\n#   ends with \"/**\" is a directory from which to recursively add all unconsidered jar and zip files.\n#   Containing = are used to assign system properties.\n#   Containing ~= are used to assign start properties.\n#   Containing /= are used to assign a canonical path.\n#   all other subjects are treated as files to be added to the classpath.\n#\n# ${name} is expanded to a start property\n# $(name) is expanded to either a start property or a system property. \n# The start property ${version} is defined as the version of the start.jar\n#\n# Files starting with \"/\" are considered absolute, all others are relative to\n# the home directory.\n#\n# CONDITION is one of:\n#   always\n#   never\n#   available classname        # true if class on classpath\n#   property name              # true if set as start property\n#   system   name              # true if set as system property\n#   exists file                # true if file/dir exists\n#   java OPERATOR version      # java version compared to literal\n#   nargs OPERATOR number      # number of command line args compared to literal\n#   OPERATOR := one of \"<\",\">\",\"<=\",\">=\",\"==\",\"!=\"\n#\n# CONTITIONS can be combined with AND OR or !, with AND being the assume\n# operator for a list of CONDITIONS.\n#\n# Classpath operations are evaluated on the fly, so once a class or jar is\n# added to the classpath, subsequent available conditions will see that class.\n#\n# The configuration file may be divided into sections with option names like:\n# [ssl,default]\n#\n# Clauses after a section header will only be included if they match one of the tags in the \n# options property.  By default options are set to \"default,*\" or the OPTIONS property may\n# be used to pass in a list of tags, eg. :\n#\n#    java -jar start.jar OPTIONS=jetty,jsp,ssl\n#\n# The tag '*' is always appended to the options, so any section with the * tag is always \n# applied.\n#\n\n# add a property defined classpath\n${path}.path                                     property path\n\n# add a property defined library directory\n#${lib}/**                                        exists ${lib}\n\n# Try different settings of jetty.home until the start.jar is found.\n#jetty.home=.                                     ! exists $(jetty.home)/start.jar \n#jetty.home=..                                    ! exists $(jetty.home)/start.jar \n#jetty.home=jetty-distribution/src/main/resources     ! exists $(jetty.home)/start.jar \n#jetty.home=../jetty-distribution/src/main/resources  ! exists $(jetty.home)/start.jar \n#jetty.home=.                                     ! exists $(jetty.home)/start.jar\n#jetty.home/=$(jetty.home)                        exists $(jetty.home)/start.jar\n\n# The main class to run\norg.eclipse.jetty.xml.XmlConfiguration.class\n${start.class}.class                             property start.class\n\n# The default configuration files\n#$(jetty.home)/etc/jetty.xml                      nargs == 0\n#./jetty-server/src/main/config/etc/jetty.xml     nargs == 0 AND ! exists $(jetty.home)/etc/jetty.xml\n\n# Default OPTIONS if not specified on the command line\nOPTIONS~=default,*                               ! property OPTIONS\n\n# Add a resources directory if it is there\n#[All,resources,default]\n#$(jetty.home)/resources/\n           \n# Add jetty modules\n[*]\n$(jetty.home)/lib/jetty-util-$(version).jar                                             ! available org.eclipse.jetty.util.StringUtil\n$(jetty.home)/lib/jetty-io-$(version).jar                                               ! available org.eclipse.jetty.io.Buffer\n\n[Server,All,xml,default]\n$(jetty.home)/lib/jetty-xml-$(version).jar                                              ! available org.eclipse.jetty.xml.XmlParser\n         \n[Server,All,server,default]\n$(jetty.home)/lib/servlet-api-2.5.jar                                                   ! available javax.servlet.ServletContext\n$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser\n$(jetty.home)/lib/jetty-continuation-$(version).jar                                     ! available org.eclipse.jetty.continuation.Continuation\n$(jetty.home)/lib/jetty-server-$(version).jar                                           ! available org.eclipse.jetty.server.Server\n                                             \n[Server,All,security,default]\n$(jetty.home)/lib/jetty-security-$(version).jar                                         ! available org.eclipse.jetty.security.LoginService\n                                                       \n[Server,All,servlet,default]\n$(jetty.home)/lib/servlet-api-2.5.jar                                                   ! available javax.servlet.ServletContext\n$(jetty.home)/lib/jetty-servlet-$(version).jar                                          ! available org.eclipse.jetty.servlet.ServletHandler\n                            \n[Server,All,webapp,default]\n$(jetty.home)/lib/jetty-webapp-$(version).jar                                           ! available org.eclipse.jetty.webapp.WebAppContext\n                                  \n[Server,All,deploy,default]\n$(jetty.home)/lib/jetty-deploy-$(version).jar                                           ! available org.eclipse.jetty.deploy.ContextDeployer\n           \n[Server,All,servlets,default]\n$(jetty.home)/lib/jetty-servlets-$(version).jar                                         ! available org.eclipse.jetty.servlets.WelcomeFilter\n\n[All,rewrite]\n$(jetty.home)/lib/jetty-rewrite-$(version).jar                                          ! available org.eclipse.jetty.rewrite.handler.RewriteHandler\n\n[All,jmx]\n$(jetty.home)/lib/jetty-jmx-$(version).jar                                              ! available org.eclipse.jetty.jmx.MBeanContainer\n                  \n[All,ajp]\n$(jetty.home)/lib/jetty-ajp-$(version).jar                                              ! available org.eclipse.jetty.ajp.Ajp13Connection      \n                   \n[All,plus,jndi]\n$(jetty.home)/lib/jetty-jndi-${version}.jar                                             ! available org.eclipse.jetty.jndi.ContextFactory\n$(jetty.home)/lib/jetty-plus-${version}.jar                                             ! available org.eclipse.jetty.plus.jndi.NamingEntry\n$(jetty.home)/lib/jndi/**                                                               exists $(jetty.home)/lib/jndi \n\n[All,annotations]\n$(jetty.home)/lib/jetty-annotations-$(version).jar                                      ! available org.eclipse.jetty.annotations.AnnotationFinder\n$(jetty.home)/lib/annotations/**                                                        exists $(jetty.home)/lib/jndi \n          \n[All,setuid]\n$(jetty.home)/lib/jetty-setuid-$(version).jar                                           ! available org.eclipse.jetty.setuid.SetUID\n$(jetty.home)/lib/setuid/**                                                       \n                                    \n[All,policy]\n$(jetty.home)/lib/jetty-policy-$(version).jar                                           ! available org.eclipse.jetty.policy.JettyPolicy\n                                    \n[All,Client,client]\n$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser\n$(jetty.home)/lib/jetty-client-$(version).jar                                           ! available org.eclipse.jetty.client.HttpClient\n       \n[Client]\n$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.eclipse.jetty.http.HttpParser\n\n[All,websocket]\n$(jetty.home)/lib/jetty-websocket-$(version).jar                                        ! available org.eclipse.jetty.websocket.WebSocket\n       \n[All,overlay,overlays]\n$(jetty.home)/lib/jetty-overlay-deployer-$(version).jar                                 ! available org.eclipse.jetty.overlay.OverlayedAppProvider\n       \n      \n# Add ext if it exists\n[Server,All,default,ext]        \n$(jetty.home)/lib/ext/**\n\n# Add all other sub-directories in /lib/ as options in a dynamic way\n#[All,=$(jetty.home)/lib/**]        \n\n",
                "Filename": "/opt/zenoss/etc/zeneventserver/jetty/start.config",
                "Owner": "zenoss:zenoss",
                "Permissions": "0600"
            },
            "/opt/zenoss/etc/zeneventserver/logback.xml": {
                "Content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n##############################################################################\n#\n# Copyright (C) Zenoss, Inc. 2016, all rights reserved.\n# \n# This content is made available according to terms specified in\n# License.zenoss under the directory where your Zenoss product is installed.\n#\n##############################################################################\n-->\n\n\n<configuration scan=\"true\">\n    <statusListener class=\"ch.qos.logback.core.status.OnConsoleStatusListener\" />\n\n    <if condition='isNull(\"ZENOSS_DAEMON\")'>\n        <then>\n            <appender name=\"APPENDER\" class=\"ch.qos.logback.core.ConsoleAppender\">\n                <encoder>\n                    <pattern>%date{yyyy-MM-dd'T'HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>\n                </encoder>\n            </appender>\n        </then>\n        <else>\n            <appender name=\"APPENDER\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n                <file>${ZENHOME:-.}/log/zeneventserver.log</file>\n                <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n                    <!-- daily rollover -->\n                    <fileNamePattern>${ZENHOME:-.}/log/zeneventserver.log.%i</fileNamePattern>\n                    <!-- keep up to 3 logs by default -->\n                    <minIndex>1</minIndex>\n                    <maxIndex>3</maxIndex>\n                </rollingPolicy>\n                <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n                    <maxFileSize>10MB</maxFileSize>\n                </triggeringPolicy>\n                <encoder>\n                    <pattern>%date{yyyy-MM-dd'T'HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>\n                </encoder>\n            </appender>\n        </else>\n    </if>\n\n    <contextName>zeneventserver</contextName>\n    <jmxConfigurator />\n    <logger name=\"org.springframework\" level=\"WARN\"/>\n    <logger name=\"ch.qos.logback\" level=\"WARN\"/>\n    <logger name=\"com.zenoss\" level=\"${ZENOSS_LOG_LEVEL:-INFO}\" />\n    <logger name=\"org.zenoss\" level=\"${ZENOSS_LOG_LEVEL:-INFO}\" />\n    <root level=\"INFO\">\n        <appender-ref ref=\"APPENDER\"/>\n    </root>\n</configuration>\n",
                "Filename": "/opt/zenoss/etc/zeneventserver/logback.xml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0600"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "bv11l0njvi35iusmi9ccwq062",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zep --execsql=\";\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "4G",
        "RAMThreshold": 0,
        "RunAs": "zenoss",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 2,
        "Startup": "/opt/zenoss/bin/zeneventserver run_quiet",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/opt/zenoss/var/zeneventserver",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zeneventserver",
                "Type": ""
            },
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zeneventd.conf": {
                "Content": "#\n# Configuration file for zeneventd\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zeneventd.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Cycle, in seconds, for maintenance tasks.\n#  Default is 60., default: 60\n#maintenancecycle 60\n#\n# Force sync() before processing every\n#  event; default is to sync() no more\n#  often than once every 1/2 second.,\n#  default: False\n#synceveryevent False\n#\n# Sets the number of messages each worker\n#  gets from the queue at any given time.\n#  Default is 1. Change this only if event\n#  processing is deemed slow. Note that\n#  increasing the value increases the\n#  probability that events will be processed\n#  out of order., default: 1\n#messagesperworker 1\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#\n# Timeout(in seconds) for processing each event.\n#  The timeout may be extended for a transforms using,\n#  signal.alarm(<timeout seconds>) in the transform.\n#  default: 0 (disabled)\n#process-event-timeout 0\n#\n",
                "Filename": "/opt/zenoss/etc/zeneventd.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Performs event mappings, transformations, and other data-driven event processing tasks",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zeneventd.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "stable_workers": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/zeneventd/stable_workers",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "PREFER_SEPARATE",
        "ID": "94y3o3ym6rkyz2yt4aaxnqj2d",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zeneventd.log",
                "Type": "zeneventd"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zeneventd",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zeneventd.conf": {
                "Content": "#\n# Configuration file for zeneventd\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zeneventd.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Cycle, in seconds, for maintenance tasks.\n#  Default is 60., default: 60\n#maintenancecycle 60\n#\n# Force sync() before processing every\n#  event; default is to sync() no more\n#  often than once every 1/2 second.,\n#  default: False\n#synceveryevent False\n#\n# Sets the number of messages each worker\n#  gets from the queue at any given time.\n#  Default is 1. Change this only if event\n#  processing is deemed slow. Note that\n#  increasing the value increases the\n#  probability that events will be processed\n#  out of order., default: 1\n#messagesperworker 1\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n# Heartbeat timeout, default: 900 sec.\n#heartbeattimeout 900\n#\n# Timeout(in seconds) for processing each event.\n#  The timeout may be extended for a transforms using,\n#  signal.alarm(<timeout seconds>) in the transform.\n#  default: 0 (disabled)\n#process-event-timeout 0\n#\n",
                "Filename": "/opt/zenoss/etc/zeneventd.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "bv11l0njvi35iusmi9ccwq062",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/usr/bin/nice -n 10 /opt/zenoss/bin/zeneventd run -c --logfileonly \"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": {
            "check": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenimpactgraph.sh run --check",
                "CommitOnSuccess": false,
                "Description": ""
            },
            "prune": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenimpactgraph.sh run --prune",
                "CommitOnSuccess": false,
                "Description": ""
            },
            "queue": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenimpactgraph.sh run --queue",
                "CommitOnSuccess": false,
                "Description": ""
            },
            "stats": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenimpactserver.sh stats",
                "CommitOnSuccess": false,
                "Description": ""
            },
            "thread": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenimpactserver.sh thread",
                "CommitOnSuccess": false,
                "Description": ""
            },
            "update": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenimpactgraph.sh run --update",
                "CommitOnSuccess": false,
                "Description": ""
            }
        },
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenimpactstate.conf": {
                "Content": "# zenimpactstate.conf\n",
                "Filename": "/opt/zenoss/etc/zenimpactstate.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Performs state calculations and event filtering for Impact",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "amqp_established": {
                "Interval": 5,
                "Script": "netstat | awk '/:amqp.*ESTABLISHED/{count++}END{exit count==0}'; exit $?",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenimpactstate.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "d98sq2vn7hmv20useqni6zasn",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zenimpactstate.log",
                "Type": "zenimpactstate"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": true,
                            "format": "",
                            "id": "length",
                            "legend": "Duplicated events",
                            "metric": "impact.statechange.dedupNo",
                            "metricSource": "impact.stateQueueDedup",
                            "name": "length",
                            "rate": false,
                            "rateOptions": null,
                            "type": ""
                        }
                    ],
                    "description": "Duplicated event removed from event queue",
                    "footer": false,
                    "format": "",
                    "id": "stateQueueDedup",
                    "maxy": null,
                    "miny": null,
                    "name": "Duplicated Events",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "d98sq2vn7hmv20useqni6zasn"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Duplicated events"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "The number of removals of the duplicated state change events",
                    "ID": "impact.stateQueueDedup",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "impact.statechange.dedupNo",
                            "Name": "State Change Event Queue Deduplication",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "State Change Event Queue Deduplication",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"impact.statechange.dedupNo\",\"tags\":{\"controlplane_service_id\":[\"d98sq2vn7hmv20useqni6zasn\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "zenimpactstate",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenimpactstate.conf": {
                "Content": "# zenimpactstate.conf\n",
                "Filename": "/opt/zenoss/etc/zenimpactstate.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "bv11l0njvi35iusmi9ccwq062",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/usr/bin/nice -n 10 /opt/zenoss/bin/zenimpactstate run -c --duallog \"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "bv11l0njvi35iusmi9ccwq062",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Events",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "bf71nji53ltppe87g8dxjn95x",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "",
        "Tags": [
            "zenoss-events"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": {
            "debug": "bash -c 'curl -X POST http://localhost:58443/tasks/debugtoggle'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/metric-consumer-app/configuration.yaml": {
                "Content": "authEnabled: true\n\nlogging:\n    level: INFO\n\nhttp:\n  port: 8443\n  adminPort: 58443\n  connectorType: nonblocking\n  ssl:\n      keyStore: etc/metric-consumer-app/cert/ssl.pfx\n      keyStorePassword: zapp_pass\n      keyStoreType:     pkcs12\n  requestLog:\n    console:\n      enabled: false\n\nwebSocketConfiguration:\n    maxTextMessageSize: 10485760\n\nmetricService:\n    jobSize: 1000\n    highCollisionMark: 2000000\n    maxClientWaitTime: 60000\n    minTimeBetweenBroadcast: 200\n    tsdbWriterThreads: 1\n    maxIdleTime: 10000\n    maxConnectionBackOff: 5000\n    minConnectionBackOff: 100\n    zingConfiguration:\n        enabled: true\n        batchSize: 1000\n        threadPoolSize: 5\n        writerThreads: 5\n        endpoint: \"{{(getContext . \"global.conf.zing-connector-url\")}}/api/metrics/ingest\"\n    openTsdbClientPool:\n      maxKeepAliveTime: 300000\n      minTestTime:       60000\n      clientBufferSize:  65536\n      clients:\n        - {host: localhost, port: 4242}\n\n      clientFactory:\n        keepAlive:          true\n        connectTimeout:     1000\n        soTimeout:          1000\n\nmanagedReporter:\n    metricReporters:\n      - {posterType: http, username: \"$env[CONTROLPLANE_CONSUMER_USERNAME]\", password: \"$env[CONTROLPLANE_CONSUMER_PASSWORD]\", urlEnvironment: \"CONTROLPLANE_CONSUMER_URL\"}\n      - {posterType: bean, beanName: metric-service-poster}\n\nzenossCredentials:\n    username: \"{{(getContext . \"global.conf.zauth-username\")}}\"\n    password: \"{{(getContext . \"global.conf.zauth-password\")}}\"\n",
                "Filename": "/opt/zenoss/etc/metric-consumer-app/configuration.yaml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/metric-consumer-app/metric-consumer-app_supervisor.conf": {
                "Content": "[program:metric-consumer-app]\ncommand=bin/metric-consumer-app.sh\nautorestart=true\nautostart=true\nstartsecs=5\nenvironment=JVM_ARGS=\"-Xmx{{bytesToMB .RAMCommitment}}m\"\n\n[program:metric-consumer_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/jvmstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=2\nstdout_logfile=log/%(program_name)s.log\n",
                "Filename": "/opt/zenoss/etc/metric-consumer-app/metric-consumer-app_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Pushes metric data into OpenTSDB",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "metric_consumer",
                "ApplicationTemplate": "metric_consumer",
                "Name": "metric_consumer",
                "PortList": null,
                "PortNumber": 8443,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "opentsdb-writer",
                "ApplicationTemplate": "opentsdb-writer",
                "Name": "opentsdb-writer",
                "PortList": null,
                "PortNumber": 4242,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "listening": {
                "Interval": 10,
                "Script": "nmap -oG - -Pn -sS -p 8443 127.0.0.1 | grep -q 8443/open",
                "Timeout": 0,
                "Tolerance": 0
            },
            "stats_listening": {
                "Interval": 5,
                "Script": "curl -A 'metric_consumer stats_listening healthcheck' -s http://localhost:58443/metrics | grep -q org.zenoss.app.consumer.metric.impl.MetricsQueue",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zing-connector-answering": {
                "Interval": 10,
                "Script": "test \"$(curl localhost:9000/ping)\" = \"PONG\"",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "1fzl7mtt1sj7xwea7nki1vhh4",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "zappdaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/metric-consumer-app.log",
                "Type": "metricconsumer"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "queued",
                            "legend": "queued",
                            "metric": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalInFlight.count",
                            "metricSource": "MetricsQueue.inFlight",
                            "name": "queued",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Queued Metric Count",
                    "footer": false,
                    "format": "",
                    "id": "queuedMetrics",
                    "maxy": null,
                    "miny": null,
                    "name": "Queued Metrics",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1fzl7mtt1sj7xwea7nki1vhh4"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Queued Metrics"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "queued-zing",
                            "legend": "queued - zing",
                            "metric": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalInFlight.count",
                            "metricSource": "ZingQueue.inFlight",
                            "name": "queued",
                            "rate": false,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Zing Queued Metric Count",
                    "footer": false,
                    "format": "",
                    "id": "zingQueuedMetrics",
                    "maxy": null,
                    "miny": null,
                    "name": "Zing Queued Metrics",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1fzl7mtt1sj7xwea7nki1vhh4"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Queued Metrics"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "outgoing",
                            "legend": "outgoing",
                            "metric": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.count",
                            "metricSource": "MetricsQueue.totalOutgoing",
                            "name": "outgoing",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "incoming",
                            "legend": "incoming",
                            "metric": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.count",
                            "metricSource": "MetricsQueue.totalIncoming",
                            "name": "incoming",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "lost",
                            "legend": "lost",
                            "metric": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.count",
                            "metricSource": "MetricsQueue.totalLost",
                            "name": "lost",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints received / transmitted per second.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1fzl7mtt1sj7xwea7nki1vhh4"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Data Points"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "outgoing-zing",
                            "legend": "outgoing - zing",
                            "metric": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.count",
                            "metricSource": "ZingQueue.totalOutgoing",
                            "name": "outgoing",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "incoming-zing",
                            "legend": "incoming - zing",
                            "metric": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.count",
                            "metricSource": "ZingQueue.totalIncoming",
                            "name": "incoming",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "lost-zing",
                            "legend": "lost - zing",
                            "metric": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.count",
                            "metricSource": "ZingQueue.totalLost",
                            "name": "lost",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints received / transmitted per second.",
                    "footer": false,
                    "format": "",
                    "id": "zingDataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Zing Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "1fzl7mtt1sj7xwea7nki1vhh4"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Data Points - Zing"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "JVM File Descriptor Usage Statistics",
                    "ID": "jvm.fd_usage",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.fd_usage",
                            "Name": "FD Usage Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM File Descriptor Usage",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.fd_usage\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Thread Type Statistics",
                    "ID": "jvm.thread",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread_count",
                            "Name": "JVM Thread Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.daemon_thread_count",
                            "Name": "JVM Daemon Thread Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Thread",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.thread_count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.daemon_thread_count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM heap vs. non-heap memory usage",
                    "ID": "jvm.memory",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.heap_usage",
                            "Name": "JVM Heap Memory Usage",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.non_heap_usage",
                            "Name": "JVM Non-Heap Memory Usage",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Memory",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.memory.heap_usage\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.memory.non_heap_usage\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Memory Pool Usage",
                    "ID": "jvm.memory.memory_pool_usages",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.Code_Cache",
                            "Name": "Code Cache",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.PS_Eden_Space",
                            "Name": "Eden Space",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.PS_Old_Gen",
                            "Name": "Old Generation",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.PS_Perm_Gen",
                            "Name": "Permanent Generation",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.PS_Survivor_Space",
                            "Name": "Survivor Space",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Memory Pool",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.memory.memory_pool_usages.Code_Cache\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.memory.memory_pool_usages.PS_Eden_Space\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.memory.memory_pool_usages.PS_Old_Gen\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.memory.memory_pool_usages.PS_Perm_Gen\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.memory.memory_pool_usages.PS_Survivor_Space\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Garbage Collection Statistics",
                    "ID": "jvm.gc",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_MarkSweep.runs",
                            "Name": "JVM Garbage Collection MarkSweep Runs",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_MarkSweep.time",
                            "Name": "JVM Garbage Collection MarkSweep Time",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_Scavenge.runs",
                            "Name": "JVM Garbage Collection Scavenge Runs",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_Scavenge.time",
                            "Name": "JVM Garbage Collection Scavenge Time",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Garbage Collection",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.gc.PS_MarkSweep.runs\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.gc.PS_MarkSweep.time\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.gc.PS_Scavenge.runs\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.gc.PS_Scavenge.time\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Thread States",
                    "ID": "jvm.threads-states",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.blocked",
                            "Name": "JVM Threads in Blocked State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.new",
                            "Name": "JVM Threads in New State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.runnable",
                            "Name": "JVM Threads in Runnable State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.terminated",
                            "Name": "JVM Threads in Terminated State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.timed_waiting",
                            "Name": "JVM Threads in Timed Waiting State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.waiting",
                            "Name": "JVM Threads in Waiting State",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Thread States",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.thread-states.blocked\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.thread-states.new\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.thread-states.runnable\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.thread-states.terminated\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.thread-states.timed_waiting\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"jvm.thread-states.waiting\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Total Incoming Metric Statistics",
                    "ID": "MetricsQueue.totalIncoming",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.count",
                            "Name": "MetricsQueue Total Incoming Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.meanRate",
                            "Name": "MetricsQueue Total Incoming Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.1MinuteRate",
                            "Name": "MetricsQueue Total Incoming 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.5MinuteRate",
                            "Name": "MetricsQueue Total Incoming 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.15MinuteRate",
                            "Name": "MetricsQueue Total Incoming 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Total Incoming Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.meanRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalIncoming.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Total Outgoing Metric Statistics",
                    "ID": "MetricsQueue.totalOutgoing",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.count",
                            "Name": "MetricsQueue Total Outgoing Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.meanRate",
                            "Name": "MetricsQueue Total Outgoing Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.1MinuteRate",
                            "Name": "MetricsQueue Total Outgoing 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.5MinuteRate",
                            "Name": "MetricsQueue Total Outgoing 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.15MinuteRate",
                            "Name": "MetricsQueue Total Outgoing 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Total Outgoing Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.meanRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalOutgoing.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Total Lost Metric Statistics",
                    "ID": "MetricsQueue.totalLost",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.count",
                            "Name": "MetricsQueue Total Lost Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.meanRate",
                            "Name": "MetricsQueue Total Lost Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.1MinuteRate",
                            "Name": "MetricsQueue Total Lost 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.5MinuteRate",
                            "Name": "MetricsQueue Total Lost 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.15MinuteRate",
                            "Name": "MetricsQueue Total Lost 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Total Lost Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.meanRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalLost.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Total Lost Zing Metric Statistics",
                    "ID": "ZingQueue.totalLost",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.count",
                            "Name": "MetricsQueue Total Lost Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.meanRate",
                            "Name": "MetricsQueue Total Lost Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.1MinuteRate",
                            "Name": "MetricsQueue Total Lost 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.5MinuteRate",
                            "Name": "MetricsQueue Total Lost 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.15MinuteRate",
                            "Name": "MetricsQueue Total Lost 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Total Lost Zing Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.meanRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalLost.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Total Incoming Zing Metric Statistics",
                    "ID": "ZingQueue.totalIncoming",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.count",
                            "Name": "ZingQueue Total Incoming Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.meanRate",
                            "Name": "ZingQueue Total Incoming Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.1MinuteRate",
                            "Name": "ZingQueue Total Incoming 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.5MinuteRate",
                            "Name": "ZingQueue Total Incoming 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.15MinuteRate",
                            "Name": "ZingQueue Total Incoming 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Total Incoming Zing Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.meanRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalIncoming.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Total Outgoing Zing Metric Statistics",
                    "ID": "ZingQueue.totalOutgoing",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.count",
                            "Name": "MetricsQueue Total Outgoing Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.meanRate",
                            "Name": "MetricsQueue Total Outgoing Mean Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.1MinuteRate",
                            "Name": "MetricsQueue Total Outgoing 1 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.5MinuteRate",
                            "Name": "MetricsQueue Total Outgoing 5 Minute Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.15MinuteRate",
                            "Name": "ZingQueue Total Outgoing 15 MinuteRate",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Total Outgoing Zing Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.meanRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalOutgoing.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Total Errors",
                    "ID": "MetricsQueue.totalErrors",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalErrors.count",
                            "Name": "MetricsQueue Total Errors Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Total Errors",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalErrors.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Queued Metric Count",
                    "ID": "MetricsQueue.inFlight",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalInFlight.count",
                            "Name": "MetricsQueue Queued Metric count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Queued Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.impl.MetricsQueue.totalInFlight.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "Zing Queued Metric Count",
                    "ID": "ZingQueue.inFlight",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalInFlight.count",
                            "Name": "ZingQueue Queued Metric count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "Queued Metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.zing.ZingQueue.totalInFlight.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "HTTP Post Statistics for the MetricsWebResource",
                    "ID": "MetricsWebResource.post",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.count",
                            "Name": "MetricWebResource Total Post",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.meanRate",
                            "Name": "MetricWebResource Average Response Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.1MinuteRate",
                            "Name": "MetricWebResource 1 Minute Moving Average Response Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.5MinuteRate",
                            "Name": "MetricWebResource 5 Minute Moving Average Response Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.15MinuteRate",
                            "Name": "MetricWebResource 15 Minute Moving Average Response Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.max",
                            "Name": "MetricWebResource Content-Length Max",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.mean",
                            "Name": "MetricWebResource Content-Length Mean",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.median",
                            "Name": "MetricWebResource Content-Length Median",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.75Percentile",
                            "Name": "MetricWebResource Content-Length Histogram 75%",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.95Percentile",
                            "Name": "MetricWebResource Content-Length Histogram 95%",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.98Percentile",
                            "Name": "MetricWebResource Content-Length Histogram 98%",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.99Percentile",
                            "Name": "MetricWebResource Content-Length Histogram 99%",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.999Percentile",
                            "Name": "MetricWebResource Content-Length Histogram 99.9%",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "MetricsWebResource Post Statistics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.count\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.meanRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.max\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.mean\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.median\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.75Percentile\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.95Percentile\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.98Percentile\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.99Percentile\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.consumer.metric.remote.MetricWebResource.post.999Percentile\",\"tags\":{\"controlplane_service_id\":[\"1fzl7mtt1sj7xwea7nki1vhh4\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "MetricConsumer",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/metric-consumer-app/configuration.yaml": {
                "Content": "authEnabled: true\n\nlogging:\n    level: INFO\n\nhttp:\n  port: 8443\n  adminPort: 58443\n  connectorType: nonblocking\n  ssl:\n      keyStore: etc/metric-consumer-app/cert/ssl.pfx\n      keyStorePassword: zapp_pass\n      keyStoreType:     pkcs12\n  requestLog:\n    console:\n      enabled: false\n\nwebSocketConfiguration:\n    maxTextMessageSize: 10485760\n\nmetricService:\n    jobSize: 1000\n    highCollisionMark: 2000000\n    maxClientWaitTime: 60000\n    minTimeBetweenBroadcast: 200\n    tsdbWriterThreads: 1\n    maxIdleTime: 10000\n    maxConnectionBackOff: 5000\n    minConnectionBackOff: 100\n    zingConfiguration:\n        enabled: true\n        batchSize: 1000\n        threadPoolSize: 5\n        writerThreads: 5\n        endpoint: \"{{(getContext . \"global.conf.zing-connector-url\")}}/api/metrics/ingest\"\n    openTsdbClientPool:\n      maxKeepAliveTime: 300000\n      minTestTime:       60000\n      clientBufferSize:  65536\n      clients:\n        - {host: localhost, port: 4242}\n\n      clientFactory:\n        keepAlive:          true\n        connectTimeout:     1000\n        soTimeout:          1000\n\nmanagedReporter:\n    metricReporters:\n      - {posterType: http, username: \"$env[CONTROLPLANE_CONSUMER_USERNAME]\", password: \"$env[CONTROLPLANE_CONSUMER_PASSWORD]\", urlEnvironment: \"CONTROLPLANE_CONSUMER_URL\"}\n      - {posterType: bean, beanName: metric-service-poster}\n\nzenossCredentials:\n    username: \"{{(getContext . \"global.conf.zauth-username\")}}\"\n    password: \"{{(getContext . \"global.conf.zauth-password\")}}\"\n",
                "Filename": "/opt/zenoss/etc/metric-consumer-app/configuration.yaml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/metric-consumer-app/metric-consumer-app_supervisor.conf": {
                "Content": "[program:metric-consumer-app]\ncommand=bin/metric-consumer-app.sh\nautorestart=true\nautostart=true\nstartsecs=5\nenvironment=JVM_ARGS=\"-Xmx{{bytesToMB .RAMCommitment}}m\"\n\n[program:metric-consumer_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/jvmstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=2\nstdout_logfile=log/%(program_name)s.log\n",
                "Filename": "/opt/zenoss/etc/metric-consumer-app/metric-consumer-app_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "56fzhcha1hr39y5k50qgvzua",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "2G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 4,
        "Startup": "su - zenoss -c \"cd /opt/zenoss && /bin/supervisord -n -c etc/metric-consumer-app/supervisord.conf\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": {
            "debug": "bash -c 'curl -X POST http://localhost:58888/tasks/debugtoggle'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/central-query/central-query_supervisor.conf": {
                "Content": "[program:central-query]\ncommand=bin/central-query.sh\nautorestart=true\nautostart=true\nstartsecs=5\nenvironment=JVM_ARGS=\"-Xmx{{bytesToMB .RAMCommitment}}m\"\n\n[program:central-query_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/jvmstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=2\nstdout_logfile=log/%(program_name)s.log\n",
                "Filename": "/opt/zenoss/etc/central-query/central-query_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/central-query/configuration.yaml": {
                "Content": "authEnabled: true\nlogging:\n  level: INFO\n  loggers:\n    \"org.zenoss\": INFO\nmetrics:\n  defaultReturnSet: EXACT\n  defaultStartTime: 1h-ago\n  defaultEndTime: now\n  defaultSeries: true\n  openTsdbUrl: http://127.0.0.1:4242\n  defaultTsdTimeZone: UTC\n  connectionTimeoutMs: 20000\n  sendRateOptions: false\n  ignoreRateOption: true\n  rateOptionCutoffTs: {{(getContext . \"centralquery.ratecutoff\")}}\n\n  # parameters to configure connection pool for querying OpenTsdb:\n  # Total connections allowed per pool\n  maxTotalPoolConnections: 100\n  # Max number of connections for a given route\n  maxPoolConnectionsPerRoute: 100\n\n  # parameters to configure thread pool for querying OpenTsdb:\n  # Core number of threads in thread pool\n  executorThreadPoolCoreSize: 20\n  # Maximum number of threads in thread pool\n  executorThreadPoolMaxSize: 250\n\nproxyConfiguration:\n  hostname: 127.0.0.1\n  port: 8080\nhttp:\n  connectorType: nonblocking\n  port: 8888\n  adminPort: 58888\n  ssl:\n      #Example is using a java keystore in the target directory.\n      keyStore: ${ssl.cert.dir}/ssl.pfx\n      keyStorePassword: zapp_pass\n      keyStoreType: pkcs12\n  requestLog:\n    console:\n      enabled: false\n\nmanagedReporter:\n    metricReporters:\n      - {posterType: http, username: \"$env[CONTROLPLANE_CONSUMER_USERNAME]\", password: \"$env[CONTROLPLANE_CONSUMER_PASSWORD]\", urlEnvironment: \"CONTROLPLANE_CONSUMER_URL\"}\n      - {posterType: http, username: \"{{(getContext . \"global.conf.zauth-username\")}}\", password: \"{{(getContext . \"global.conf.zauth-password\")}}\", protocol: http, host: localhost, port: 8080, apiPath: /api/metrics/store}\n",
                "Filename": "/opt/zenoss/etc/central-query/configuration.yaml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Zenoss Central Query Service and JavaScript Library",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "central_query",
                "ApplicationTemplate": "central_query",
                "Name": "central_query",
                "PortList": null,
                "PortNumber": 8888,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "opentsdb-reader",
                "ApplicationTemplate": "opentsdb-reader",
                "Name": "opentsdb-reader",
                "PortList": null,
                "PortNumber": 4242,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "opentsdb-writer",
                "ApplicationTemplate": "opentsdb-writer",
                "Name": "opentsdb-writer",
                "PortList": null,
                "PortNumber": 4243,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "curl -A 'central_query answering healthcheck' --fail --max-time 4  http://localhost:58888/healthcheck",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "3346l2yn1n2xmi7ej8v6gt86n",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "zappdaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/central-query.log",
                "Type": "centralquery"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "Queries",
                            "legend": "Queries",
                            "metric": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.count",
                            "metricSource": "MetricResources.post",
                            "name": "Queries",
                            "rate": true,
                            "rateOptions": null,
                            "type": "line"
                        }
                    ],
                    "description": "Number of queries received per second.",
                    "footer": false,
                    "format": "",
                    "id": "queryRate",
                    "maxy": null,
                    "miny": null,
                    "name": "Query Rate",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "3346l2yn1n2xmi7ej8v6gt86n"
                        ]
                    },
                    "type": "line",
                    "units": "",
                    "yAxisLabel": "Query Rate"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "JVM File Descriptor Usage Statistics",
                    "ID": "jvm.fd_usage",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.fd_usage",
                            "Name": "FD Usage Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM File Descriptor Usage",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.fd_usage\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Thread Type Statistics",
                    "ID": "jvm.thread",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread_count",
                            "Name": "JVM Thread Count",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.daemon_thread_count",
                            "Name": "JVM Daemon Thread Count",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Thread",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.thread_count\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.daemon_thread_count\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM heap vs. non-heap memory usage",
                    "ID": "jvm.memory",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.heap_usage",
                            "Name": "JVM Heap Memory Usage",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.non_heap_usage",
                            "Name": "JVM Non-Heap Memory Usage",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Memory",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.memory.heap_usage\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.memory.non_heap_usage\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Memory Pool Usage",
                    "ID": "jvm.memory.memory_pool_usages",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.Code_Cache",
                            "Name": "Code Cache",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.PS_Eden_Space",
                            "Name": "Eden Space",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.PS_Old_Gen",
                            "Name": "Old Generation",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.PS_Perm_Gen",
                            "Name": "Permanent Generation",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.memory.memory_pool_usages.PS_Survivor_Space",
                            "Name": "Survivor Space",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Memory Pool",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.memory.memory_pool_usages.Code_Cache\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.memory.memory_pool_usages.PS_Eden_Space\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.memory.memory_pool_usages.PS_Old_Gen\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.memory.memory_pool_usages.PS_Perm_Gen\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.memory.memory_pool_usages.PS_Survivor_Space\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Garbage Collection Statistics",
                    "ID": "jvm.gc",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_MarkSweep.runs",
                            "Name": "JVM Garbage Collection MarkSweep Runs",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_MarkSweep.time",
                            "Name": "JVM Garbage Collection MarkSweep Time",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_Scavenge.runs",
                            "Name": "JVM Garbage Collection Scavenge Runs",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.gc.PS_Scavenge.time",
                            "Name": "JVM Garbage Collection Scavenge Time",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Garbage Collection",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.gc.PS_MarkSweep.runs\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.gc.PS_MarkSweep.time\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.gc.PS_Scavenge.runs\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.gc.PS_Scavenge.time\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "JVM Thread States",
                    "ID": "jvm.threads-states",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.blocked",
                            "Name": "JVM Threads in Blocked State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.new",
                            "Name": "JVM Threads in New State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.runnable",
                            "Name": "JVM Threads in Runnable State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.terminated",
                            "Name": "JVM Threads in Terminated State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.timed_waiting",
                            "Name": "JVM Threads in Timed Waiting State",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "jvm.thread-states.waiting",
                            "Name": "JVM Threads in Waiting State",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "JVM Thread States",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"jvm.thread-states.blocked\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.thread-states.new\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.thread-states.runnable\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.thread-states.terminated\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.thread-states.timed_waiting\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"jvm.thread-states.waiting\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                },
                {
                    "Description": "HTTP Post Statistics for the MetricsWebResource",
                    "ID": "MetricsResources.post",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.count",
                            "Name": "MetricResource Total Post",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.meanRate",
                            "Name": "MetricResource Average Response Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.1MinuteRate",
                            "Name": "MetricResource 1 Minute Moving Average Response Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.5MinuteRate",
                            "Name": "MetricResource 5 Minute Moving Average Response Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.15MinuteRate",
                            "Name": "MetricResource 15 Minute Moving Average Response Rate",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.max",
                            "Name": "MetricResource Content-Length Max",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.min",
                            "Name": "MetricResource Content-Length Max",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.mean",
                            "Name": "MetricResource Content-Length Mean",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.median",
                            "Name": "MetricResource Content-Length Median",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.stdev",
                            "Name": "MetricResource Content-Length Stdev",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.75Percentile",
                            "Name": "MetricResource Content-Length Histogram 75%",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.95Percentile",
                            "Name": "MetricResource Content-Length Histogram 95%",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.98Percentile",
                            "Name": "MetricResource Content-Length Histogram 98%",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.99Percentile",
                            "Name": "MetricResource Content-Length Histogram 99%",
                            "ResetValue": 0,
                            "Unit": ""
                        },
                        {
                            "BuiltIn": false,
                            "Counter": false,
                            "Description": "",
                            "ID": "ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.999Percentile",
                            "Name": "MetricResource Content-Length Histogram 99.9%",
                            "ResetValue": 0,
                            "Unit": ""
                        }
                    ],
                    "Name": "MetricResources Post Statistics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.count\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.meanRate\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.1MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.5MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.15MinuteRate\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.max\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.min\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.mean\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.median\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.stdev\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.75Percentile\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.95Percentile\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.98Percentile\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.99Percentile\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricservice.api.metric.remote.MetricResources.query.999Percentile\",\"tags\":{\"controlplane_service_id\":[\"3346l2yn1n2xmi7ej8v6gt86n\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "CentralQuery",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/central-query/central-query_supervisor.conf": {
                "Content": "[program:central-query]\ncommand=bin/central-query.sh\nautorestart=true\nautostart=true\nstartsecs=5\nenvironment=JVM_ARGS=\"-Xmx{{bytesToMB .RAMCommitment}}m\"\n\n[program:central-query_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/jvmstats.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=2\nstdout_logfile=log/%(program_name)s.log\n",
                "Filename": "/opt/zenoss/etc/central-query/central-query_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            },
            "/opt/zenoss/etc/central-query/configuration.yaml": {
                "Content": "authEnabled: true\nlogging:\n  level: INFO\n  loggers:\n    \"org.zenoss\": INFO\nmetrics:\n  defaultReturnSet: EXACT\n  defaultStartTime: 1h-ago\n  defaultEndTime: now\n  defaultSeries: true\n  openTsdbUrl: http://127.0.0.1:4242\n  defaultTsdTimeZone: UTC\n  connectionTimeoutMs: 20000\n  sendRateOptions: false\n  ignoreRateOption: true\n  rateOptionCutoffTs: {{(getContext . \"centralquery.ratecutoff\")}}\n\n  # parameters to configure connection pool for querying OpenTsdb:\n  # Total connections allowed per pool\n  maxTotalPoolConnections: 100\n  # Max number of connections for a given route\n  maxPoolConnectionsPerRoute: 100\n\n  # parameters to configure thread pool for querying OpenTsdb:\n  # Core number of threads in thread pool\n  executorThreadPoolCoreSize: 20\n  # Maximum number of threads in thread pool\n  executorThreadPoolMaxSize: 250\n\nproxyConfiguration:\n  hostname: 127.0.0.1\n  port: 8080\nhttp:\n  connectorType: nonblocking\n  port: 8888\n  adminPort: 58888\n  ssl:\n      #Example is using a java keystore in the target directory.\n      keyStore: ${ssl.cert.dir}/ssl.pfx\n      keyStorePassword: zapp_pass\n      keyStoreType: pkcs12\n  requestLog:\n    console:\n      enabled: false\n\nmanagedReporter:\n    metricReporters:\n      - {posterType: http, username: \"$env[CONTROLPLANE_CONSUMER_USERNAME]\", password: \"$env[CONTROLPLANE_CONSUMER_PASSWORD]\", urlEnvironment: \"CONTROLPLANE_CONSUMER_URL\"}\n      - {posterType: http, username: \"{{(getContext . \"global.conf.zauth-username\")}}\", password: \"{{(getContext . \"global.conf.zauth-password\")}}\", protocol: http, host: localhost, port: 8080, apiPath: /api/metrics/store}\n",
                "Filename": "/opt/zenoss/etc/central-query/configuration.yaml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "56fzhcha1hr39y5k50qgvzua",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 4,
        "Startup": "su - zenoss -c \"cd /opt/zenoss && /bin/supervisord -n -c etc/central-query/supervisord.conf\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/metricshipper/metricshipper.yaml": {
                "Content": "# Redis URL to subscribe to, of the format:\n#\n#     redis://HOST:PORT/DATABASE/KEY\n#\n# Where KEY is the key of the list containing metrics. This must match whatever\n# is specified on the publishing side (i.e., in the collector daemon).\n#\n#redisurl: redis://localhost:6379/0/metrics2\n\n# WebSocket URL of consumer to publish to.\n#\n#consumerurl: ws://localhost:8080/ws/metrics/store\n\n# Username to use when connecting to the consumer\n#\n\nusername: {{(contextFilter . \"global.conf.zauth-\").username}}\n\n# Password to use when connecting to the consumer\n#\n\npassword: {{(contextFilter . \"global.conf.zauth-\").password}}\n\n# Number of simultaneous readers from Redis.\n#\n#readers: 2\n\n# Number of simultaneous writers to the consumer.\n#\n#writers: 1\n\n# Maximum number of messages to keep in the internal buffer.\n#\n#maxbuffersize: 1024\n\n# Maximum number of messages to send to the consumer in a single batch.\n# This should be smaller than the setting for maxbuffersize.\n#\n#maxbatchsize: 64\n\n# Maximum time in seconds to wait for messages from the internal buffer to\n# be ready before sending a batch to the consumer.\n#\n#batchtimeout: 0.1\n\n# Rolling time period in seconds to consider slow-down messages from the\n# consumer.\n#\n#backoffwindow: 60\n\n# Maximum age in seconds of websocket connections before they are closed and\n# reopened. Set to 0 to disable autoclosing connections.\n#\n#maxconnectionage: 600\n\n# Encoding to use for published metrics (\"binary\" or \"json\"). Default is\n# binary.\n#\n#encoding: binary\n\n# Maximum number of slow-down messages to consider for exponential backoff.\n#\n#maxbackoffsteps: 1200\n\n# Maximum number of milliseconds to wait before sending each batch of metrics.\n#\n#maxbackoffdelay: 10000\n\n# Number of processors to use.\n#\n#cpus: 4\n\n# Total retry attempts, zero for infinity\n#\n#retryconnection: 0\n\n# Timeout between connection retry attempts in seconds\n#\n#retryconnectiontimeout: 1\n",
                "Filename": "/opt/zenoss/etc/metricshipper/metricshipper.yaml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Pushes metric data to a MetricConsumer",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -u zenoss metricshipper",
                "Timeout": 0,
                "Tolerance": 0
            },
            "store_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/MetricShipper/store_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "websocket_opened": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/MetricShipper/websocket_opened",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "brw2f9mo3hmr1ykbvieyns8wl",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "glog"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/metricshipper.log",
                "Type": "metricshipper"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "txBytes",
                            "legend": "tx",
                            "metric": "ZEN_INF.org.zenoss.app.metricshipper.txBytes.count",
                            "metricSource": "metricshipper",
                            "name": "tx",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Websocket throughput.",
                    "footer": false,
                    "format": "",
                    "id": "websocketThroughput",
                    "maxy": null,
                    "miny": null,
                    "name": "Websocket Throughput",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "brw2f9mo3hmr1ykbvieyns8wl"
                        ]
                    },
                    "type": "line",
                    "units": "metrics/second",
                    "yAxisLabel": "Throughput"
                },
                {
                    "base": 0,
                    "builtin": false,
                    "datapoints": [
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "outgoing",
                            "legend": "outgoing",
                            "metric": "ZEN_INF.org.zenoss.app.metricshipper.totalOutgoing.count",
                            "metricSource": "metricshipper",
                            "name": "outgoing",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        },
                        {
                            "aggregator": "avg",
                            "color": "",
                            "expression": "",
                            "fill": false,
                            "format": "",
                            "id": "incoming",
                            "legend": "incoming",
                            "metric": "ZEN_INF.org.zenoss.app.metricshipper.totalIncoming.count",
                            "metricSource": "metricshipper",
                            "name": "incoming",
                            "rate": true,
                            "rateOptions": {
                                "counter": true,
                                "counterMax": null,
                                "resetThreshold": null
                            },
                            "type": "line"
                        }
                    ],
                    "description": "Number of datapoints received / transmitted per second.",
                    "footer": false,
                    "format": "",
                    "id": "dataPoints",
                    "maxy": null,
                    "miny": null,
                    "name": "Data Points",
                    "range": {
                        "end": "0s-ago",
                        "start": "1h-ago"
                    },
                    "returnset": "EXACT",
                    "tags": {
                        "controlplane_service_id": [
                            "brw2f9mo3hmr1ykbvieyns8wl"
                        ]
                    },
                    "type": "line",
                    "units": "metrics/second",
                    "yAxisLabel": "Data Points"
                }
            ],
            "MetricConfigs": [
                {
                    "Description": "Metric Shipper metrics",
                    "ID": "metricshipper",
                    "Metrics": [
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "rate of incoming metrics",
                            "ID": "ZEN_INF.org.zenoss.app.metricshipper.totalIncoming.count",
                            "Name": "incoming",
                            "ResetValue": 0,
                            "Unit": "metrics/second"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "rate of outgoing metrics",
                            "ID": "ZEN_INF.org.zenoss.app.metricshipper.totalOutgoing.count",
                            "Name": "outgoing",
                            "ResetValue": 0,
                            "Unit": "metrics/second"
                        },
                        {
                            "BuiltIn": false,
                            "Counter": true,
                            "Description": "rate of outgoing bytes on websocket",
                            "ID": "ZEN_INF.org.zenoss.app.metricshipper.txBytes.count",
                            "Name": "txBytes",
                            "ResetValue": 0,
                            "Unit": "metrics/second"
                        }
                    ],
                    "Name": "Metric Shipper metrics",
                    "Query": {
                        "Data": "{\"metrics\":[{\"metric\":\"ZEN_INF.org.zenoss.app.metricshipper.totalIncoming.count\",\"tags\":{\"controlplane_service_id\":[\"brw2f9mo3hmr1ykbvieyns8wl\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricshipper.totalOutgoing.count\",\"tags\":{\"controlplane_service_id\":[\"brw2f9mo3hmr1ykbvieyns8wl\"]}},{\"metric\":\"ZEN_INF.org.zenoss.app.metricshipper.txBytes.count\",\"tags\":{\"controlplane_service_id\":[\"brw2f9mo3hmr1ykbvieyns8wl\"]}}],\"start\":\"1h-ago\"}",
                        "Headers": {
                            "Content-Type": [
                                "application/json"
                            ]
                        },
                        "Method": "POST",
                        "RequestURI": "/metrics/api/performance/query"
                    }
                }
            ],
            "ThresholdConfigs": []
        },
        "Name": "MetricShipper",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/metricshipper/metricshipper.yaml": {
                "Content": "# Redis URL to subscribe to, of the format:\n#\n#     redis://HOST:PORT/DATABASE/KEY\n#\n# Where KEY is the key of the list containing metrics. This must match whatever\n# is specified on the publishing side (i.e., in the collector daemon).\n#\n#redisurl: redis://localhost:6379/0/metrics2\n\n# WebSocket URL of consumer to publish to.\n#\n#consumerurl: ws://localhost:8080/ws/metrics/store\n\n# Username to use when connecting to the consumer\n#\n\nusername: {{(contextFilter . \"global.conf.zauth-\").username}}\n\n# Password to use when connecting to the consumer\n#\n\npassword: {{(contextFilter . \"global.conf.zauth-\").password}}\n\n# Number of simultaneous readers from Redis.\n#\n#readers: 2\n\n# Number of simultaneous writers to the consumer.\n#\n#writers: 1\n\n# Maximum number of messages to keep in the internal buffer.\n#\n#maxbuffersize: 1024\n\n# Maximum number of messages to send to the consumer in a single batch.\n# This should be smaller than the setting for maxbuffersize.\n#\n#maxbatchsize: 64\n\n# Maximum time in seconds to wait for messages from the internal buffer to\n# be ready before sending a batch to the consumer.\n#\n#batchtimeout: 0.1\n\n# Rolling time period in seconds to consider slow-down messages from the\n# consumer.\n#\n#backoffwindow: 60\n\n# Maximum age in seconds of websocket connections before they are closed and\n# reopened. Set to 0 to disable autoclosing connections.\n#\n#maxconnectionage: 600\n\n# Encoding to use for published metrics (\"binary\" or \"json\"). Default is\n# binary.\n#\n#encoding: binary\n\n# Maximum number of slow-down messages to consider for exponential backoff.\n#\n#maxbackoffsteps: 1200\n\n# Maximum number of milliseconds to wait before sending each batch of metrics.\n#\n#maxbackoffdelay: 10000\n\n# Number of processors to use.\n#\n#cpus: 4\n\n# Total retry attempts, zero for infinity\n#\n#retryconnection: 0\n\n# Timeout between connection retry attempts in seconds\n#\n#retryconnectiontimeout: 1\n",
                "Filename": "/opt/zenoss/etc/metricshipper/metricshipper.yaml",
                "Owner": "zenoss:zenoss",
                "Permissions": "0644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "56fzhcha1hr39y5k50qgvzua",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "256M",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"cd /opt/zenoss && /bin/supervisord -n -c etc/metricshipper/supervisord.conf\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "56fzhcha1hr39y5k50qgvzua",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Metrics",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "bf71nji53ltppe87g8dxjn95x",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "",
        "Tags": [
            "zenoss-metrics"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": {
            "apply-custom-patches": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun patch.sh applyPatches",
                "CommitOnSuccess": true,
                "Description": "Apply custom patches to the service using an installed Quilt"
            },
            "help": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun help.sh",
                "CommitOnSuccess": false,
                "Description": "Display this help message"
            },
            "install-percona": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun percona.sh install",
                "CommitOnSuccess": true,
                "Description": "Install Percona tools"
            },
            "install-quilt": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun quilt.sh install",
                "CommitOnSuccess": false,
                "Description": "Install patching tool Quilt"
            },
            "reportmail": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun reportmail.sh",
                "CommitOnSuccess": false,
                "Description": "Generate and email a report"
            },
            "upgrade": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun upgrade.sh doUpgrade",
                "CommitOnSuccess": true,
                "Description": "Upgrade a Zenoss installation"
            },
            "zendmd": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zendmd",
                "CommitOnSuccess": false,
                "Description": "Start an interactive zendmd session"
            },
            "zenmib": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenmib.sh",
                "CommitOnSuccess": true,
                "Description": "Load, convert, and import MIB files into the Zenoss DMD"
            },
            "zenossdbpack": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenossdbpack",
                "CommitOnSuccess": false,
                "Description": "Run ZODB storage packing tool"
            },
            "zenpack": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenpack.sh --service-id={{.ID}}",
                "CommitOnSuccess": false,
                "Description": "Check information on available Zenpacks"
            },
            "zenpack-manager": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenpack-manager.sh --service-id={{.ID}}",
                "CommitOnSuccess": true,
                "Description": "Install, create, link, or destroy Zenpacks"
            }
        },
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zendebug.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\ndebug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n<cgi-environment>\n  HTTPS ON\n</cgi-environment>\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\nsession-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2-zendebug.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event-zendebug.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2-zendebug.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\nconflict-error-log-level debug\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9310.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9310\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 100000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    cache-local-mb {{percentScale .RAMCommitment 0.5 | bytesToMB}}\n\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zendebug.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Zope debug server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "localhost_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached-session",
                "ApplicationTemplate": "memcached-session",
                "Name": "memcached-session",
                "PortList": null,
                "PortNumber": 11212,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "dynamicserver",
                "ApplicationTemplate": "dynamicserver",
                "Name": "dynamicserver",
                "PortList": null,
                "PortNumber": 8700,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zendebug",
                "ApplicationTemplate": "zendebug",
                "Name": "zendebug",
                "PortList": null,
                "PortNumber": 9310,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 15,
                "Script": "curl -A 'zendebug answering healthcheck' --retry 3 --max-time 2 -s http://localhost:9310/zport/ruok | grep -q imok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "deadlock_check": {
                "Interval": 60,
                "KillCountLimit": 5,
                "KillExitCodes": [
                    28
                ],
                "Script": "curl -A 'zendebug deadlock healthcheck' --max-time 15 -s http://localhost:9310/zport/ruok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_session_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_session_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss runzope >/dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zing-connector-answering": {
                "Interval": 10,
                "Script": "test \"$(curl localhost:9000/ping)\" = \"PONG\"",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "bv9x1umq8uf94ghhfd7tx82q4",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 1,
            "Max": 1,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "manual",
        "LogConfigs": [
            {
                "Filters": [
                    "zope",
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/event-zendebug.log",
                "Type": "zope_eventlog"
            },
            {
                "Filters": [
                    "z2_access_logs"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/Z2-zendebug.log",
                "Type": "zope_access_logs"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zendebug",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zendebug.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\ndebug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n<cgi-environment>\n  HTTPS ON\n</cgi-environment>\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\nsession-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2-zendebug.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event-zendebug.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2-zendebug.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\nconflict-error-log-level debug\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9310.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9310\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 100000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    cache-local-mb {{percentScale .RAMCommitment 0.5 | bytesToMB}}\n\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zendebug.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "8iwmmy9ptzvbcg56eebnjyvwc",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"CONFIG_FILE=${ZENHOME:-/opt/zenoss}/etc/zendebug.conf /opt/zenoss/bin/runzope\" ",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/opt/zenoss/.pc",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenoss-custom-patches-pc",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/patches",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenoss-custom-patches",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/log/jobs",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenjobs",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/var/ext",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenoss-var-ext",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/export",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenoss-export",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/.ZenPacks",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenpack-backup",
                "Type": ""
            },
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenreports.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\n#    debug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n<cgi-environment>\n  HTTPS ON\n</cgi-environment>\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\nsession-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\nconflict-error-log-level debug\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9290.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9290\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 100000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    cache-local-mb {{percentScale .RAMCommitment 0.5 | bytesToMB}}\n\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zenreports.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Zope server dedicated to report generation",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "localhost_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached-session",
                "ApplicationTemplate": "memcached-session",
                "Name": "memcached-session",
                "PortList": null,
                "PortNumber": 11212,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "dynamicserver",
                "ApplicationTemplate": "dynamicserver",
                "Name": "dynamicserver",
                "PortList": null,
                "PortNumber": 8700,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zenreports",
                "ApplicationTemplate": "zenreports",
                "Name": "zenreports",
                "PortList": null,
                "PortNumber": 9290,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 15,
                "Script": "curl -A 'zenreports answering healthcheck' --retry 3 --max-time 2 -s http://localhost:9290/zport/ruok | grep -q imok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "deadlock_check": {
                "Interval": 60,
                "KillCountLimit": 5,
                "KillExitCodes": [
                    28
                ],
                "Script": "curl -A 'zenreports deadlock healthcheck' --max-time 15 -s http://localhost:9290/zport/ruok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_session_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_session_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss runzope >/dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "36jb53b20q7zcfk3mof2ufl2u",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 1,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "zope",
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/event.log",
                "Type": "zope_eventlog"
            },
            {
                "Filters": [
                    "z2_access_logs"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/Z2.log",
                "Type": "zope_access_logs"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zenreports",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenreports.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\n#    debug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n<cgi-environment>\n  HTTPS ON\n</cgi-environment>\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\nsession-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\nconflict-error-log-level debug\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9290.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9290\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 100000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    cache-local-mb {{percentScale .RAMCommitment 0.5 | bytesToMB}}\n\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zenreports.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "8iwmmy9ptzvbcg56eebnjyvwc",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"CONFIG_FILE=${ZENHOME:-/opt/zenoss}/etc/zenreports.conf /opt/zenoss/bin/runzope\" ",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/opt/zenoss/.pc",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenoss-custom-patches-pc",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/patches",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenoss-custom-patches",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/log/jobs",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenjobs",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/var/ext",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenoss-var-ext",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/export",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenoss-export",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/.ZenPacks",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenpack-backup",
                "Type": ""
            },
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": {
            "debug": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} debug'",
            "stats": "su - zenoss -c '${ZENHOME:-/opt/zenoss}/bin/{{.Name}} stats'"
        },
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenjobs.conf": {
                "Content": "#\n# Configuration file for zenjobs\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenjobs.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Directory in which to store individual\n#  job log files, default: /opt/zenoss/log/jobs\n#job-log-path /opt/zenoss/log/jobs\n#\n# Number of jobs a worker process runs\n#  before it shuts down, default: 1\n#max-jobs-per-worker 1\n#\n# Number of jobs to process concurrently,\n#  default: 2\n#concurrent-jobs 2\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zenjobs.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Performs tasks in its queue as scheduled",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "localhost_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss zenjobs.py > /dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "stable_workers": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/zenjobs/stable_workers",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zing-connector-answering": {
                "Interval": 10,
                "Script": "test \"$(curl localhost:9000/ping)\" = \"PONG\"",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "67pkrlw5mv9ytqdkwo1jhkwej",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zenjobs.log",
                "Type": "zenjobs"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zenjobs",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenjobs.conf": {
                "Content": "#\n# Configuration file for zenjobs\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenjobs.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# Directory in which to store individual\n#  job log files, default: /opt/zenoss/log/jobs\n#job-log-path /opt/zenoss/log/jobs\n#\n# Number of jobs a worker process runs\n#  before it shuts down, default: 1\n#max-jobs-per-worker 1\n#\n# Number of jobs to process concurrently,\n#  default: 2\n#concurrent-jobs 2\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n# root object for data load (i.e. /zport/dmd),\n#  default: /zport/dmd\n#zodb-dataroot /zport/dmd\n#\n# in memory cachesize default: 1000, default:\n#  1000\n#zodb-cachesize 1000\n#\n# hostname of the MySQL server for ZODB,\n#  default: 127.0.0.1\n#zodb-host 127.0.0.1\n#\n# port of the MySQL server for ZODB, default:\n#  3306\n#zodb-port 3306\n#\n# user of the MySQL server for ZODB, default:\n#  zenoss\n#zodb-user zenoss\n#\n# password of the MySQL server for ZODB,\n#  default: zenoss\n#zodb-password zenoss\n#\n# Name of database for MySQL object store,\n#  default: zodb\n#zodb-db zodb\n#\n# Name of socket file for MySQL server\n#  connection if host is localhost\n#zodb-socket None\n#\n# memcached servers to use for object\n#  cache (eg. 127.0.0.1:11211), default:\n#  127.0.0.1:11211\n#zodb-cacheservers 127.0.0.1:11211\n#\n# Specify the number of seconds a database\n#  connection will wait to acquire a database\n#  'commit' lock before failing (defaults\n#  to 30 seconds if not specified)., default:\n#  30\n#zodb-commit-lock-timeout 30\n#\n",
                "Filename": "/opt/zenoss/etc/zenjobs.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "8iwmmy9ptzvbcg56eebnjyvwc",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenjobs run --logfileonly \"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/opt/zenoss/log/jobs",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenjobs",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/var/ext",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenoss-var-ext",
                "Type": ""
            },
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenjserver.conf": {
                "Content": "#\n# Configuration file for zenjserver\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenjserver.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# port of java server, default: 8700\n#javaport 8700\n#\n# Max heap, in MB, to use for java process,\n#  default: 512\n#javaheap 512\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n",
                "Filename": "/opt/zenoss/etc/zenjserver.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Enables the dynamic view of organizers",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "localhost_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "dynamicserver",
                "ApplicationTemplate": "dynamicserver",
                "Name": "dynamicserver",
                "PortList": null,
                "PortNumber": 8700,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "heartbeat": {
                "Interval": 5,
                "Script": "echo heartbeat",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "5mf152d26y2ji068yxip0b5k2",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/zenjserver.log",
                "Type": "zenjserver"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zenjserver",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenjserver.conf": {
                "Content": "#\n# Configuration file for zenjserver\n#\n#  To enable a particular option, uncomment the desired entry.\n#\n# Parameter     Setting\n# ---------     -------\n#\n# Use an alternate configuration file\n#configfile /opt/zenoss/etc/zenjserver.conf\n#\n# Generate an XML file containing command-line\n#  switches., default: False\n#genxmlconfigs False\n#\n# User to become when running default:zenoss,\n#  default: zenoss\n#uid zenoss\n#\n# Cycle continuously on cycleInterval\n#  from Zope, default: False\n#cycle False\n#\n# Launch into the background, default: False\n#daemon False\n#\n# Log to console and log file, default: False\n#duallog False\n#\n# Log to log file and not console, default:\n#  False\n#logfileonly False\n#\n# output log info in HTML table format,\n#  default: False\n#weblog False\n#\n# Run under a supervisor which will restart\n#  it, default: False\n#watchdog False\n#\n# The path to the watchdog reporting socket\n#watchdogPath None\n#\n# Wait seconds for initial heartbeat\n#starttimeout None\n#\n# Set listener socket options. For option\n#  details: man 7 socket, default: []\n#socketOption []\n#\n# port of java server, default: 8700\n#javaport 8700\n#\n# Max heap, in MB, to use for java process,\n#  default: 512\n#javaheap 512\n#\n# Logging severity threshold, default: 20\n#logseverity 20\n#\n# Override the default logging path; default\n#  $ZENHOME/log, default: /opt/zenoss/log\n#logpath /opt/zenoss/log\n#\n# Max size of log file in KB; default\n#  10240, default: 10240\n#maxlogsize 10240\n#\n# Max number of back up log files; default\n#  3, default: 3\n#maxbackuplogs 3\n#\n",
                "Filename": "/opt/zenoss/etc/zenjserver.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "8iwmmy9ptzvbcg56eebnjyvwc",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/zenjserver run -c --logfileonly \"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zauth/zauth-zope.conf": {
                "Content": "%include ../zope.conf\nclienthome var/zauth\n\nzserver-threads 7\nport-base 100\n",
                "Filename": "/opt/zenoss/etc/zauth/zauth-zope.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zope.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\n#    debug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9080.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\nconflict-error-log-level debug\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9080\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 5000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    #cache-local-mb 10\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zope.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Manages authentication tokens for RM",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zauth",
                "ApplicationTemplate": "zauth",
                "Name": "zauth",
                "PortList": null,
                "PortNumber": 9180,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached-session",
                "ApplicationTemplate": "memcached-session",
                "Name": "memcached-session",
                "PortList": null,
                "PortNumber": 11212,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "curl -A 'zauth answering healthcheck' -s http://localhost:9180/zport/ruok | grep -q imok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "deadlock_check": {
                "Interval": 60,
                "KillCountLimit": 5,
                "KillExitCodes": [
                    28
                ],
                "Script": "curl -A 'zauth deadlock healthcheck' --max-time 15 -s http://localhost:9180/zport/ruok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_session_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_session_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss runzope >/dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "6nd64x0jub9noemodiyv289e",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 2,
            "Max": 0,
            "Min": 1
        },
        "Instances": 2,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "zope",
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/event.log",
                "Type": "zauth_eventlog"
            },
            {
                "Filters": [
                    "z2_access_logs"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/Z2.log",
                "Type": "zauth_access_logs"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Zauth",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zauth/zauth-zope.conf": {
                "Content": "%include ../zope.conf\nclienthome var/zauth\n\nzserver-threads 7\nport-base 100\n",
                "Filename": "/opt/zenoss/etc/zauth/zauth-zope.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zope.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\n#    debug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9080.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\nconflict-error-log-level debug\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9080\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 5000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    #cache-local-mb 10\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zope.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "8iwmmy9ptzvbcg56eebnjyvwc",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 2,
        "Startup": "su - zenoss -c \"cd /opt/zenoss && /bin/supervisord -n -c etc/zauth/supervisord.conf\"",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": {
            "apply-custom-patches": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun patch.sh applyPatches",
                "CommitOnSuccess": true,
                "Description": "Apply custom patches to the service using an installed Quilt"
            },
            "help": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun help.sh",
                "CommitOnSuccess": false,
                "Description": "Display this help message"
            },
            "install-percona": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun percona.sh install",
                "CommitOnSuccess": true,
                "Description": "Install Percona tools"
            },
            "install-quilt": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun quilt.sh install",
                "CommitOnSuccess": false,
                "Description": "Install patching tool Quilt"
            },
            "reportmail": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun reportmail.sh",
                "CommitOnSuccess": false,
                "Description": "Generate and email a report"
            },
            "upgrade": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun upgrade.sh doUpgrade",
                "CommitOnSuccess": true,
                "Description": "Upgrade a Zenoss installation"
            },
            "zendmd": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zendmd",
                "CommitOnSuccess": false,
                "Description": "Start an interactive zendmd session"
            },
            "zenmib": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenmib.sh",
                "CommitOnSuccess": true,
                "Description": "Load, convert, and import MIB files into the Zenoss DMD"
            },
            "zenossdbpack": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenossdbpack",
                "CommitOnSuccess": false,
                "Description": "Run ZODB storage packing tool"
            },
            "zenpack": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenpack.sh --service-id={{.ID}}",
                "CommitOnSuccess": false,
                "Description": "Check information on available Zenpacks"
            },
            "zenpack-manager": {
                "Command": "${ZENHOME:-/opt/zenoss}/bin/zenrun zenpack-manager.sh --service-id={{.ID}}",
                "CommitOnSuccess": true,
                "Description": "Install, create, link, or destroy Zenpacks"
            }
        },
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zope.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\n#    debug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n<cgi-environment>\n  HTTPS ON\n</cgi-environment>\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\nsession-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\nconflict-error-log-level debug\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9080.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9080\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 100000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    cache-local-mb {{percentScale .RAMCommitment 0.5 | bytesToMB}}\n\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zope.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Zope server",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "localhost_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached-session",
                "ApplicationTemplate": "memcached-session",
                "Name": "memcached-session",
                "PortList": null,
                "PortNumber": 11212,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "dynamicserver",
                "ApplicationTemplate": "dynamicserver",
                "Name": "dynamicserver",
                "PortList": null,
                "PortNumber": 8700,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zope",
                "ApplicationTemplate": "zope",
                "Name": "zope",
                "PortList": null,
                "PortNumber": 9080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 15,
                "Script": "curl -A 'Zope answering healthcheck' --retry 3 --max-time 2 -s http://localhost:9080/zport/ruok | grep -q imok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "deadlock_check": {
                "Interval": 60,
                "KillCountLimit": 5,
                "KillExitCodes": [
                    28
                ],
                "Script": "curl -A 'Zope deadlock healthcheck' --max-time 15 -s http://localhost:9080/zport/ruok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_session_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_session_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss runzope >/dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zing-connector-answering": {
                "Interval": 10,
                "Script": "test \"$(curl localhost:9000/ping)\" = \"PONG\"",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "PREFER_SEPARATE",
        "ID": "dc4br6eqrgmz2d1i8ujv1f321",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 6,
            "Max": 0,
            "Min": 2
        },
        "Instances": 6,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "zope",
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/event.log",
                "Type": "zope_eventlog"
            },
            {
                "Filters": [
                    "z2_access_logs"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/Z2.log",
                "Type": "zope_access_logs"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            },
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/toolbox/zodbscan.log",
                "Type": "toolbox_zodbscan_logs"
            },
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/toolbox/zennetworkclean.log",
                "Type": "toolbox_zennetworkclean_logs"
            },
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/toolbox/zenindextool.log",
                "Type": "toolbox_zenindextool_logs"
            },
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/toolbox/zencheckdbstats.log",
                "Type": "toolbox_zencheckdbstats_logs"
            },
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/toolbox/zencatalogscan.log",
                "Type": "toolbox_zencatalogscan_logs"
            },
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/toolbox/findposkeyerror.log",
                "Type": "toolbox_findposkeyerror_logs"
            },
            {
                "Filters": [
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/toolbox/zenrelationscan.log",
                "Type": "toolbox_zenrelationscan_logs"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Zope",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zope.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\n#    debug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n<cgi-environment>\n  HTTPS ON\n</cgi-environment>\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\nsession-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\nconflict-error-log-level debug\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9080.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9080\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 100000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    cache-local-mb {{percentScale .RAMCommitment 0.5 | bytesToMB}}\n\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zope.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "8iwmmy9ptzvbcg56eebnjyvwc",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"/opt/zenoss/bin/runzope\" ",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/opt/zenoss/.pc",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenoss-custom-patches-pc",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/patches",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenoss-custom-patches",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/log/jobs",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenjobs",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/var/ext",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenoss-var-ext",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/export",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenoss-export",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/.ZenPacks",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenpack-backup",
                "Type": ""
            },
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenapi.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\n#    debug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n<cgi-environment>\n  HTTPS ON\n</cgi-environment>\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\nsession-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\nconflict-error-log-level debug\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9320.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9320\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 100000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    cache-local-mb {{percentScale .RAMCommitment 0.5 | bytesToMB}}\n\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zenapi.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Zope server dedicated to JSON API requests",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "localhost_zenhubPB",
                "ApplicationTemplate": "localhost_zenhubPB",
                "Name": "zenhub",
                "PortList": null,
                "PortNumber": 8789,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zodb_.*",
                "ApplicationTemplate": "zodb_.*",
                "Name": "mariadb",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached",
                "ApplicationTemplate": "memcached",
                "Name": "memcached",
                "PortList": null,
                "PortNumber": 11211,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "memcached-session",
                "ApplicationTemplate": "memcached-session",
                "Name": "memcached-session",
                "PortList": null,
                "PortNumber": 11212,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "redis",
                "ApplicationTemplate": "redis",
                "Name": "redis",
                "PortList": null,
                "PortNumber": 6379,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "rabbitmq.*",
                "ApplicationTemplate": "rabbitmq.*",
                "Name": "rabbitmq",
                "PortList": null,
                "PortNumber": 0,
                "PortTemplate": "",
                "Protocol": "",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": null,
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zep",
                "ApplicationTemplate": "zep",
                "Name": "zep",
                "PortList": null,
                "PortNumber": 8084,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "dynamicserver",
                "ApplicationTemplate": "dynamicserver",
                "Name": "dynamicserver",
                "PortList": null,
                "PortNumber": 8700,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zenapi",
                "ApplicationTemplate": "zenapi",
                "Name": "zenapi",
                "PortList": null,
                "PortNumber": 9320,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector",
                "ApplicationTemplate": "zing-connector",
                "Name": "zing-connector",
                "PortList": null,
                "PortNumber": 9237,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zing-connector-admin",
                "ApplicationTemplate": "zing-connector-admin",
                "Name": "zing-connector-admin",
                "PortList": null,
                "PortNumber": 9000,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "controlplane_consumer",
                "ApplicationTemplate": "controlplane_consumer",
                "Name": "controlplane_consumer",
                "PortList": null,
                "PortNumber": 8444,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 15,
                "Script": "curl -A 'zenapi answering healthcheck' --retry 3 --max-time 2 -s http://localhost:9320/zport/ruok | grep -q imok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "deadlock_check": {
                "Interval": 60,
                "KillCountLimit": 5,
                "KillExitCodes": [
                    28
                ],
                "Script": "curl -A 'zenapi deadlock healthcheck' --max-time 15 -s http://localhost:9320/zport/ruok",
                "Timeout": 0,
                "Tolerance": 0
            },
            "mariadb_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/mariadb_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "memcached_session_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/memcached_session_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "rabbit_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/rabbit_answering {{(getContext . \"global.conf.amqpuser\")}} {{(getContext . \"global.conf.amqppassword\")}}",
                "Timeout": 0,
                "Tolerance": 0
            },
            "redis_answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/redis_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss runzope >/dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "solr_answering": {
                "Interval": 10,
                "Script": "curl -A 'Solr answering healthcheck' -s http://localhost:8983/solr/zenoss_model/admin/ping?wt=json | grep -q '\"status\":\"OK\"'",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zep_answering": {
                "Interval": 10,
                "Script": "/opt/zenoss/bin/healthchecks/zep_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "zing-connector-answering": {
                "Interval": 10,
                "Script": "test \"$(curl localhost:9000/ping)\" = \"PONG\"",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "bhq69ga6cal8cfpqoet2jx1vy",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 1,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "zope",
                    "pythondaemon"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/event.log",
                "Type": "zope_eventlog"
            },
            {
                "Filters": [
                    "z2_access_logs"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/log/Z2.log",
                "Type": "zope_access_logs"
            },
            {
                "Filters": [
                    "supervisord"
                ],
                "IsAudit": true,
                "LogTags": null,
                "Path": "/opt/zenoss/log/audit.log",
                "Type": "zenossaudit"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "zenapi",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/opt/zenoss/etc/global.conf": {
                "Content": "# Generated by serviced\n{{range $k,$v:=contextFilter . \"global.conf.\"}}{{$k}} {{$v}}\n{{end}}",
                "Filename": "/opt/zenoss/etc/global.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zenapi.conf": {
                "Content": "# This is the proposed version for SC / Zope 2.12.1\n\n###############################################################################\n# Welcome to Zope 2.\n###############################################################################\n#\n# This is the Zope configuration file.  The Zope configuration file\n# shows what the default configuration directives are, and show\n# examples for each directive.  To declare a directive, make sure that\n# you add it to a line that does not begin with '#'.  Note that comments\n# are only allowed at the beginning of a line: you may not add comments\n# after directive text on the same line.\n#\n# Note for Developers\n# ===================\n#\n# This file is *not* auto-generated. If you create a new directive you\n# very likely want to include an example of how to use the new\n# directive in this file.\n#\n# You shouldn't modify 'zope.conf.in' to change\n# configuration. Instead, you should make a copy into 'zope.conf' and\n# modify that to avoid checking in changes to this file by mistake.\n\n# ZConfig \"defines\" used for later textual substitution\n\n%define INSTANCE /opt/zenoss\n\n# this needs to match the encoding in the sitecustomize.py file\n# in $ZENHOME/lib/python\ndefault-zpublisher-encoding utf-8\n\n# Directive: instancehome\n#\n# Description:\n#     The path to the data files, local product files, import directory,\n#     and Extensions directory used by Zope.\n#\n# Required (no default)\n#\n# Example:\n#\n#    instancehome /home/chrism/projects/sessions\n\ninstancehome $INSTANCE\n\n# Directive: clienthome\n#\n# Description:\n#     The directory in which a running Zope's process identifier files are\n#     placed.\n#\n# Default: $INSTANCE/var\n#\n# Example:\n#\n#    clienthome /home/chrism/projects/sessions/var\n\n\n# Directive: path\n#\n# Description:\n#     Name of a directory which should be inserted into the\n#     the beginning of Python's module search path.  This directive\n#     may be specified as many times as needed to insert additional\n#     directories.  The set of directories specified is inserted into the\n#     beginning of the module search path in the order which they are specified\n#     here.  Note that the processing of this directive may happen too late\n#     under some circumstances; it is recommended that you use the PYTHONPATH\n#     environment variable if using this directive doesn't work for you.\n#\n# Default: $INSTANCE/lib/python\n#\n# Example:\n#\n#    path $INSTANCE/mypymodules\n\n\n# Directive: products\n#\n# Description:\n#     Name of a directory that contains additional Product packages.  This\n#     directive may be used as many times as needed to add additional\n#     collections of products.  Each directory identified will be\n#     added to the __path__ of the Products package.  All Products are\n#     initialized in ascending alphabetical order by product name.  If\n#     two products with the same name exist in two Products directories,\n#     the order in which the packages appear here defines the load\n#     order.  The master Products directory exists in Zope's software home,\n#     and cannot be removed from the products path (and should not be added\n#     to it here).\n#\n# Default: $INSTANCE/Products\n#\n# Example:\n#\n#    products /home/chrism/projects/myproducts\n\n\n# Directive: environment\n#\n# Description:\n#     A section which can be used to define arbitrary key-value pairs\n#     for use as environment variables during Zope's run cycle.  It\n#     is not recommended to set system-related environment variables such as\n#     PYTHONPATH within this section.\n#\n# Default: unset\n#\n# Example:\n#\n#    <environment>\n#      MY_PRODUCT_ENVVAR foobar\n#    </environment>\n\n# Directive: debug-mode\n#\n# Description:\n#     A switch which controls several aspects of Zope operation useful for\n#     developing under Zope.  When debug mode is on:\n#\n#     - The process will not detach from the controlling terminal\n#\n#     - Errors in product initialization will cause startup to fail\n#       (instead of writing error messages to the event log file).\n#\n#     - Filesystem-based scripts such as skins, PageTemplateFiles, and\n#       DTMLFiles can be edited while the server is running and the server\n#       will detect these changes in real time.  When this switch is\n#       off, you must restart the server to see the changes.\n#\n#     Setting this to 'off' when Zope is in a production environment is\n#     encouraged, as it speeds execution (sometimes dramatically).\n#\n# Default: off\n#\n# Example:\n#\n#    debug-mode on\n\n\n# Directive: effective-user\n#\n# Description:\n#     If you intend to run Zope as the \"root\" user, you must supply this\n#     directive with an effective username or userid number to which Zope\n#     will 'suid' after the server ports are bound. This directive only\n#     has effect under UNIX and if Zope is started as the root user.\n#\n# Default: unset\n#\n# Example:\n#\neffective-user zenoss\n\n\n# Directive: enable-product-installation\n#\n# Description:\n#     If this directive is turned on, Zope performs 'product installation'\n#     (the registration of Python modules in various Products directories)\n#     at startup. Turning this off can speed Zope/ZEO startup time,\n#     but it can also cause your Control_Panel Product list to become\n#     desynchronized with the contents of your Products\n#     directories.  NOTE: Zope *must* be started at least once with\n#     this directive set to \"on\" or you will receive an error.  If using ZEO,\n#     at least one ZEO client must be run with this directive set to \"on\"\n#     once, the others can have it turned off.\n#     NOTE: If your main storage is mounted read-only,\n#     you must set this directive to \"off\".\n#\n# Default: on\n#\n# Example:\n#\nenable-product-installation off\n\n# Directive: locale\n#\n# Description:\n#     Enable locale (internationalization) support by supplying a locale\n#     name to be used. See your operating system documentation for locale\n#     information specific to your system. If your Python module does not\n#     support the locale module, or if the requested locale is not\n#     supported by your system, an error will be raised and Zope will not\n#     start.\n#\n# Default: unset\n#\n# Example:\n#\n#    locale fr_FR\n\n\n# Directive: datetime-format\n#\n# Description:\n#     Set this variable either to \"us\" or \"international\" to force the\n#     DateTime module to parse date strings either with\n#     month-before-days-before-year (\"us\") or\n#     days-before-month-before-year (\"international\").  The default\n#     behaviour of DateTime (when this setting is left unset) is to\n#     parse dates as US dates.\n#\n# Default: us\n#\n# Example:\n#\n#    datetime-format international\n\n\n# Directive: zserver-threads\n#\n# Description:\n#     Specify the number of threads that Zope's ZServer web server will use\n#     to service requests. The default is 4.\n#\n# Default: 4\n#\n# Example:\n#\n#    zserver-threads 10\n\n\n# Directive: python-check-interval\n#\n# Description:\n#     Specify an integer representing the Python interpreter \"check\n#     interval\" This interval determines how often the interpreter checks\n#     for periodic things such as thread switches and signal handlers. The\n#     Zope default is 500, but you may want to experiment with other values\n#     in order to attempt to increae performance in your particular\n#     environment.\n#\n# Default: 500\n#\n# Example:\n#\n#    python-check-interval 1000\n\n\n# Directive: zserver-read-only-mode\n#\n# Description:\n#     If this directive is set to 'on', it will cause Zope to inhibit the\n#     creation of log files and pid files. Access and event log files will\n#     be presented on standard output. Setting this directive 'on' causes\n#     pcgi, fastcgi, and daemon-related directives to have no effect.\n#\n# Default: off\n#\n# Example:\n#\n#    zserver-read-only-mode on\n\n\n# Directive: pid-filename\n#\n# Description:\n#     The path to the file in which the Zope process id(s) will be written.\n#     This defaults to client-home/Z2.pid.\n#\n# Default: CLIENT_HOME/Z2.pid\n#\n# Example:\n#\n#    pid-filename /home/chrism/projects/sessions/var/Z2.pid\n\n\n# Directive: lock-filename\n#\n# Description:\n#     The path to a \"lock file\" which will be locked by Zope while it's\n#     running.  This file is used by zopectl.py to determine if Zope is\n#     currently running.  This defaults to CLIENT_HOME/Z2.lock.\n#\n# Default: CLIENT_HOME/Z2.lock\n#\n# Example:\n#\n#    lock-filename /home/chrism/projects/sessions/var/Z2.lock\n\n\n# Directive: mime-types\n#\n# Description:\n#     Tells Zope about additional mime.types files that should be\n#     loaded.  The files have the same format as the mime.types file\n#     distributed with Apache.  The \"mime-types\" setting may be given\n#     more than once in the configuration file.\n#\n# Example:\n#\n#     mime-types  $INSTANCE/etc/mime.types\n\n\n# Directive: structured-text-header-level\n#\n# Description:\n#     Set the default starting HTML header level for structured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    structured-text-header-level 1\n\n# Directive: rest-input-encoding\n#\n# Description:\n#    Specifies the input encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-input-encoding iso-8859-15\n\n# Directive: rest-output-encoding\n#\n# Description:\n#    Specifies the output encoding of re-StructuredText documents\n#    (e.g. 'utf-8', 'iso-8859-15' or any other valid encoding recognized\n#    by Python).  The default is your Python's default encoding.\n#\n# Default: unset (uses system default)\n#\n# Example:\n#\n#    rest-output-encoding iso-8859-15\n\n# Directive: rest-header-level\n#\n# Description:\n#     Set the default starting HTML header level for restructured text\n#     documents. The default is 3, which implies that top-level headers\n#     will be created with an <H3> tag.\n#\n# Default: 3\n#\n# Example:\n#\n#    rest-header-level 2\n\n# Directive: rest-language-code\n#\n# Description:\n#    Language code used for some internal translations inside of the docutils\n#    package and for DTD bibliographic elements mapping. See\n#    lib/python/docutils/languages/ for a list of supported language codes.\n#\n# Default: en\n#\n# Example:\n#\n#    rest-language-code de\n\n# Directive: cgi-environment\n#\n# Description:\n#     A section which allows a user to define arbitrary key-value pairs for\n#     use as the initial CGI environment variables. This is useful\n#     when you want to proxy requests from another web server to Zserver,\n#     and would like Zserver's CGI environment to reflect the CGI\n#     environment of the other web server.\n#\n# Default: unset\n#\n# Example:\n#\n# <cgi-environment>\n#   HTTPS_SERVER Foobar Server 1.0\n#   HTTPS_PORT 443\n# </cgi-environment>\n\n<cgi-environment>\n  HTTPS ON\n</cgi-environment>\n\n\n# Directive: dns-server\n#\n# Description:\n#     Specify the IP address of your DNS server in order to cause resolved\n#     hostnames to be written to Zope's access log. By default, Zope will\n#     not resolve hostnames unless this is set.\n#\n# Default: unset\n#\n# Example:\n#\n#    dns-server 127.0.0.1\n\n\n# Directive: ip-address\n#\n# Description:\n#     The default IP address on which Zope's various server protocol\n#     implementations will listen for requests. If this is unset, Zope\n#     will listen on all IP addresses supported by the machine. This\n#     directive can be overridden on a per-server basis in the servers\n#     section.\n#\n# Default: unset\n#\n# Example:\n#\n#    ip-address 127.0.0.1\n\n\n# Directive: http-realm\n#\n# Description:\n#     The HTTP \"Realm\" header value sent by this Zope instance. This value\n#     often shows up in basic authentication dialogs.\n#\n# Default: Zope\n#\n# Example:\n#\n#    http-realm Slipknot\n\n\n# Directive: cgi-maxlen\n#\n# Description:\n#     Set this value to limit the amount of form data being processed\n#     by Zope to prevent DoS attacks.\n#\n# Default: 0 (= no restrictions)\n#\n# Example:\n#\n#    cgi-maxlen 10000\n\n\n# Directive: http-header-max-length\n#\n# Description:\n#     Maximum number of bytes allowed within a HTTP request header. The request\n#     is discarded and considered as a DoS attack if the header size exceeds\n#     this limit.\n#\n# Default: 8192\n#\n# Example:\n#\n#     http-header-max-length 16384\n\n# Directive: enable-ms-author-via\n#\n# Description:\n#     Set this directive to 'true' to enable the \"MS-Author-Via\" header\n#     in response to an OPTIONS WebDAV request. Early versions of\n#     Microsoft Web Folders and Microsoft Office require this header to\n#     be present to be able to connect to Zope via WebDAV.\n#\n#     This is disabled by default since it makes a lot of standards-compliant\n#     things unhappy AND it tricks Microsoft Office into trying to edit Office\n#     files stored in Zope via WebDAV even when the user isn't allowed to edit\n#     them and is only trying to download them.\n#\n#     Check this collector entry for more information:\n#     http://www.zope.org/Collectors/Zope/1441\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, do not require this header anymore, and instead require a\n#     \"Public\" header to be present in reply to the OPTIONS WebDAV\n#     request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-author-via on\n\n# Directive: enable-ms-public-header\n#\n# Description:\n#     Set this directive to 'on' to enable sending the \"Public\" header\n#     in response to an WebDAV OPTIONS request.\n#\n#     Though recent WebDAV drafts mention this header, the original\n#     WebDAV RFC did not mention it as part of the standard. Very few\n#     web servers out there include this header in their replies, most\n#     notably IIS and Netscape Enterprise 3.6.\n#\n#     Since many best practices documents out in the web mention\n#     turning off this header with the subject of \"Mask Your Web Server\n#     For Enhanced Security\", this setting is off by\n#     default. Presumably malicious people might take the presence of\n#     this header as indication of an IIS Web Server and try to attack\n#     your site, so be careful when turning it on.\n#\n#     Recent versions of Microsoft Web Folders, updated after January\n#     2005, *do* require this header to be present in reply to the\n#     OPTIONS WebDAV request.\n#     (http://www.redmountainsw.com/wordpress/archives/webfolders-zope)\n#\n#     To get a recent Microsoft Web Folders implementation, refer to\n#     Microsoft KB Article 907306.\n#     (Software Update for Web Folders: May 18, 2007).\n#\n# Default: off\n#\n# Example:\n#\n#    enable-ms-public-header on\n\n# Directive: automatically-quote-dtml-request-data\n#\n# Description:\n#     Set this directive to 'off' in order to disable the autoquoting of\n#     implicitly retrieved REQUEST data by DTML code which contains a '<'\n#     when used in <dtml-var> construction. When this directive is 'on',\n#     all data implicitly retrieved from the REQUEST in DTML (as opposed to\n#     addressing REQUEST.somevarname directly) that contains a '<' will be\n#     HTML-quoted when interpolated via a <dtml-var> or &dtml- construct. This\n#     mitigates the possibility that DTML programmers will leave their\n#     sites open to a \"client-side trojan\" attack.\n#\n# Default: on\n#\n# Example:\n#\n#    automatically-quote-dtml-request-data on\n\n# Directive: trusted-proxy\n#\n# Description:\n#     Define one or more 'trusted-proxies' directives, each of which is a\n#     hostname or an IP address.  The set of definitions comprises a list\n#     of front-end proxies that are trusted to supply an accurate\n#     X-Forwarded-For header to Zope.  If a connection comes from\n#     a trusted proxy, Zope will trust any X-Forwarded header to contain\n#     the user's real IP address for the purposes of address-based\n#     authentication restriction.\n#\n# Default: unset\n#\n# Example:\n#\n#    trusted-proxy www.example.com\n#    trusted-proxy 192.168.1.1\n\n# Directive: publisher-profile-file\n#\n# Description:\n#    Names a file on the filesystem which causes Zope's Python\n#    profiling capabilities to be enabled.  For more information, see\n#    the Debug Information - > Profiling tab of Zope's Control_Panel\n#    via the Zope Management Interface.  IMPORTANT: setting this\n#    filename will cause Zope code to be executed much more slowly\n#    than normal.  This should not be enabled in production.\n#\n# Default: unset\n#\n# Example:\n#\n#    publisher-profile-file $INSTANCE/var/profile.dat\n\n\n# Directive: security-policy-implementation\n#\n# Description:\n#     The default Zope security machinery is implemented in C.  Change\n#     this to \"python\" to use the Python version of the Zope security\n#     machinery.  This setting may impact performance but is useful\n#     for debugging purposes.  See also the \"verbose-security\" option\n#     below.\n#\n# Default: C\n#\n# Example:\n#\n#    security-policy-implementation python\n\n# Directive: skip-authentication-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to skip checks related\n#     to authentication, for servers which serve only anonymous content.\n#     Only works if security-policy-implementation is 'C'.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-authentication-checking on\n\n\n# Directive: skip-ownership-checking\n#\n# Description:\n#     Set this directive to 'on' to cause Zope to ignore ownership checking\n#     when attempting to execute \"through the web\" code. By default, this\n#     directive is on in order to prevent 'trojan horse' security problems\n#     whereby a user with less privilege can cause a user with more\n#     privilege to execute dangerous code.\n#\n# Default: off\n#\n# Example:\n#\n#    skip-ownership-checking on\n\n\n# Directive: verbose-security\n#\n# Description:\n#     By default, Zope reports authorization failures in a terse manner in\n#     order to avoid revealing unnecessary information.  This option\n#     modifies the Zope security policy to report more information about\n#     the reason for authorization failures.  It's designed for debugging.\n#     If you enable this option, you must also set the\n#     'security-policy-implementation' to 'python'.\n#\n# Default: off\n#\n# Example:\n#\n#    security-policy-implementation python\n#    verbose-security on\n\n\n# Directive: maximum-number-of-session-objects\n#\n# Description:\n#     An integer value representing the number of items to use as a\n#     \"maximum number of subobjects\" value of the\n#     '/temp_folder/session_data' transient object container.\n#\n# Default: 1000\n#\n# Example:\n#\nmaximum-number-of-session-objects 100000\n\n\n# Directive: session-add-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object addition\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-add-notify-script-path /scripts/add_notifier\n\n\n# Directive: session-delete-notify-script-path\n#\n# Description:\n#     An optional fill Zope path name of a callable object to be set as the\n#     \"script to call on object deletion\" of the sessioN_data transient\n#     object container created in the /temp_folder folder at startup.\n#\n# Default: unset\n#\n# Example:\n#\n#    session-delete-notify-script-path /scripts/del_notifier\n\n\n# Directive: session-timeout-minutes\n#\n# Description:\n#     An integer value representing the number of minutes to be used as the\n#     \"data object timeout\" of the '/temp_folder/session_data' transient\n#     object container.\n#\n# Default: 20\n#\n# Example:\n#\n#    session-timeout-minutes 30\n\n\n# Directive: session-resolution-seconds\n#\n# Description:\n#    An integer value representing the number of seconds to be used as the\n#    \"timeout resolution\" of the '/temp_folder/session_data' transient\n#    object container.\n#\n# Default: 20\n#\n# Example:\n#\nsession-resolution-seconds 60\n\n\n# Directive: suppress-all-access-rules\n#\n# Description:\n#     If this directive is set to on, no access rules in your Zope site\n#     will be executed. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper access rule.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-access-rules on\n\n\n# Directive: suppress-all-site-roots\n#\n# Description:\n#     If this directive is set to on, no site roots in your Zope site will\n#     be effective. This is useful if you \"lock yourself out\" of a\n#     particular part of your site by setting an improper site root.\n#\n# Default: off\n#\n# Example:\n#\n#    suppress-all-site-roots on\n\n\n# Directive: database-quota-size\n#\n# Description:\n#     Set this directive to an integer in bytes in order to place a hard\n#     limit on the size which the default FileStorage-backed Zope database\n#     can grow. Additions to the database will not be permitted once this\n#     filesize is exceeded.\n#\n# Default: unset\n#\n# Example:\n#\n#    database-quota-size 1000000\n\n\n# Directive: zeo-client-name\n#\n# Description:\n#     If you want a persistent ZEO client cache which retains cache\n#     contents across ClientStorage restarts, you need to define a\n#     zeo-client-name.  If you use ZEO and you don't set a\n#     zeo-client-name, the client cache is stored in temporary files\n#     which are removed when the ClientStorage shuts down.  The value\n#     of zeo-client-name is used to uniquely identify the local cache\n#     files created if this Zope is a ZEO client.\n#\n# Default: unset\n#\n# Example:\n#\n#    zeo-client-name zeo1\n\n\n# Directives: logger\n#\n# Description:\n#     This area should define one or more \"logger\" sections of the\n#     names \"access\", \"event\", and \"trace\".  The \"access\" logger logs\n#     Zope server access.  The \"event\" logger logs Zope event\n#     information.  The \"trace\" logger logs detailed server request\n#     information (for debugging purposes only).  Each logger section\n#     may contain a \"level\" name/value pair which indicates the level\n#     of logging detail to capture for this logger.  The default level\n#     is INFO.  Level may be any of \"CRITICAL\", 'ERROR\", WARN\", \"INFO\",\n#     \"DEBUG\", and \"ALL\".  Each logger section may additionally contain\n#     one or more \"handler\" sections which indicates a types of log\n#     \"handlers\" (file, syslog, NT event log, etc) to be used for the\n#     logger being defined.  There are 5 types of handlers: logfile,\n#     syslog, win32-eventlog, http-handler, email-notifier.  Each\n#     handler type has its own set of allowable subkeys which define\n#     aspects of the handler.  All handler sections also allow for the\n#     specification of a \"format\" (the log message format string), a\n#     \"dateformat\" (the log message format for date strings), and a\n#     \"level\", which has the same semantics of the overall logger\n#     level but overrides the logger's level for the handler it's\n#     defined upon.  XXXX much more detail necessary here\n#\n# Default:\n#\n#     The access log will log to the file <instancehome>/log/Z2.log at\n#     level INFO, the event log will log to the file\n#     <instancehome>/log/event.log at level INFO, and the trace log\n#     will not be written anywhere.\n\n<eventlog>\n  level info\n  <logfile>\n    path $INSTANCE/log/event.log\n    level info\n  </logfile>\n</eventlog>\n\n<logger access>\n  level WARN\n  <logfile>\n    path $INSTANCE/log/Z2.log\n    format %(message)s\n  </logfile>\n</logger>\n\n# <logger trace>\n#   level WARN\n#   <logfile>\n#     path $INSTANCE/log/trace.log\n#     format %(message)s\n#   </logfile>\n# </logger>\n\n\n# Directive: conflict-error-log-level\n#\n# Description:\n#     Specifies at which level conflict errors are logged. Conflict\n#     errors, when occuring in small numbers, are a normal part of the\n#     Zope optimistic transaction conflict resolution algorithms. They\n#     are retried automatically a few times, and are therefore usually\n#     not visible by the user. You can specify 'notset' if you don't\n#     want them logged, or use any other logger level (see above).\n#\n# Default: info\n#\n# Example:\n#\n#    conflict-error-log-level blather\nconflict-error-log-level debug\n\n\n# Directive: warnfilter\n#\n# Description:\n#     A section that allows you to define a warning filter.\n#     The following keys are valid within a warnfilter section:\n#\n#      action:  one of the following strings:\n#\n#           \"error\"   turn matching warnings into exceptions\n#           \"ignore\"  never print matching warnings\n#           \"always\"  always print matching warnings\n#           \"default\" print the first occurrence of matching warnings\n#                     for each location where the warning is issued\n#           \"module\"  print the first occurrence of matching warnings\n#                     for each module where the warning is issued\n#           \"once\"    print only the first occurrence of matching\n#                     warnings, regardless of location\n#\n#      message:  a string containing a regular expression that the\n#                warning message must match (the match is compiled to\n#                always be case-insensitive)\n#\n#      category: a Python dotted-path classname (must be a subclass of\n#                Warning) of which the warning category must be a subclass in\n#                order to match\n#\n#      module:   a string containing a regular expression that the\n#                module name must match (the match is compiled to be\n#                case-sensitive)\n#\n#      lineno:   an integer that the line number where the warning\n#                occurred must match, or 0 to match all line numbers\n#\n#     All keys within a warnfilter section are optional.  More than\n#     one warnfilter section may be specified.\n#\n# Default: unset\n#\n# Example:\n#\n#    <warnfilter>\n#       action ignore\n#       category exceptions.DeprecationWarning\n#    </warnfilter>\n\n\n# Directive: max-listen-sockets\n#\n# Description:\n#     The maximum number of sockets that ZServer will attempt to open\n#     in order to service incoming connections.\n#\n# Default: 1000\n#\n# Example:\n#\n#    max-listen-sockets 500\n\n\n# Directives: port-base\n#\n# Description:\n#     Offset applied to the port numbers used for ZServer\n#     configurations.  For example, if the http-server port is 8080 and\n#     the port-base is 1000, the HTTP server will listen on port 9320.\n#     This makes it easy to change the complete set of ports used by a\n#     Zope server process\n#\n# Default:\n#\n#     0\n#\n# Example:\n#\n#     port-base 1000\n\n\n# Directive: large-file-threshold\n#\n# Description:\n#     Requests bigger than this size get saved into a temporary file\n#     instead of being read completely into memory.\n#\n# Default: 512K\n#\n# Example:\n#\n#    large-file-threshold 1Mb\n\n# Directive: default-zpublisher-encoding\n#\n# Description:\n#     This controls what character set is used to encode unicode\n#     data that reaches ZPublisher without any other specified encoding.\n#\n# Default: iso-8859-15\n#\n# Example:\n#\n#    default-zpublisher-encoding utf-8\n\n# Directives: servers\n#\n# Description:\n#     A set of sections which allow the specification of Zope's various\n#     ZServer servers.  8 different server types may be defined:\n#     http-server, ftp-server, webdav-source-server, persistent-cgi,\n#     fast-cgi, monitor-server, icp-server, and clock-server.  If no servers\n#     are defined, the default servers are used.\n#\n#     Ports may be specified using the 'address' directive either in simple\n#     form (80) or in complex form including hostname 127.0.0.1:80.  If the\n#     hostname is \"left off\", the default-ip-address is used as the hostname.\n#\n#     Port numbers are offset by the setting of port-base.\n#\n#     To run the monitor-server an emergency user must be defined\n#     (through an 'access' file).\n#\n# Default:\n#\n#     An HTTP server starts on port 8080.\n\n<http-server>\n  # valid keys are \"address\" and \"force-connection-close\"\n  address 9320\n\n  # force-connection-close on\n  #\n  # You can also use the WSGI interface between ZServer and ZPublisher:\n  # use-wsgi on\n  #\n  # To defer the opening of the HTTP socket until the end of the\n  # startup phase:\n  # fast-listen off\n</http-server>\n\n# Examples:\n#\n#  <ftp-server>\n#    # valid key is \"address\"\n#    address 8021\n#  </ftp-server>\n#\n#  <webdav-source-server>\n#    # valid keys are \"address\" and \"force-connection-close\"\n#    address 1980\n#    force-connection-close off\n#  </webdav-source-server>\n#\n#  <persistent-cgi>\n#    # valid key is \"path\"\n#    path somefile\n#  </persistent-cgi>\n#\n#  <fast-cgi>\n#    # valid key is \"address\"; the address may be hostname:port, port,\n#    # or a path for a Unix-domain socket\n#    address somefile\n#  </fast-cgi>\n#\n#  <monitor-server>\n#    # valid keys are \"address\"\n#    address 8099\n#  </monitor-server>\n#\n#  <icp-server>\n#    # valid key is \"address\"\n#    address 888\n#  </icp-server>\n#\n#  <clock-server>\n#    # starts a clock which calls /foo/bar every 30 seconds\n#    method /foo/bar\n#    period 30\n#    user admin\n#    password 123\n#  </clock-server>\n\n# Database (zodb_db) section\n#\n# Description:\n#     A database section allows the definition of custom database and\n#     storage types.  More than one zodb_db section can be defined.\n#\n# Default: unset.\n#          IMPORTANT: At least one database with a mount-point of \"/\"\n#          must be specified for Zope to start properly.\n\n#<zodb_db main>\n#    # Main FileStorage database\n#    <filestorage>\n#      # See .../ZODB/component.xml for directives (sectiontype\n#      # \"filestorage\").\n#      path $INSTANCE/var/Data.fs\n#    </filestorage>\n#    mount-point /\n#</zodb_db>\n\n<zodb_db temporary>\n    # Session database storage\n    mount-point /temp_folder\n    %import relstorage\n    <relstorage>\n      keep-history false\n      %include zodb_db_session.conf\n    </relstorage>\n</zodb_db>\n\n# Other storage examples\n#\n# ZEO client storage:\n#\n<zodb_db main>\n  mount-point /\n  # ZODB cache, in number of objects\n  cache-size 100000\n  %import relstorage\n  <relstorage>\n    # Comment these out to stop using memcached\n    cache-servers 127.0.0.1:11211\n    cache-module-name memcache\n\n    # RelStorage caches pickled objects in memory, similar to a ZEO\n    # cache. This cache is shared between threads. This parameter\n    # configures the approximate maximum amount of memory the cache\n    # should consume, in megabytes.  It defaults to 10.\n    cache-local-mb {{percentScale .RAMCommitment 0.5 | bytesToMB}}\n\n\n    keep-history false\n    %include zodb_db_main.conf\n  </relstorage>\n</zodb_db>\n\n# Product configuration (product-config) section(s)\n#\n# Description:\n#    Add-on products may need to allow the user to specify policy /\n#    configuration.  Such policies may be expressed as a set of\n#    name-value pairs, grouped into a named section (there may\n#    be many such sections, typically one per product).\n#    These sections will be captured in an attribute, 'product_config'\n#    of the top-level config object, under the key corresponding to\n#    the section name.  E.g., the sample section below would be\n#    parsed into a dict, {'bar': 'baz'}, available as\n#    config.product_config['foo']\n#\n#    Products may also register their own section types, extending\n#\n#\n# Example:\n#\n# 1. Simple \"bag of strings\" section:\n#\n#    <product-config foo>\n#       bar baz\n#    </product-config>\n#\n# 2. Custom section type\n#\n#    Products/Foo/component.xml:\n#\n#    <component>\n#     <description>\n#       Some product-specific hackery.\n#     </description>\n#     <sectiontype name=\"myproduct\" implements=\"zope.product.base\">\n#      <description>\n#       Product-specific configuration.\n#      </description>\n#      <key name=\"foo\" />\n#     </sectiontype>\n#    </component>\n#\n#    In zope.conf:\n#\n#    %import Products.Foo\n#\n#    <myproduct bar>\n#      foo qux\n#    </myproduct>\n<product-config beaker>\n    cache.type              ext:memcached\n    cache.url               127.0.0.1:11211\n    cache.data_dir          /tmp/cache/data\n    cache.lock_dir          /tmp/cache/lock\n    cache.regions           short, long\n    cache.short.expire      60\n    cache.long.expire       3600\n\n    session.type            ext:memcached\n    session.url             127.0.0.1:11212\n    session.data_dir        /tmp/sessions/data\n    session.lock_dir        /tmp/sessions/lock\n    session.key             beaker.session\n    session.secret          {{ getContext . \"global.conf.zope-session-secret\" }}\n    session.secure          True\n</product-config>\n",
                "Filename": "/opt/zenoss/etc/zenapi.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "660"
            },
            "/opt/zenoss/etc/zodb_db_main.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      {{getContext . \"global.conf.zodb-db\"}}\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_main.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            },
            "/opt/zenoss/etc/zodb_db_session.conf": {
                "Content": "<mysql>\n    host    {{getContext . \"global.conf.zodb-host\"}}\n    port    {{getContext . \"global.conf.zodb-port\"}}\n    user    {{getContext . \"global.conf.zodb-user\"}}\n    passwd  {{getContext . \"global.conf.zodb-password\"}}\n    db      zodb_session\n</mysql>\n",
                "Filename": "/opt/zenoss/etc/zodb_db_session.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "0664"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "8iwmmy9ptzvbcg56eebnjyvwc",
        "PoolID": "default",
        "Prereqs": [
            {
                "Name": "MariaDB connectivity",
                "Script": "su - zenoss -c '/opt/zenoss/bin/python /opt/zenoss/Products/ZenUtils/ZenDB.py --usedb zodb --execsql=\";\"'"
            }
        ],
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "su - zenoss -c \"CONFIG_FILE=${ZENHOME:-/opt/zenoss}/etc/zenapi.conf /opt/zenoss/bin/runzope\" ",
        "Tags": [
            "daemon"
        ],
        "Title": "",
        "Version": "",
        "Volumes": [
            {
                "ContainerPath": "/opt/zenoss/.pc",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenoss-custom-patches-pc",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/patches",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenoss-custom-patches",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/log/jobs",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": "zenjobs",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/var/ext",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenoss-var-ext",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/export",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenoss-export",
                "Type": ""
            },
            {
                "ContainerPath": "/opt/zenoss/.ZenPacks",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zenpack-backup",
                "Type": ""
            },
            {
                "ContainerPath": "/home/zenoss/.ssh",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0755",
                "ResourcePath": ".ssh",
                "Type": ""
            },
            {
                "ContainerPath": "/var/zenoss",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "var-zenpacks",
                "Type": ""
            }
        ]
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "8iwmmy9ptzvbcg56eebnjyvwc",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "User Interface",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "bf71nji53ltppe87g8dxjn95x",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "",
        "Tags": [
            "zenoss-ui"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 0,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {},
        "Context": null,
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [],
        "Environment": null,
        "HealthChecks": null,
        "HostPolicy": "",
        "ID": "bf71nji53ltppe87g8dxjn95x",
        "ImageID": "",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 0
        },
        "Instances": 0,
        "Launch": "auto",
        "LogConfigs": null,
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Zenoss",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {},
        "PIDFile": "",
        "ParentServiceID": "9jjluaptpxzrj26ci8btujvdr",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 0,
        "Startup": "",
        "Tags": [
            "zenoss-application"
        ],
        "Title": "",
        "Version": "",
        "Volumes": null
    },
    {
        "Actions": null,
        "CPUCommitment": 1,
        "CPUShares": 0,
        "ChangeOptions": null,
        "Commands": null,
        "ConfigFiles": {
            "/etc/zproxy/zproxy_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/zproxy_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:redis]\ncommand=redis-server /etc/redis.conf\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:zproxy]\ncommand=/opt/zenoss/zproxy/sbin/zproxy start\ndirectory=/opt/zenoss\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:zproxy_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/zenossStatsView.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/zproxy/zproxy_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "644"
            },
            "/opt/zenoss/zproxy/conf/zproxy-disable-basic-auth.conf": {
                "Content": "# ZEN-30567: disallow basic auth on the glb\nset $auth_flags \"\";\nif ($http_via ~ 'google') {\n    set $auth_flags \"${auth_flags}1\";\n}\nif ($http_authorization ~ '(?i)^basic') {\n    set $auth_flags \"${auth_flags}1\";\n}\nif ($auth_flags = 11) {\n    return 403;\n}",
                "Filename": "/opt/zenoss/zproxy/conf/zproxy-disable-basic-auth.conf",
                "Owner": "",
                "Permissions": ""
            },
            "/opt/zenoss/zproxy/conf/zproxy-nginx.conf": {
                "Content": "##############################################################################\n#\n# Copyright (C) Zenoss, Inc. 2013, all rights reserved.\n#\n# This content is made available according to terms specified in\n# License.zenoss under the directory where your Zenoss product is installed.\n#\n##############################################################################\n\nworker_processes 2;\nerror_log /opt/zenoss/zproxy/logs/error.log error;\ndaemon off;\n\nuser zenoss;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n\n    access_log off;\n    error_log /opt/zenoss/zproxy/logs/error.log error;\n\n    lua_package_path \"./lib/lua/5.1/?.lua;;\";\n    lua_package_cpath \"./lib/?.so;./lib/lua/5.1/?.so;;\";\n    # Backend servers that did not respond\n    lua_shared_dict deads 10m;\n\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Forwarded-Port $server_port;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Forwarded-Protocol $scheme;\n    proxy_set_header X-Real-IP $remote_addr;\n\n    # Force cookies to HTTPOnly\n    proxy_cookie_path / \"/; HttpOnly\";\n\n    proxy_read_timeout 600;\n    proxy_connect_timeout 10;\n\n    proxy_temp_path /opt/zenoss/var/zproxy/proxy_temp;\n    client_body_temp_path /opt/zenoss/var/zproxy/client_body_temp;\n\n    gzip on;\n    gzip_comp_level 9;\n    gzip_proxied any;\n    gzip_min_length 1000;\n    gzip_buffers 4 32k;\n    gzip_types text/css text/plain application/atom+xml application/x-javascript application/javascript text/javascript;\n    gzip_disable msie6;\n    gzip_vary on;\n\n    resolver 8.8.8.8;\n\n    # this is needed to send the correct content type for things like css\n    include mime.types;\n\n    upstream zopes {\n        least_conn;\n        include zope-upstreams.conf;\n        keepalive 64;\n    }\n\n    upstream zopereports {\n        least_conn;\n        include zopereports-upstreams.conf;\n        keepalive 64;\n    }\n\n    upstream debugzopes {\n        least_conn;\n        server 127.0.0.1:9310;\n        keepalive 64;\n    }\n\n    upstream apizopes {\n        least_conn;\n        include apizopes-upstreams.conf;\n        keepalive 64;\n    }\n\n    upstream zauth {\n        least_conn;\n        include zauth-upstreams.conf;\n        keepalive 64;\n    }\n\n    map $host $whichzopes {\n        default zopes;\n        ~*zendebug debugzopes;\n        ~*zenapi apizopes;\n    }\n\n    pagespeed ListOutstandingUrlsOnError on;\n    pagespeed RewriteDeadlinePerFlushMs 100;\n    pagespeed RateLimitBackgroundFetches off;\n    pagespeed FileCachePath /opt/zenoss/var/zproxy/ngx_pagespeed_cache;\n    pagespeed ImageMaxRewritesAtOnce -1;\n    pagespeed StaticAssetPrefix \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/pagespeed_static/\";\n\n    server {\n\n        listen 8080;\n        set $myhost $http_host;\n        rewrite ^{{or (getContext . \"global.conf.cse-virtualroot\") \"/\"}}$ / break;\n        rewrite ^{{or (getContext . \"global.conf.cse-virtualroot\") \"/\"}}(.*)$ $1 break;\n\n        pagespeed on;\n        pagespeed RewriteLevel CoreFilters;\n        pagespeed EnableFilters add_instrumentation,move_css_above_scripts,move_css_to_head,rewrite_style_attributes,in_place_optimize_for_browser,dedup_inlined_images,prioritize_critical_css;\n        pagespeed RespectXForwardedProto on;\n        pagespeed AvoidRenamingIntrospectiveJavascript off;\n        pagespeed MaxCombinedJsBytes -1;\n        pagespeed JsInlineMaxBytes 102400;\n        pagespeed StatisticsPath \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/ngx_pagespeed_statistics\";\n        pagespeed Disallow \"*/api/metrics*\";\n        pagespeed Disallow \"*/api/performance*\";\n        pagespeed Disallow \"*/ws/metrics*\";\n        pagespeed Disallow \"*/ping/status*\";\n        pagespeed Disallow \"*/static/*\";\n        pagespeed Disallow \"*/impact_graph*\";\n        pagespeed Allow    \"*/impact_graph*.js\";\n\n        pagespeed BeaconUrl \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/ngx_pagespeed_beacon\";\n\n\n        # Ensure requests for pagespeed optimized resources go to the pagespeed handler\n        # and no extraneous headers get set.\n        location ~ \"\\.pagespeed\\.([a-z]\\.)?[a-z]{2}\\.[^.]{10}\\.[^.]+\" {\n         add_header \"\" \"\";\n        }\n        location ~ \"^{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/pagespeed_static/\" { }\n\n        location ~ \"^{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/ngx_pagespeed_beacon$\" {\n\n        }\n        location ~ \"^/ngx_pagespeed_statistics\" {\n        }\n\n        include zope-static.conf;\n\n        location / {\n            # ZEN-30567: disallow basic auth on the glb\n            include zproxy-disable-basic-auth.conf;\n\n            proxy_pass http://$whichzopes;\n            proxy_set_header Host $myhost;\n            proxy_http_version 1.1;\n            add_header X-Frame-Options SAMEORIGIN;\n            add_header X-XSS-Protection \"1; mode=block\";\n            add_header Referrer-Policy \"no-referrer-when-downgrade\";\n            add_header X-Content-Type-Options \"nosniff always\";\n            add_header Strict-Transport-Security \"max-age=31536000; includeSubdomains\";\n\n            sub_filter \"/zport/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/zport/\";\n            sub_filter \"/++\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/++\";\n            sub_filter \"/static/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/static/\";\n\n            # ZEN-31143 - The \"/pendostatic/\" is an artificial path element used to avoid conflicts\n            # between Pendo's \"/static/\" and RM's \"/static/\", so we have to replace it with the\n            # real path Pendo expects (i.e. \"/agent/static/...\").\n            sub_filter \"/agent/pendostatic/\" \"/agent/static/\";\n            sub_filter_once off;\n            sub_filter_types *;\n        }\n\n        location ~* ^/zport/acl_users/cookieAuthHelper/login {\n            # ZEN-30567: Disallow the basic auth login page.\n            return 403;\n        }\n\n        location ~* ^/zport/dmd/reports {\n            # ZEN-30567: disallow basic auth on the glb\n            include zproxy-disable-basic-auth.conf;\n\n            proxy_pass http://zopereports;\n            proxy_set_header Host $myhost;\n            proxy_http_version 1.1;\n            add_header X-Frame-Options SAMEORIGIN;\n            add_header X-XSS-Protection \"1; mode=block\";\n            sub_filter \"/zport/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/zport/\";\n            sub_filter \"/++\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/++\";\n            sub_filter \"/static/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/static/\";\n            sub_filter_once off;\n            sub_filter_types *;\n        }\n\n        location ^~ /ping/ {\n            include zenoss-zapp-ping-nginx.cfg;\n            proxy_no_cache 1;\n            proxy_cache_bypass 1;\n            proxy_set_header Host $myhost;\n            proxy_method HEAD;\n        }\n\n        location ^~ /api/controlplane/kibana {\n            set $http_ws true;\n            access_by_lua_file 'conf/zenoss-require-auth.lua';\n            proxy_pass http://127.0.0.1:5601;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"upgrade\";\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            rewrite /api/controlplane/kibana$ / break;\n            rewrite /api/controlplane/kibana/(.*)$ /$1 break;\n        }\n\n        # Legacy apps that don't do any auth validation\n        # Should 'include zenoss-legacy-nginx.cfg;'\n\n        # /api is for zapp rest APIs\n        location ^~ /api/ {\n            # ZEN-30731: Block basic auth through the GLB\n            include zproxy-disable-basic-auth.conf;\n            # Zapps do their own auth validation\n            include zenoss-zapp-nginx.cfg;\n            proxy_set_header Host $myhost;\n        }\n\n        # /ws is for zapp websockets\n        location ^~ /ws/ {\n            set $http_ws true;\n            # Zapps do their own auth validation\n            include zenoss-zapp-nginx.cfg;\n            proxy_set_header Host $myhost;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"upgrade\";\n        }\n\n        # /static is for static files\n        location ^~ /static/performance/query/visualization.js {\n            # set this header to dodge compression we can rewrite content\n            proxy_set_header Accept-Encoding \"\";\n            proxy_pass http://127.0.0.1:8888/static/performance/query/visualization.js;\n            # include zenoss-authenticated-nginx.cfg;\n            proxy_http_version 1.1;\n            sub_filter \"/static/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/static/\";\n            sub_filter \"/api/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/api/\";\n            sub_filter_once off;\n            sub_filter_types *;\n        }\n\n        location ^~ /static/performance/query/ {\n            # Static data should always be allowed\n            proxy_pass http://127.0.0.1:8888/static/performance/query;\n            # include zenoss-authenticated-nginx.cfg;\n            proxy_http_version 1.1;\n        }\n\n        # /zauth is for authentication and authorization\n        location ^~ /zauth/ {\n            proxy_pass http://zauth;\n            proxy_set_header Host $myhost;\n            proxy_http_version 1.1;\n            proxy_set_header  Accept-Encoding  \"\";\n            rewrite /zauth/api/login /authorization/login break;\n            rewrite /zauth/api/validate /authorization/validate break;\n        }\n    }\n}\n",
                "Filename": "/opt/zenoss/zproxy/conf/zproxy-nginx.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "644"
            }
        },
        "Context": {
            "ZenPack.Default.RAMCommitment": "1G",
            "ZenPack.Default.WorkerArgs": "--workers {{.Instances}} --workerid $CONTROLPLANE_INSTANCE_ID",
            "centralquery.ratecutoff": -1,
            "cse.api-key-server-ip": "",
            "cse.domain": "",
            "cse.fqn": "",
            "cse.project": "",
            "cse.source": "",
            "cse.tenant": "",
            "gcp.bigtable.instance": "",
            "gcp.bigtable.project": "",
            "gcp.bigtable.zone": "",
            "global.conf.amqpadminport": "55672",
            "global.conf.amqpadminusessl": "0",
            "global.conf.amqphost": "127.0.0.1",
            "global.conf.amqppassword": "zenoss",
            "global.conf.amqpport": "5672",
            "global.conf.amqpuser": "zenoss",
            "global.conf.amqpusessl": "0",
            "global.conf.amqpvhost": "/zenoss",
            "global.conf.auth0-audience": "https://dev.zing.ninja",
            "global.conf.auth0-emailkey": "https://dev.zing.ninja/email",
            "global.conf.auth0-tenant": "https://zenoss-dev.auth0.com/",
            "global.conf.auth0-tenantkey": "https://dev.zing.ninja/tenant",
            "global.conf.auth0-whitelist": "alphacorp",
            "global.conf.cse-vhost": "testcse",
            "global.conf.cse-virtualroot": "/cz",
            "global.conf.cse-zing-host": "zing.soy",
            "global.conf.cse-zing-port": "443",
            "global.conf.maxOutstandingMetrics": "1000000",
            "global.conf.solr-search-limit": "10000",
            "global.conf.zauth-password": "MY_PASSWORD",
            "global.conf.zauth-username": "zenoss_system",
            "global.conf.zcml-enable-impact-cse": "Feature",
            "global.conf.zep-admin-password": "",
            "global.conf.zep-admin-user": "root",
            "global.conf.zep-db": "zenoss_zep",
            "global.conf.zep-db-type": "mysql",
            "global.conf.zep-host": "127.0.0.1",
            "global.conf.zep-password": "zenoss",
            "global.conf.zep-port": "3306",
            "global.conf.zep-uri": "http://127.0.0.1:8084",
            "global.conf.zep-user": "zenoss",
            "global.conf.zing-connector-url": "http://localhost:9237",
            "global.conf.zodb-admin-password": "",
            "global.conf.zodb-admin-user": "root",
            "global.conf.zodb-cache-max-object-size": "1048576",
            "global.conf.zodb-cacheservers": "127.0.0.1:11211",
            "global.conf.zodb-cachesize": "1000",
            "global.conf.zodb-db": "zodb",
            "global.conf.zodb-db-type": "mysql",
            "global.conf.zodb-host": "127.0.0.1 ",
            "global.conf.zodb-password": "zenoss",
            "global.conf.zodb-port": "3306",
            "global.conf.zodb-user": "zenoss",
            "global.conf.zope-session-secret": "supersecret",
            "tsd.storage.enable_compaction": "False"
        },
        "DatabaseVersion": 1,
        "DeploymentID": "dev7013",
        "Description": "Zenoss Resource Manager",
        "DisableImage": false,
        "DisableShell": false,
        "Endpoints": [
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zproxy",
                "ApplicationTemplate": "zproxy",
                "Name": "zproxy",
                "PortList": [],
                "PortNumber": 8080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "export",
                "VHostList": [
                    {
                        "Enabled": false,
                        "Name": "zendebug"
                    },
                    {
                        "Enabled": false,
                        "Name": "zenapi"
                    }
                ],
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zope",
                "ApplicationTemplate": "zope",
                "Name": "zope",
                "PortList": null,
                "PortNumber": 9080,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zenreports",
                "ApplicationTemplate": "zenreports",
                "Name": "zenreports",
                "PortList": null,
                "PortNumber": 9290,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zendebug",
                "ApplicationTemplate": "zendebug",
                "Name": "zendebug",
                "PortList": null,
                "PortNumber": 9310,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zenapi",
                "ApplicationTemplate": "zenapi",
                "Name": "zenapi",
                "PortList": null,
                "PortNumber": 9320,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "metric_consumer",
                "ApplicationTemplate": "metric_consumer",
                "Name": "metric_consumer",
                "PortList": null,
                "PortNumber": 8443,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "zauth",
                "ApplicationTemplate": "zauth",
                "Name": "zauth",
                "PortList": null,
                "PortNumber": 9180,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import_all",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            },
            {
                "AddressAssignment": {
                    "AssignmentType": "",
                    "EndpointName": "",
                    "HostID": "",
                    "ID": "",
                    "IPAddr": "",
                    "PoolID": "",
                    "Port": 0,
                    "ServiceID": ""
                },
                "AddressConfig": {
                    "Port": 0,
                    "Protocol": ""
                },
                "Application": "central_query",
                "ApplicationTemplate": "central_query",
                "Name": "central_query",
                "PortList": null,
                "PortNumber": 8888,
                "PortTemplate": "",
                "Protocol": "tcp",
                "Purpose": "import",
                "VHostList": null,
                "VHosts": null,
                "VirtualAddress": ""
            }
        ],
        "Environment": null,
        "HealthChecks": {
            "answering": {
                "Interval": 5,
                "Script": "/opt/zenoss/bin/healthchecks/zproxy_answering",
                "Timeout": 0,
                "Tolerance": 0
            },
            "ready": {
                "Interval": 30,
                "Script": "curl -A 'Zenoss ready healthcheck' --output /dev/null --silent --write-out \"%{http_code}\" http://localhost:8080/robots.txt | grep 200 >/dev/null",
                "Timeout": 0,
                "Tolerance": 0
            },
            "running": {
                "Interval": 5,
                "Script": "pgrep -fu zenoss nginx >/dev/null",
                "Timeout": 0,
                "Tolerance": 0
            }
        },
        "HostPolicy": "",
        "ID": "9jjluaptpxzrj26ci8btujvdr",
        "ImageID": "9jjluaptpxzrj26ci8btujvdr/devimg:latest",
        "InstanceLimits": {
            "Default": 0,
            "Max": 0,
            "Min": 1
        },
        "Instances": 1,
        "Launch": "auto",
        "LogConfigs": [
            {
                "Filters": [
                    "nginx_access"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/zproxy/logs/access.log",
                "Type": "zproxy"
            },
            {
                "Filters": [
                    "nginx_error"
                ],
                "IsAudit": false,
                "LogTags": null,
                "Path": "/opt/zenoss/zproxy/logs/error.log",
                "Type": "zproxy"
            }
        ],
        "MemoryLimit": 0,
        "MonitoringProfile": {
            "GraphConfigs": [],
            "MetricConfigs": [],
            "ThresholdConfigs": []
        },
        "Name": "Zenoss.cse",
        "OomKillDisable": false,
        "OomScoreAdj": 0,
        "OriginalConfigs": {
            "/etc/zproxy/zproxy_supervisor.conf": {
                "Content": "[supervisord]\nnodaemon=true\nlogfile = /opt/zenoss/log/zproxy_supervisord.log\n\n[unix_http_server]\nfile=/tmp/supervisor.sock\n\n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[program:redis]\ncommand=redis-server /etc/redis.conf\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:zproxy]\ncommand=/opt/zenoss/zproxy/sbin/zproxy start\ndirectory=/opt/zenoss\nautorestart=true\nautostart=true\nstartsecs=5\npriority=1\n\n[program:zproxy_metrics]\ncommand=/usr/bin/python /opt/zenoss/bin/metrics/zenossStatsView.py\nautorestart=true\nautostart=true\nstartsecs=5\n\n; logging\nredirect_stderr=true\nstdout_logfile_maxbytes=10MB\nstdout_logfile_backups=10\nstdout_logfile=/opt/zenoss/log/%(program_name)s.log\n",
                "Filename": "/etc/zproxy/zproxy_supervisor.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "644"
            },
            "/opt/zenoss/zproxy/conf/zproxy-disable-basic-auth.conf": {
                "Content": "# ZEN-30567: disallow basic auth on the glb\nset $auth_flags \"\";\nif ($http_via ~ 'google') {\n    set $auth_flags \"${auth_flags}1\";\n}\nif ($http_authorization ~ '(?i)^basic') {\n    set $auth_flags \"${auth_flags}1\";\n}\nif ($auth_flags = 11) {\n    return 403;\n}",
                "Filename": "/opt/zenoss/zproxy/conf/zproxy-disable-basic-auth.conf",
                "Owner": "",
                "Permissions": ""
            },
            "/opt/zenoss/zproxy/conf/zproxy-nginx.conf": {
                "Content": "##############################################################################\n#\n# Copyright (C) Zenoss, Inc. 2013, all rights reserved.\n#\n# This content is made available according to terms specified in\n# License.zenoss under the directory where your Zenoss product is installed.\n#\n##############################################################################\n\nworker_processes 2;\nerror_log /opt/zenoss/zproxy/logs/error.log error;\ndaemon off;\n\nuser zenoss;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n\n    access_log off;\n    error_log /opt/zenoss/zproxy/logs/error.log error;\n\n    lua_package_path \"./lib/lua/5.1/?.lua;;\";\n    lua_package_cpath \"./lib/?.so;./lib/lua/5.1/?.so;;\";\n    # Backend servers that did not respond\n    lua_shared_dict deads 10m;\n\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Forwarded-Port $server_port;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Forwarded-Protocol $scheme;\n    proxy_set_header X-Real-IP $remote_addr;\n\n    # Force cookies to HTTPOnly\n    proxy_cookie_path / \"/; HttpOnly\";\n\n    proxy_read_timeout 600;\n    proxy_connect_timeout 10;\n\n    proxy_temp_path /opt/zenoss/var/zproxy/proxy_temp;\n    client_body_temp_path /opt/zenoss/var/zproxy/client_body_temp;\n\n    gzip on;\n    gzip_comp_level 9;\n    gzip_proxied any;\n    gzip_min_length 1000;\n    gzip_buffers 4 32k;\n    gzip_types text/css text/plain application/atom+xml application/x-javascript application/javascript text/javascript;\n    gzip_disable msie6;\n    gzip_vary on;\n\n    resolver 8.8.8.8;\n\n    # this is needed to send the correct content type for things like css\n    include mime.types;\n\n    upstream zopes {\n        least_conn;\n        include zope-upstreams.conf;\n        keepalive 64;\n    }\n\n    upstream zopereports {\n        least_conn;\n        include zopereports-upstreams.conf;\n        keepalive 64;\n    }\n\n    upstream debugzopes {\n        least_conn;\n        server 127.0.0.1:9310;\n        keepalive 64;\n    }\n\n    upstream apizopes {\n        least_conn;\n        include apizopes-upstreams.conf;\n        keepalive 64;\n    }\n\n    upstream zauth {\n        least_conn;\n        include zauth-upstreams.conf;\n        keepalive 64;\n    }\n\n    map $host $whichzopes {\n        default zopes;\n        ~*zendebug debugzopes;\n        ~*zenapi apizopes;\n    }\n\n    pagespeed ListOutstandingUrlsOnError on;\n    pagespeed RewriteDeadlinePerFlushMs 100;\n    pagespeed RateLimitBackgroundFetches off;\n    pagespeed FileCachePath /opt/zenoss/var/zproxy/ngx_pagespeed_cache;\n    pagespeed ImageMaxRewritesAtOnce -1;\n    pagespeed StaticAssetPrefix \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/pagespeed_static/\";\n\n    server {\n\n        listen 8080;\n        set $myhost $http_host;\n        rewrite ^{{or (getContext . \"global.conf.cse-virtualroot\") \"/\"}}$ / break;\n        rewrite ^{{or (getContext . \"global.conf.cse-virtualroot\") \"/\"}}(.*)$ $1 break;\n\n        pagespeed on;\n        pagespeed RewriteLevel CoreFilters;\n        pagespeed EnableFilters add_instrumentation,move_css_above_scripts,move_css_to_head,rewrite_style_attributes,in_place_optimize_for_browser,dedup_inlined_images,prioritize_critical_css;\n        pagespeed RespectXForwardedProto on;\n        pagespeed AvoidRenamingIntrospectiveJavascript off;\n        pagespeed MaxCombinedJsBytes -1;\n        pagespeed JsInlineMaxBytes 102400;\n        pagespeed StatisticsPath \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/ngx_pagespeed_statistics\";\n        pagespeed Disallow \"*/api/metrics*\";\n        pagespeed Disallow \"*/api/performance*\";\n        pagespeed Disallow \"*/ws/metrics*\";\n        pagespeed Disallow \"*/ping/status*\";\n        pagespeed Disallow \"*/static/*\";\n        pagespeed Disallow \"*/impact_graph*\";\n        pagespeed Allow    \"*/impact_graph*.js\";\n\n        pagespeed BeaconUrl \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/ngx_pagespeed_beacon\";\n\n\n        # Ensure requests for pagespeed optimized resources go to the pagespeed handler\n        # and no extraneous headers get set.\n        location ~ \"\\.pagespeed\\.([a-z]\\.)?[a-z]{2}\\.[^.]{10}\\.[^.]+\" {\n         add_header \"\" \"\";\n        }\n        location ~ \"^{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/pagespeed_static/\" { }\n\n        location ~ \"^{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/ngx_pagespeed_beacon$\" {\n\n        }\n        location ~ \"^/ngx_pagespeed_statistics\" {\n        }\n\n        include zope-static.conf;\n\n        location / {\n            # ZEN-30567: disallow basic auth on the glb\n            include zproxy-disable-basic-auth.conf;\n\n            proxy_pass http://$whichzopes;\n            proxy_set_header Host $myhost;\n            proxy_http_version 1.1;\n            add_header X-Frame-Options SAMEORIGIN;\n            add_header X-XSS-Protection \"1; mode=block\";\n            add_header Referrer-Policy \"no-referrer-when-downgrade\";\n            add_header X-Content-Type-Options \"nosniff always\";\n            add_header Strict-Transport-Security \"max-age=31536000; includeSubdomains\";\n\n            sub_filter \"/zport/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/zport/\";\n            sub_filter \"/++\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/++\";\n            sub_filter \"/static/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/static/\";\n\n            # ZEN-31143 - The \"/pendostatic/\" is an artificial path element used to avoid conflicts\n            # between Pendo's \"/static/\" and RM's \"/static/\", so we have to replace it with the\n            # real path Pendo expects (i.e. \"/agent/static/...\").\n            sub_filter \"/agent/pendostatic/\" \"/agent/static/\";\n            sub_filter_once off;\n            sub_filter_types *;\n        }\n\n        location ~* ^/zport/acl_users/cookieAuthHelper/login {\n            # ZEN-30567: Disallow the basic auth login page.\n            return 403;\n        }\n\n        location ~* ^/zport/dmd/reports {\n            # ZEN-30567: disallow basic auth on the glb\n            include zproxy-disable-basic-auth.conf;\n\n            proxy_pass http://zopereports;\n            proxy_set_header Host $myhost;\n            proxy_http_version 1.1;\n            add_header X-Frame-Options SAMEORIGIN;\n            add_header X-XSS-Protection \"1; mode=block\";\n            sub_filter \"/zport/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/zport/\";\n            sub_filter \"/++\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/++\";\n            sub_filter \"/static/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/static/\";\n            sub_filter_once off;\n            sub_filter_types *;\n        }\n\n        location ^~ /ping/ {\n            include zenoss-zapp-ping-nginx.cfg;\n            proxy_no_cache 1;\n            proxy_cache_bypass 1;\n            proxy_set_header Host $myhost;\n            proxy_method HEAD;\n        }\n\n        location ^~ /api/controlplane/kibana {\n            set $http_ws true;\n            access_by_lua_file 'conf/zenoss-require-auth.lua';\n            proxy_pass http://127.0.0.1:5601;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"upgrade\";\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            rewrite /api/controlplane/kibana$ / break;\n            rewrite /api/controlplane/kibana/(.*)$ /$1 break;\n        }\n\n        # Legacy apps that don't do any auth validation\n        # Should 'include zenoss-legacy-nginx.cfg;'\n\n        # /api is for zapp rest APIs\n        location ^~ /api/ {\n            # ZEN-30731: Block basic auth through the GLB\n            include zproxy-disable-basic-auth.conf;\n            # Zapps do their own auth validation\n            include zenoss-zapp-nginx.cfg;\n            proxy_set_header Host $myhost;\n        }\n\n        # /ws is for zapp websockets\n        location ^~ /ws/ {\n            set $http_ws true;\n            # Zapps do their own auth validation\n            include zenoss-zapp-nginx.cfg;\n            proxy_set_header Host $myhost;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"upgrade\";\n        }\n\n        # /static is for static files\n        location ^~ /static/performance/query/visualization.js {\n            # set this header to dodge compression we can rewrite content\n            proxy_set_header Accept-Encoding \"\";\n            proxy_pass http://127.0.0.1:8888/static/performance/query/visualization.js;\n            # include zenoss-authenticated-nginx.cfg;\n            proxy_http_version 1.1;\n            sub_filter \"/static/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/static/\";\n            sub_filter \"/api/\" \"{{or (getContext . \"global.conf.cse-virtualroot\") \"\"}}/api/\";\n            sub_filter_once off;\n            sub_filter_types *;\n        }\n\n        location ^~ /static/performance/query/ {\n            # Static data should always be allowed\n            proxy_pass http://127.0.0.1:8888/static/performance/query;\n            # include zenoss-authenticated-nginx.cfg;\n            proxy_http_version 1.1;\n        }\n\n        # /zauth is for authentication and authorization\n        location ^~ /zauth/ {\n            proxy_pass http://zauth;\n            proxy_set_header Host $myhost;\n            proxy_http_version 1.1;\n            proxy_set_header  Accept-Encoding  \"\";\n            rewrite /zauth/api/login /authorization/login break;\n            rewrite /zauth/api/validate /authorization/validate break;\n        }\n    }\n}\n",
                "Filename": "/opt/zenoss/zproxy/conf/zproxy-nginx.conf",
                "Owner": "zenoss:zenoss",
                "Permissions": "644"
            }
        },
        "PIDFile": "",
        "ParentServiceID": "",
        "PoolID": "default",
        "Prereqs": null,
        "Privileged": false,
        "RAMCommitment": "1G",
        "RAMThreshold": 0,
        "RunAs": "",
        "Runs": null,
        "Snapshot": {
            "Pause": "",
            "Resume": ""
        },
        "StartLevel": 2,
        "Startup": "/bin/supervisord -n -c /etc/zproxy/zproxy_supervisor.conf",
        "Tags": [
            "daemon"
        ],
        "Title": "zproxy",
        "Version": "7.0.13",
        "Volumes": [
            {
                "ContainerPath": "/opt/zenoss/var/zproxy",
                "ExcludeFromBackups": false,
                "InitContainerPath": "",
                "Owner": "zenoss:zenoss",
                "Permission": "0775",
                "ResourcePath": "zproxy",
                "Type": "tmp"
            }
        ]
    }
]
