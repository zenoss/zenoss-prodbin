# Any line not starting with a positive integer is a new line in a multiline message.

multiline {
    pattern => "^%{POSINT}"
    negate => true
    what => "previous"
}

grok {
    break_on_match => true

    # Match messages like this:
    # 34:M 30 Aug 16:48:40.292 # Server started, Redis version 3.2.3

    match => [ "message", "%{POSINT:pid}:(?<role>[XCSM]) %{DATA:datetime} (?<loglevel>[.\-*#]) %{DATA:message}" ]
}

mutate {
    gsub => [ "role", "X", "sentinel" ]
    gsub => [ "role", "C", "RDB/AOF writing child" ]
    gsub => [ "role", "S", "slave" ]
    gsub => [ "role", "M", "master" ]
    gsub => [ "loglevel", "\.", "DEBUG" ]
    gsub => [ "loglevel", "\-", "TRACE" ]
    gsub => [ "loglevel", "\*", "INFO" ]
    gsub => [ "loglevel", "#", "WARN" ]
}

# This filter parses the datetime field into a time value,
# removes the datetime field from the data, and
# then uses the parsed value as the "@timestamp" for the message.

date {
    match => [ "datetime", "d MMM HH:mm:ss.SSS", "dd MMM HH:mm:ss.SSS" ]
    remove_field => ["datetime"]
}
