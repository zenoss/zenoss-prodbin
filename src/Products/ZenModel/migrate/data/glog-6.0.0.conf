#
# This filter should be used for all logs produced by the glog and/or logrus libraries.
# It is a little different from other filters because it has to juggle
# rules for lines that might be in one of two different formats
#

# If it doesn't start with a single-char (log level) and a 2-digit month, or
# "time=", then it is part of the same log message
multiline {
    pattern => "^([IEWF]0?[1-9]|1[0-2] |time=)"
    negate => true
    what => "previous"
}

grok {
    # Match lines of either the glog format:
    #   'I0721 15:10:59.685251 00048 main.go:319] Serve: getConnection'
    # or the logrus format:
    #   'time="2017-08-17T15:55:30Z" level=info msg=starting numprocs=4'
    match => { "message" => [
        "time=\"%{TIMESTAMP_ISO8601:datetime}\" level=%{LOGLEVEL:loglevel} msg=%{GREEDYDATA:logrus_msg}",
        "(?<loglevel>[IEWF])%{MONTHNUM:month}%{MONTHDAY:day} %{TIME:time} %{NUMBER:thread} %{USER:logger}:%{INT:linenumber}\] %{GREEDYDATA:glog_msg}"
    ]}
    break_on_match => true
}

if [logrus_msg] {
    # normalize logrus-formatted data
    mutate {
        gsub => [
            "loglevel", "info", "INFO",
            "loglevel", "warning", "WARN",
            "loglevel", "error", "ERROR",
            "loglevel", "debug", "DEBUG",
            "loglevel", "fatal", "FATAL",
            "loglevel", "panic", "FATAL"
        ]
        gsub => [ "datetime", "T", " " ]
        remove_field => [ "logrus_msg" ]
    }

    date {
        match => [ "datetime", "yyyy-MM-dd HH:mm:ssZ" ]
        remove_field => ["datetime"]
    }
} else {
    # normalize glog-formatted data
    mutate {
        gsub => [
            "loglevel", "^I$", "INFO",
            "loglevel", "^W$", "WARN",
            "loglevel", "^E$", "ERROR",
            "loglevel", "^F$", "FATAL"
        ]
        add_field => {
            "datetime" => "%{month}-%{day} %{time}"
        }
        remove_field => [ "month", "day", "time", "glog_msg" ]
    }

    date {
        match => [ "datetime", "MM-dd HH:mm:ss.SSSSSS" ]
        remove_field => ["datetime"]
    }
}
