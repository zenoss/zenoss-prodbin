#
# This filter should be used for zeneventserver-stdio logs.
#

# New lines start with a date.
# (We get some messages from stdout logback that are timestamp.  This will roll those up under the last valid line.)
multiline {
    pattern => "^\s|[0-9]*-[0-9]*-[0-9]*"
    negate => true
    what => "previous"
}

grok {
    # Matches: [2017-07-06 17:16:23.807:INFO:zeneventserver:Initializing Spring root WebApplicationContex]
    match => { "message" => "^%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}.%{INT:milliseconds}:%{WORD:loglevel}" }
}

# form the full datetime.
mutate {
    add_field => {
        "datetime" => "%{year}-%{month}-%{day} %{time}.%{milliseconds}"
    }

    remove_field => [ "year", "month", "day", "time", "milliseconds" ]
}

# This filter parses the datetime field into a time value,
# removes the datetime field from the data, and
# then uses the parsed value as the "@timestamp" for the message.
date {
    match => [ "datetime", "yyyy-MM-dd HH:mm:ss.SSS" ]
    remove_field => [ "datetime" ]
}
