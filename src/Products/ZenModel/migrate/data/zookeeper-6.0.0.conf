#
# This filter should be used for zookeeper logs.
#

# New lines start with a date. All other lines are rolled into the previous line.
multiline {
    pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY}"
    negate => true
    what => "previous"
}

grok {
    # Matches: [2017-08-24 13:20:37,311 [myid:] - INFO  [main:ZooKeeperServer@726] - tickTime set to 2000]
    match => { "message" => [
        "^%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time},%{INT:milliseconds} \[%{DATA:myid}\] - %{WORD:loglevel}[ ]+\[%{DATA:thread}\] - ",
        "^JMX enabled by %{GREEDYDATA:header_msg}",
        "^Using config: %{GREEDYDATA:header_msg}"
    ]}
    break_on_match => true
}

# Drop the two header messages completely, but keep any other messages.
if [header_msg] {
    drop { }
} else {
    mutate {
        add_field => {
            "datetime" => "%{year}-%{month}-%{day} %{time}.%{milliseconds}"
        }
    
        remove_field => [ "year", "month", "day", "time", "milliseconds", "myid" ]
    }
    
    # This filter parses the datetime field into a time value,
    # removes the datetime field from the data, and
    # then uses the parsed value as the "@timestamp" for the message.
    date {
        match => [ "datetime", "yyyy-MM-dd HH:mm:ss.SSS" ]
        remove_field => [ "datetime" ]
    }
}