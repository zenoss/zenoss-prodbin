{
    "#####": [
        "This file is the default template for ZenPack service definitions.",
        "Before being passed to controlcenter, a python string formatting operation",
        "will be performed on it. The mapping keys for formatting are:",
        "    %(daemon)s : The name of the daemon (e.g., zenping)",
        "    %(zenhome)s : The location of $ZENHOME (e.g., /opt/zenoss)",
        "    %(daemonpath)s : The absolute path of of the daemon executable",
        "    %(daemondir)s : The directory in which daemon is located"
    ],
    "Actions": {
        "debug": "su - zenoss -c '%(zenhome)s/bin/%(daemon)s debug'",
        "stats": "su - zenoss -c '%(zenhome)s/bin/%(daemon)s stats'"
    },
    "Command": "su - zenoss -c \"%(zenhome)s/bin/%(daemon)s run -c --logfileonly %(ZenPack.Default.WorkerArgs)s --monitor {{(parent .).Name}}\"",
    "ConfigFiles": {
        "%(zenhome)s/etc/%(daemon)s.conf": {
            "####": "Note: Contents defined by the output of '%(daemon)s genconf' ",
            "Content": "",
            "FileName": "%(zenhome)s/etc/%(daemon)s.conf",
            "Owner": "zenoss:zenoss",
            "Permissions": "0664"
        }
    },
    "Endpoints": [
        {
            "Name": "zproxy",
            "Application": "zproxy",
            "PortNumber": 8080,
            "Protocol": "tcp",
            "Purpose": "import"
        },{
            "Name": "zenhub",
            "Application": "{{(parent (parent .)).Name}}_zenhubPB",
            "PortNumber": 8789,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Name": "CollectorRedis",
            "Application": "{{(parent .).Name}}_redis",
            "PortNumber": 6379,
            "Protocol": "tcp",
            "Purpose": "import"
        },
        {
            "Name": "controlplane_consumer",
            "Application": "controlplane_consumer",
            "PortNumber": 8444,
            "Protocol": "tcp",
            "Purpose": "import"
        }
    ],
    "ImageID": "",
    "Instances": {
        "min": 1
    },
    "ChangeOptions": [
        "restartAllOnInstanceChanged"
    ],
    "Launch": "auto",
    "LogConfigs": [
        {
            "LogTags": [
                {
                    "Name": "monitor",
                    "Value": "{{(parent .).Name}}"
                }
            ],
            "filters": [
                "pythondaemon"
            ],
            "path": "%(zenhome)s/log/%(daemon)s.log",
            "type": "%(daemon)s"
        },
        {
            "filters": [
                "supervisord"
            ],
            "path": "%(zenhome)s/log/audit.log",
            "type": "zenossaudit"
        }
    ],
    "Name": "%(daemon)s",
    "Tags": [
        "daemon",
        "collector"
    ],
    "MonitoringProfile": {
        "MetricConfigs": [
            {
                "ID": "%(daemon)s",
                "Name": "%(daemon)s internal metrics",
                "Description": "%(daemon)s internal metrics",
                "Metrics": [
                    {"ID": "dataPoints", "Name":"Datapoints", "Description": "Number of datapoints collected.", "Counter": false},
                    {"ID": "devices", "Name":"Devices", "Description": "Number of devices.", "Counter": false},
                    {"ID": "eventCount", "Name":"Event Count", "Description": "Total number of events.", "Counter": true},
                    {"ID": "eventQueueLength", "Name":"Event Queue Length", "Description":"The number of events pending to be flushed from a daemon's memory queue.", "Counter": false},
                    {"ID": "missedRuns", "Name":"Missed Runs", "Description": "Number of missed runs of tasks running on daemon.", "Counter": true},
                    {"ID": "queuedTasks", "Name":"Queued Tasks", "Description": "Number of tasks scheduled to be run, but are not running yet.", "Counter": false},
                    {"ID": "runningTasks", "Name":"Running Tasks", "Description": "Number of currently running tasks.", "Counter": false},
                    {"ID": "taskCount", "Name":"Task Count", "Description": "Total number of tasks.", "Counter": false}
                ]
            }
        ],
        "GraphConfigs": [
            {
                "id": "dataPoints",
                "name": "Data Points",
                "footer": false,
                "format": "%%d",
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Data Points",
                "description": "Number of datapoints collected.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator":   "avg",
                        "fill":         false,
                        "format":       "%%d",
                        "id":           "dataPoints",
                        "legend":       "Data Points",
                        "metric":       "dataPoints",
                        "metricSource": "dataPoints",
                        "name":         "Data Points",
                        "rate":         false,
                        "type":         "line"
                    }
                ]
            },
            {
                "id": "devices",
                "name": "Devices",
                "footer": false,
                "format": "%%d",
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Devices",
                "description": "Number of devices.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator":   "avg",
                        "fill":         false,
                        "format":       "%%d",
                        "id":           "devices",
                        "legend":       "Devices",
                        "metric":       "devices",
                        "metricSource": "devices",
                        "name":         "Devices",
                        "rate":         false,
                        "type":         "line"
                    }
                ]
            },
            {
                "id": "eventCount",
                "name": "Event Count",
                "footer": false,
                "format": "%%d",
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Event Count",
                "description": "Total number of events.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator":   "avg",
                        "fill":         false,
                        "format":       "%%d",
                        "id":           "eventCount",
                        "legend":       "Event Count",
                        "metric":       "eventCount",
                        "metricSource": "eventCount",
                        "name":         "Event Count",
                        "rate":         true,
                        "type":         "line"
                    }
                ]
            },
            {
                "id": "eventQueueLength",
                "name": "Event Queue Length",
                "footer": false,
                "format": "%%d",
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Event Queue Length",
                "description": "The number of events pending to be flushed from a daemon's memory queue.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator":   "avg",
                        "fill":         false,
                        "format":       "%%d",
                        "id":           "eventQueueLength",
                        "legend":       "Event Queue Length",
                        "metric":       "eventQueueLength",
                        "metricSource": "eventQueueLength",
                        "name":         "Event Queue Length",
                        "rate":         false,
                        "type":         "line"
                    }
                ]
            },
            {
                "id": "missedRuns",
                "name": "Missed Runs",
                "footer": false,
                "format": "%%d",
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "Missed Runs",
                "description": "Number of missed runs of tasks running on daemon.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator":   "avg",
                        "fill":         false,
                        "format":       "%%d",
                        "id":           "missedRuns",
                        "legend":       "Missed Runs",
                        "metric":       "missedRuns",
                        "metricSource": "missedRuns",
                        "name":         "Missed Runs",
                        "rate":         true,
                        "type":         "line"
                    }
                ]
            },
            {
                "id": "tasks",
                "name": "Tasks",
                "footer": false,
                "format": "%%d",
                "returnset": "EXACT",
                "type": "line",
                "yAxisLabel": "",
                "description": "Number of queued, running, and total tasks.",
                "range": {
                    "start": "1h-ago",
                    "end": "0s-ago"
                },
                "datapoints": [
                    {
                        "aggregator":   "avg",
                        "fill":         false,
                        "format":       "%%d",
                        "id":           "queuedTasks",
                        "legend":       "Queued Tasks",
                        "metric":       "queuedTasks",
                        "metricSource": "queuedTasks",
                        "name":         "Queued Tasks",
                        "rate":         false,
                        "type":         "line"
                    },
                    {
                        "aggregator":   "avg",
                        "fill":         false,
                        "format":       "%%d",
                        "id":           "runningTasks",
                        "legend":       "Running Tasks",
                        "metric":       "runningTasks",
                        "metricSource": "runningTasks",
                        "name":         "Running Tasks",
                        "rate":         false,
                        "type":         "line"
                    },
                    {
                        "aggregator":   "avg",
                        "fill":         false,
                        "format":       "%%d",
                        "id":           "taskCount",
                        "legend":       "Task Count",
                        "metric":       "taskCount",
                        "metricSource": "taskCount",
                        "name":         "Task Count",
                        "rate":         false,
                        "type":         "line"
                    }
                ]
            }
        ]
    },
    "HealthChecks": {
        "zenhub_answering": {
            "Script": "sh -c 'echo hi && sleep 1' | nc 127.0.0.1 8789 | grep -q pb",
            "Interval": 10.0
        },
        "redis_answering": {
            "Script": "redis-cli ping | grep -q PONG",
            "Interval": 10.0
        }
    },
    "RAMCommitment": "%(ZenPack.Default.RAMCommitment)s",
    "Volumes": [
        {
            "Owner": "zenoss:zenoss",
            "Permission": "0755",
            "ResourcePath": ".ssh",
            "ContainerPath": "/home/zenoss/.ssh",
            "Type":""
        },
        {
            "Owner": "zenoss:zenoss",
            "ResourcePath": "var-zenpacks",
            "ContainerPath": "%(varpath)s",
            "Permission": "0775"
        }
    ]
}
